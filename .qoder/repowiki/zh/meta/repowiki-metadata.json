{"knowledge_relations":[{"id":2541,"source_id":"33b5cf90-e616-4bc6-b3d6-1f1845b8c462","target_id":"3a999017-e5fe-47ba-9062-c23558bdd5b1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 33b5cf90-e616-4bc6-b3d6-1f1845b8c462 -\u003e 3a999017-e5fe-47ba-9062-c23558bdd5b1","gmt_create":"2025-10-26T12:24:07.542541+08:00","gmt_modified":"2025-10-26T12:24:07.542541+08:00"},{"id":2542,"source_id":"33b5cf90-e616-4bc6-b3d6-1f1845b8c462","target_id":"e1dbed83-c531-4b38-915b-05b93c967ecf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 33b5cf90-e616-4bc6-b3d6-1f1845b8c462 -\u003e e1dbed83-c531-4b38-915b-05b93c967ecf","gmt_create":"2025-10-26T12:24:07.552162+08:00","gmt_modified":"2025-10-26T12:24:07.552162+08:00"},{"id":2543,"source_id":"33b5cf90-e616-4bc6-b3d6-1f1845b8c462","target_id":"18dd825f-cbf1-4044-bbb6-8952b7ad60a2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 33b5cf90-e616-4bc6-b3d6-1f1845b8c462 -\u003e 18dd825f-cbf1-4044-bbb6-8952b7ad60a2","gmt_create":"2025-10-26T12:24:07.556617+08:00","gmt_modified":"2025-10-26T12:24:07.556617+08:00"},{"id":2544,"source_id":"33b5cf90-e616-4bc6-b3d6-1f1845b8c462","target_id":"ecbf7190-50f8-4c7c-be00-763ac6f2f55b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 33b5cf90-e616-4bc6-b3d6-1f1845b8c462 -\u003e ecbf7190-50f8-4c7c-be00-763ac6f2f55b","gmt_create":"2025-10-26T12:24:07.565227+08:00","gmt_modified":"2025-10-26T12:24:07.565227+08:00"},{"id":2545,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 9faa7013-dcfb-49f3-9817-7f3bd2aec201","gmt_create":"2025-10-26T12:24:07.569198+08:00","gmt_modified":"2025-10-26T12:24:07.569199+08:00"},{"id":2546,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"71728f24-c214-4a4d-a88f-2d8e560d7685","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 71728f24-c214-4a4d-a88f-2d8e560d7685","gmt_create":"2025-10-26T12:24:07.569512+08:00","gmt_modified":"2025-10-26T12:24:07.569512+08:00"},{"id":2547,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 921d7681-ea5f-4d7a-a02d-41a74cbce7f6","gmt_create":"2025-10-26T12:24:07.569799+08:00","gmt_modified":"2025-10-26T12:24:07.569799+08:00"},{"id":2548,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e c75c633f-5a55-45f2-a42d-368523ad9a92","gmt_create":"2025-10-26T12:24:07.570065+08:00","gmt_modified":"2025-10-26T12:24:07.570065+08:00"},{"id":2549,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","gmt_create":"2025-10-26T12:24:07.570365+08:00","gmt_modified":"2025-10-26T12:24:07.570365+08:00"},{"id":2550,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"ebe077a7-35ac-4b70-a886-632185fc32aa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e ebe077a7-35ac-4b70-a886-632185fc32aa","gmt_create":"2025-10-26T12:24:07.570658+08:00","gmt_modified":"2025-10-26T12:24:07.570658+08:00"},{"id":2551,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 1ab7913b-b94b-4ce8-bb43-0932aeca5797","gmt_create":"2025-10-26T12:24:07.570919+08:00","gmt_modified":"2025-10-26T12:24:07.570919+08:00"},{"id":2552,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 9c693e47-bb5a-4fe4-8231-b76bc62867dd","gmt_create":"2025-10-26T12:24:07.571173+08:00","gmt_modified":"2025-10-26T12:24:07.571173+08:00"},{"id":2553,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"0bfdeff7-b632-46fd-98d2-e633cabb2256","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 0bfdeff7-b632-46fd-98d2-e633cabb2256","gmt_create":"2025-10-26T12:24:07.571416+08:00","gmt_modified":"2025-10-26T12:24:07.571416+08:00"},{"id":2554,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"39554529-64d0-4486-9f0a-45cb1818a101","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 39554529-64d0-4486-9f0a-45cb1818a101","gmt_create":"2025-10-26T12:24:07.57166+08:00","gmt_modified":"2025-10-26T12:24:07.57166+08:00"},{"id":2555,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"46f3c28b-63bf-4239-b973-920e8c154fde","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e 46f3c28b-63bf-4239-b973-920e8c154fde","gmt_create":"2025-10-26T12:24:07.57198+08:00","gmt_modified":"2025-10-26T12:24:07.57198+08:00"},{"id":2556,"source_id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","target_id":"c63ffe67-2e8b-4750-a007-112ab3641020","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 62a43fef-a84b-4fa0-9c49-0c67e6767bb1 -\u003e c63ffe67-2e8b-4750-a007-112ab3641020","gmt_create":"2025-10-26T12:24:07.572247+08:00","gmt_modified":"2025-10-26T12:24:07.572247+08:00"},{"id":2557,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"5f8da7ac-a793-4e9b-8842-81caa6dccb97","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e 5f8da7ac-a793-4e9b-8842-81caa6dccb97","gmt_create":"2025-10-26T12:24:07.572524+08:00","gmt_modified":"2025-10-26T12:24:07.572524+08:00"},{"id":2558,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"4126f214-7006-40bf-a380-ae431e2da2fa","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e 4126f214-7006-40bf-a380-ae431e2da2fa","gmt_create":"2025-10-26T12:24:07.572778+08:00","gmt_modified":"2025-10-26T12:24:07.572778+08:00"},{"id":2559,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"90913787-9289-4c29-adf8-3d3603ae37cf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e 90913787-9289-4c29-adf8-3d3603ae37cf","gmt_create":"2025-10-26T12:24:07.573028+08:00","gmt_modified":"2025-10-26T12:24:07.573028+08:00"},{"id":2560,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"5e2251de-5ab0-4d72-9f9c-4b6392d698e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e 5e2251de-5ab0-4d72-9f9c-4b6392d698e1","gmt_create":"2025-10-26T12:24:07.57327+08:00","gmt_modified":"2025-10-26T12:24:07.57327+08:00"},{"id":2561,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"717e66ce-8368-40f6-a36c-7ec8d230094b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e 717e66ce-8368-40f6-a36c-7ec8d230094b","gmt_create":"2025-10-26T12:24:07.573497+08:00","gmt_modified":"2025-10-26T12:24:07.573497+08:00"},{"id":2562,"source_id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","target_id":"ef0b8ee1-8db0-4615-a91b-b4cbda6e74a8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f -\u003e ef0b8ee1-8db0-4615-a91b-b4cbda6e74a8","gmt_create":"2025-10-26T12:24:07.573795+08:00","gmt_modified":"2025-10-26T12:24:07.573795+08:00"},{"id":2563,"source_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","target_id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9faa7013-dcfb-49f3-9817-7f3bd2aec201 -\u003e d66a5a45-7205-4a85-96eb-bfe109ec4442","gmt_create":"2025-10-26T12:24:07.574099+08:00","gmt_modified":"2025-10-26T12:24:07.574099+08:00"},{"id":2564,"source_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","target_id":"f7166328-63d5-4be1-948d-8d7bf4488132","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9faa7013-dcfb-49f3-9817-7f3bd2aec201 -\u003e f7166328-63d5-4be1-948d-8d7bf4488132","gmt_create":"2025-10-26T12:24:07.574357+08:00","gmt_modified":"2025-10-26T12:24:07.574357+08:00"},{"id":2565,"source_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","target_id":"dd39b7fd-1483-4ed9-8ccf-815893eb618e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9faa7013-dcfb-49f3-9817-7f3bd2aec201 -\u003e dd39b7fd-1483-4ed9-8ccf-815893eb618e","gmt_create":"2025-10-26T12:24:07.57459+08:00","gmt_modified":"2025-10-26T12:24:07.57459+08:00"},{"id":2566,"source_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","target_id":"3003d31a-5488-42ae-b8a2-4fcf3e31bf2a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9faa7013-dcfb-49f3-9817-7f3bd2aec201 -\u003e 3003d31a-5488-42ae-b8a2-4fcf3e31bf2a","gmt_create":"2025-10-26T12:24:07.574819+08:00","gmt_modified":"2025-10-26T12:24:07.574819+08:00"},{"id":2567,"source_id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","target_id":"6985f800-2388-46ad-a9da-d94d61c7f5fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9faa7013-dcfb-49f3-9817-7f3bd2aec201 -\u003e 6985f800-2388-46ad-a9da-d94d61c7f5fd","gmt_create":"2025-10-26T12:24:07.575088+08:00","gmt_modified":"2025-10-26T12:24:07.575088+08:00"},{"id":2568,"source_id":"71728f24-c214-4a4d-a88f-2d8e560d7685","target_id":"95a249d2-6d7c-4836-a3a8-c755f9f5fe10","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71728f24-c214-4a4d-a88f-2d8e560d7685 -\u003e 95a249d2-6d7c-4836-a3a8-c755f9f5fe10","gmt_create":"2025-10-26T12:24:07.57539+08:00","gmt_modified":"2025-10-26T12:24:07.57539+08:00"},{"id":2569,"source_id":"71728f24-c214-4a4d-a88f-2d8e560d7685","target_id":"c8b2c279-3e8f-43c7-ae76-e97b7fbb53b8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71728f24-c214-4a4d-a88f-2d8e560d7685 -\u003e c8b2c279-3e8f-43c7-ae76-e97b7fbb53b8","gmt_create":"2025-10-26T12:24:07.575652+08:00","gmt_modified":"2025-10-26T12:24:07.575652+08:00"},{"id":2570,"source_id":"71728f24-c214-4a4d-a88f-2d8e560d7685","target_id":"dd8b762b-c6d6-4758-a9fe-85fe4fbc55f1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71728f24-c214-4a4d-a88f-2d8e560d7685 -\u003e dd8b762b-c6d6-4758-a9fe-85fe4fbc55f1","gmt_create":"2025-10-26T12:24:07.575926+08:00","gmt_modified":"2025-10-26T12:24:07.575926+08:00"},{"id":2571,"source_id":"71728f24-c214-4a4d-a88f-2d8e560d7685","target_id":"5905a27f-8e36-48d6-a029-5af3fd113929","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71728f24-c214-4a4d-a88f-2d8e560d7685 -\u003e 5905a27f-8e36-48d6-a029-5af3fd113929","gmt_create":"2025-10-26T12:24:07.576161+08:00","gmt_modified":"2025-10-26T12:24:07.576161+08:00"},{"id":2572,"source_id":"90913787-9289-4c29-adf8-3d3603ae37cf","target_id":"c371d3dc-678b-4335-9e72-ed45cf7a12a3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90913787-9289-4c29-adf8-3d3603ae37cf -\u003e c371d3dc-678b-4335-9e72-ed45cf7a12a3","gmt_create":"2025-10-26T12:24:07.576438+08:00","gmt_modified":"2025-10-26T12:24:07.576438+08:00"},{"id":2573,"source_id":"90913787-9289-4c29-adf8-3d3603ae37cf","target_id":"430abf0c-882d-4482-b886-cd90c82ef83f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90913787-9289-4c29-adf8-3d3603ae37cf -\u003e 430abf0c-882d-4482-b886-cd90c82ef83f","gmt_create":"2025-10-26T12:24:07.576699+08:00","gmt_modified":"2025-10-26T12:24:07.576699+08:00"},{"id":2574,"source_id":"90913787-9289-4c29-adf8-3d3603ae37cf","target_id":"523573ca-533f-41a1-8aa0-351d104419f7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90913787-9289-4c29-adf8-3d3603ae37cf -\u003e 523573ca-533f-41a1-8aa0-351d104419f7","gmt_create":"2025-10-26T12:24:07.576969+08:00","gmt_modified":"2025-10-26T12:24:07.576969+08:00"},{"id":2575,"source_id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","target_id":"622a7261-fe5f-452b-9349-cb9638dea2e9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 921d7681-ea5f-4d7a-a02d-41a74cbce7f6 -\u003e 622a7261-fe5f-452b-9349-cb9638dea2e9","gmt_create":"2025-10-26T12:24:07.57725+08:00","gmt_modified":"2025-10-26T12:24:07.57725+08:00"},{"id":2576,"source_id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","target_id":"2aef8b2c-b8de-48e6-9e2b-03f63fc81822","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 921d7681-ea5f-4d7a-a02d-41a74cbce7f6 -\u003e 2aef8b2c-b8de-48e6-9e2b-03f63fc81822","gmt_create":"2025-10-26T12:24:07.57755+08:00","gmt_modified":"2025-10-26T12:24:07.57755+08:00"},{"id":2577,"source_id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","target_id":"67ae2bae-25c4-4b0e-a370-5eaf3c3d6792","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 921d7681-ea5f-4d7a-a02d-41a74cbce7f6 -\u003e 67ae2bae-25c4-4b0e-a370-5eaf3c3d6792","gmt_create":"2025-10-26T12:24:07.577851+08:00","gmt_modified":"2025-10-26T12:24:07.577851+08:00"},{"id":2578,"source_id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","target_id":"5cc9f993-4e39-44fe-b3e9-543a0af4dabf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 921d7681-ea5f-4d7a-a02d-41a74cbce7f6 -\u003e 5cc9f993-4e39-44fe-b3e9-543a0af4dabf","gmt_create":"2025-10-26T12:24:07.5781+08:00","gmt_modified":"2025-10-26T12:24:07.5781+08:00"},{"id":2579,"source_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","target_id":"22a2cf6f-bd7c-4585-99f1-0254e7d3025d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c75c633f-5a55-45f2-a42d-368523ad9a92 -\u003e 22a2cf6f-bd7c-4585-99f1-0254e7d3025d","gmt_create":"2025-10-26T12:24:07.578401+08:00","gmt_modified":"2025-10-26T12:24:07.578401+08:00"},{"id":2580,"source_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","target_id":"e77f7a2c-3cc9-4955-80b2-97f731c7ca17","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c75c633f-5a55-45f2-a42d-368523ad9a92 -\u003e e77f7a2c-3cc9-4955-80b2-97f731c7ca17","gmt_create":"2025-10-26T12:24:07.578678+08:00","gmt_modified":"2025-10-26T12:24:07.578678+08:00"},{"id":2581,"source_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","target_id":"1a1b2aa0-b2d6-4252-8dbc-def051b239cc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c75c633f-5a55-45f2-a42d-368523ad9a92 -\u003e 1a1b2aa0-b2d6-4252-8dbc-def051b239cc","gmt_create":"2025-10-26T12:24:07.578935+08:00","gmt_modified":"2025-10-26T12:24:07.578935+08:00"},{"id":2582,"source_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","target_id":"a4284d6f-ed4a-4a9f-8243-50f6ef7f8e53","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c75c633f-5a55-45f2-a42d-368523ad9a92 -\u003e a4284d6f-ed4a-4a9f-8243-50f6ef7f8e53","gmt_create":"2025-10-26T12:24:07.579194+08:00","gmt_modified":"2025-10-26T12:24:07.579194+08:00"},{"id":2583,"source_id":"c75c633f-5a55-45f2-a42d-368523ad9a92","target_id":"31307f8d-33f5-4b94-be25-33d230a070d8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c75c633f-5a55-45f2-a42d-368523ad9a92 -\u003e 31307f8d-33f5-4b94-be25-33d230a070d8","gmt_create":"2025-10-26T12:24:07.579472+08:00","gmt_modified":"2025-10-26T12:24:07.579472+08:00"},{"id":2584,"source_id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","target_id":"ab0513e3-7349-4e7e-8f1e-718181dacf8c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300 -\u003e ab0513e3-7349-4e7e-8f1e-718181dacf8c","gmt_create":"2025-10-26T12:24:07.579768+08:00","gmt_modified":"2025-10-26T12:24:07.579769+08:00"},{"id":2585,"source_id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","target_id":"e9ff1bff-fcd2-4d6a-aa98-d1a62191e2ba","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300 -\u003e e9ff1bff-fcd2-4d6a-aa98-d1a62191e2ba","gmt_create":"2025-10-26T12:24:07.580076+08:00","gmt_modified":"2025-10-26T12:24:07.580076+08:00"},{"id":2586,"source_id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","target_id":"ad2659bc-7aed-4192-88b0-f1a25646aa5a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300 -\u003e ad2659bc-7aed-4192-88b0-f1a25646aa5a","gmt_create":"2025-10-26T12:24:07.580313+08:00","gmt_modified":"2025-10-26T12:24:07.580313+08:00"},{"id":2587,"source_id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","target_id":"b8b90666-8a1c-4ec2-a950-9891f01721ed","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300 -\u003e b8b90666-8a1c-4ec2-a950-9891f01721ed","gmt_create":"2025-10-26T12:24:07.580579+08:00","gmt_modified":"2025-10-26T12:24:07.580579+08:00"},{"id":2588,"source_id":"ebe077a7-35ac-4b70-a886-632185fc32aa","target_id":"72963fd2-0bbf-4779-8c3a-ceb9bdf106c6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ebe077a7-35ac-4b70-a886-632185fc32aa -\u003e 72963fd2-0bbf-4779-8c3a-ceb9bdf106c6","gmt_create":"2025-10-26T12:24:07.580951+08:00","gmt_modified":"2025-10-26T12:24:07.580951+08:00"},{"id":2589,"source_id":"ebe077a7-35ac-4b70-a886-632185fc32aa","target_id":"b71a700d-4abb-47e5-a4b8-30e9083654c1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ebe077a7-35ac-4b70-a886-632185fc32aa -\u003e b71a700d-4abb-47e5-a4b8-30e9083654c1","gmt_create":"2025-10-26T12:24:07.581201+08:00","gmt_modified":"2025-10-26T12:24:07.581201+08:00"},{"id":2590,"source_id":"ebe077a7-35ac-4b70-a886-632185fc32aa","target_id":"55aba1b4-40e9-4771-bb24-448b0488549f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ebe077a7-35ac-4b70-a886-632185fc32aa -\u003e 55aba1b4-40e9-4771-bb24-448b0488549f","gmt_create":"2025-10-26T12:24:07.581431+08:00","gmt_modified":"2025-10-26T12:24:07.581431+08:00"},{"id":2591,"source_id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","target_id":"40dc51ee-3453-43a9-8b76-e05de31359a9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1ab7913b-b94b-4ce8-bb43-0932aeca5797 -\u003e 40dc51ee-3453-43a9-8b76-e05de31359a9","gmt_create":"2025-10-26T12:24:07.581686+08:00","gmt_modified":"2025-10-26T12:24:07.581686+08:00"},{"id":2592,"source_id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","target_id":"9a762229-dd65-47df-9ab9-3590cb909a4c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1ab7913b-b94b-4ce8-bb43-0932aeca5797 -\u003e 9a762229-dd65-47df-9ab9-3590cb909a4c","gmt_create":"2025-10-26T12:24:07.581955+08:00","gmt_modified":"2025-10-26T12:24:07.581955+08:00"},{"id":2593,"source_id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","target_id":"927cefa0-c741-41c6-85d2-6f7169da361b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1ab7913b-b94b-4ce8-bb43-0932aeca5797 -\u003e 927cefa0-c741-41c6-85d2-6f7169da361b","gmt_create":"2025-10-26T12:24:07.582183+08:00","gmt_modified":"2025-10-26T12:24:07.582183+08:00"},{"id":2594,"source_id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","target_id":"b89a2107-689e-489a-834f-7a2ed7dace1c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1ab7913b-b94b-4ce8-bb43-0932aeca5797 -\u003e b89a2107-689e-489a-834f-7a2ed7dace1c","gmt_create":"2025-10-26T12:24:07.582442+08:00","gmt_modified":"2025-10-26T12:24:07.582442+08:00"},{"id":2595,"source_id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","target_id":"7aea218f-c903-4fcc-8c27-195c8ca6caed","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c693e47-bb5a-4fe4-8231-b76bc62867dd -\u003e 7aea218f-c903-4fcc-8c27-195c8ca6caed","gmt_create":"2025-10-26T12:24:07.582754+08:00","gmt_modified":"2025-10-26T12:24:07.582754+08:00"},{"id":2596,"source_id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","target_id":"f4769452-5132-45c3-9689-cb27b9dad874","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c693e47-bb5a-4fe4-8231-b76bc62867dd -\u003e f4769452-5132-45c3-9689-cb27b9dad874","gmt_create":"2025-10-26T12:24:07.582979+08:00","gmt_modified":"2025-10-26T12:24:07.582979+08:00"},{"id":2597,"source_id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","target_id":"a3346134-33a0-4b9f-84d2-d77a613d4916","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c693e47-bb5a-4fe4-8231-b76bc62867dd -\u003e a3346134-33a0-4b9f-84d2-d77a613d4916","gmt_create":"2025-10-26T12:24:07.583262+08:00","gmt_modified":"2025-10-26T12:24:07.583262+08:00"},{"id":2598,"source_id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","target_id":"0b782726-9b8c-436a-9b5f-c372531d8bdd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9c693e47-bb5a-4fe4-8231-b76bc62867dd -\u003e 0b782726-9b8c-436a-9b5f-c372531d8bdd","gmt_create":"2025-10-26T12:24:07.583526+08:00","gmt_modified":"2025-10-26T12:24:07.583526+08:00"},{"id":2599,"source_id":"0bfdeff7-b632-46fd-98d2-e633cabb2256","target_id":"2f06481d-d342-4e1e-9bd3-e0cab51f29b3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0bfdeff7-b632-46fd-98d2-e633cabb2256 -\u003e 2f06481d-d342-4e1e-9bd3-e0cab51f29b3","gmt_create":"2025-10-26T12:24:07.583828+08:00","gmt_modified":"2025-10-26T12:24:07.583828+08:00"},{"id":2600,"source_id":"0bfdeff7-b632-46fd-98d2-e633cabb2256","target_id":"d0d1412e-621b-4d66-88b9-95b5dd3bf1b2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0bfdeff7-b632-46fd-98d2-e633cabb2256 -\u003e d0d1412e-621b-4d66-88b9-95b5dd3bf1b2","gmt_create":"2025-10-26T12:24:07.584066+08:00","gmt_modified":"2025-10-26T12:24:07.584066+08:00"},{"id":2601,"source_id":"0bfdeff7-b632-46fd-98d2-e633cabb2256","target_id":"fdb3db2f-0d08-4959-b90b-b90a49a2a696","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0bfdeff7-b632-46fd-98d2-e633cabb2256 -\u003e fdb3db2f-0d08-4959-b90b-b90a49a2a696","gmt_create":"2025-10-26T12:24:07.584296+08:00","gmt_modified":"2025-10-26T12:24:07.584296+08:00"},{"id":2602,"source_id":"39554529-64d0-4486-9f0a-45cb1818a101","target_id":"3facf10c-b7a9-47c8-8401-07f0bf91bfa0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 39554529-64d0-4486-9f0a-45cb1818a101 -\u003e 3facf10c-b7a9-47c8-8401-07f0bf91bfa0","gmt_create":"2025-10-26T12:24:07.584609+08:00","gmt_modified":"2025-10-26T12:24:07.584609+08:00"},{"id":2603,"source_id":"39554529-64d0-4486-9f0a-45cb1818a101","target_id":"56f388a4-5021-40f9-9ac1-3a355bfe71fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 39554529-64d0-4486-9f0a-45cb1818a101 -\u003e 56f388a4-5021-40f9-9ac1-3a355bfe71fb","gmt_create":"2025-10-26T12:24:07.584845+08:00","gmt_modified":"2025-10-26T12:24:07.584845+08:00"},{"id":2604,"source_id":"39554529-64d0-4486-9f0a-45cb1818a101","target_id":"51ff0ed6-5102-46dd-8c5c-35462371d864","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 39554529-64d0-4486-9f0a-45cb1818a101 -\u003e 51ff0ed6-5102-46dd-8c5c-35462371d864","gmt_create":"2025-10-26T12:24:07.585123+08:00","gmt_modified":"2025-10-26T12:24:07.585123+08:00"},{"id":2605,"source_id":"46f3c28b-63bf-4239-b973-920e8c154fde","target_id":"f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f3c28b-63bf-4239-b973-920e8c154fde -\u003e f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","gmt_create":"2025-10-26T12:24:07.585427+08:00","gmt_modified":"2025-10-26T12:24:07.585427+08:00"},{"id":2606,"source_id":"46f3c28b-63bf-4239-b973-920e8c154fde","target_id":"029f7065-d13a-4d69-8f62-613dc352d342","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f3c28b-63bf-4239-b973-920e8c154fde -\u003e 029f7065-d13a-4d69-8f62-613dc352d342","gmt_create":"2025-10-26T12:24:07.585681+08:00","gmt_modified":"2025-10-26T12:24:07.585681+08:00"},{"id":2607,"source_id":"46f3c28b-63bf-4239-b973-920e8c154fde","target_id":"23978830-7b1b-467f-a0c4-2f65572993db","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f3c28b-63bf-4239-b973-920e8c154fde -\u003e 23978830-7b1b-467f-a0c4-2f65572993db","gmt_create":"2025-10-26T12:24:07.585915+08:00","gmt_modified":"2025-10-26T12:24:07.585915+08:00"},{"id":2608,"source_id":"46f3c28b-63bf-4239-b973-920e8c154fde","target_id":"6ef91792-69ac-4d8e-8147-76311a5d7c7f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f3c28b-63bf-4239-b973-920e8c154fde -\u003e 6ef91792-69ac-4d8e-8147-76311a5d7c7f","gmt_create":"2025-10-26T12:24:07.58618+08:00","gmt_modified":"2025-10-26T12:24:07.58618+08:00"},{"id":2609,"source_id":"46f3c28b-63bf-4239-b973-920e8c154fde","target_id":"13794646-653a-4b68-be74-4852550edf84","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 46f3c28b-63bf-4239-b973-920e8c154fde -\u003e 13794646-653a-4b68-be74-4852550edf84","gmt_create":"2025-10-26T12:24:07.586407+08:00","gmt_modified":"2025-10-26T12:24:07.586407+08:00"},{"id":2610,"source_id":"c63ffe67-2e8b-4750-a007-112ab3641020","target_id":"b7adfefe-d5a8-4754-9465-61bda0fe6eb5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c63ffe67-2e8b-4750-a007-112ab3641020 -\u003e b7adfefe-d5a8-4754-9465-61bda0fe6eb5","gmt_create":"2025-10-26T12:24:07.586659+08:00","gmt_modified":"2025-10-26T12:24:07.586659+08:00"},{"id":2611,"source_id":"c63ffe67-2e8b-4750-a007-112ab3641020","target_id":"cc8dc5cb-78e1-4952-8400-dbd77abcd7d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c63ffe67-2e8b-4750-a007-112ab3641020 -\u003e cc8dc5cb-78e1-4952-8400-dbd77abcd7d1","gmt_create":"2025-10-26T12:24:07.586889+08:00","gmt_modified":"2025-10-26T12:24:07.58689+08:00"},{"id":2612,"source_id":"c63ffe67-2e8b-4750-a007-112ab3641020","target_id":"b6f58da4-6ff8-4b6f-8804-a5502353e1ec","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c63ffe67-2e8b-4750-a007-112ab3641020 -\u003e b6f58da4-6ff8-4b6f-8804-a5502353e1ec","gmt_create":"2025-10-26T12:24:07.58722+08:00","gmt_modified":"2025-10-26T12:24:07.58722+08:00"},{"id":2613,"source_id":"c63ffe67-2e8b-4750-a007-112ab3641020","target_id":"a9a84bd3-f90f-47af-b4cc-2c07a7c40f82","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c63ffe67-2e8b-4750-a007-112ab3641020 -\u003e a9a84bd3-f90f-47af-b4cc-2c07a7c40f82","gmt_create":"2025-10-26T12:24:07.587528+08:00","gmt_modified":"2025-10-26T12:24:07.587528+08:00"},{"id":2614,"source_id":"c371d3dc-678b-4335-9e72-ed45cf7a12a3","target_id":"19cdec94-a7a8-48fa-9348-54199957f8ec","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c371d3dc-678b-4335-9e72-ed45cf7a12a3 -\u003e 19cdec94-a7a8-48fa-9348-54199957f8ec","gmt_create":"2025-10-26T12:24:07.587839+08:00","gmt_modified":"2025-10-26T12:24:07.587839+08:00"},{"id":2615,"source_id":"c371d3dc-678b-4335-9e72-ed45cf7a12a3","target_id":"ed6acb3b-b520-4140-8a84-a3d59c592114","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c371d3dc-678b-4335-9e72-ed45cf7a12a3 -\u003e ed6acb3b-b520-4140-8a84-a3d59c592114","gmt_create":"2025-10-26T12:24:07.588115+08:00","gmt_modified":"2025-10-26T12:24:07.588115+08:00"},{"id":2616,"source_id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","target_id":"7f2a5009-b819-4976-9114-eb759e1da9ab","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d66a5a45-7205-4a85-96eb-bfe109ec4442 -\u003e 7f2a5009-b819-4976-9114-eb759e1da9ab","gmt_create":"2025-10-26T12:24:07.588381+08:00","gmt_modified":"2025-10-26T12:24:07.588381+08:00"},{"id":2617,"source_id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","target_id":"2f42dfa6-40d5-46ee-985e-2c5112601e36","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d66a5a45-7205-4a85-96eb-bfe109ec4442 -\u003e 2f42dfa6-40d5-46ee-985e-2c5112601e36","gmt_create":"2025-10-26T12:24:07.588624+08:00","gmt_modified":"2025-10-26T12:24:07.588624+08:00"},{"id":2618,"source_id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","target_id":"0eb5c5a0-1cfd-4c4f-a692-574a1fe037d6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d66a5a45-7205-4a85-96eb-bfe109ec4442 -\u003e 0eb5c5a0-1cfd-4c4f-a692-574a1fe037d6","gmt_create":"2025-10-26T12:24:07.588865+08:00","gmt_modified":"2025-10-26T12:24:07.588865+08:00"},{"id":2619,"source_id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","target_id":"3a7d60ec-b417-4ed1-a4fa-76c1676adf23","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d66a5a45-7205-4a85-96eb-bfe109ec4442 -\u003e 3a7d60ec-b417-4ed1-a4fa-76c1676adf23","gmt_create":"2025-10-26T12:24:07.589086+08:00","gmt_modified":"2025-10-26T12:24:07.589087+08:00"},{"id":2620,"source_id":"3facf10c-b7a9-47c8-8401-07f0bf91bfa0","target_id":"8307a9fc-2ec6-47fb-bbf2-3f34afd3ac42","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3facf10c-b7a9-47c8-8401-07f0bf91bfa0 -\u003e 8307a9fc-2ec6-47fb-bbf2-3f34afd3ac42","gmt_create":"2025-10-26T12:24:07.589448+08:00","gmt_modified":"2025-10-26T12:24:07.589448+08:00"},{"id":2621,"source_id":"3facf10c-b7a9-47c8-8401-07f0bf91bfa0","target_id":"14f3779c-9923-4daa-93bf-9facb9742b6c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3facf10c-b7a9-47c8-8401-07f0bf91bfa0 -\u003e 14f3779c-9923-4daa-93bf-9facb9742b6c","gmt_create":"2025-10-26T12:24:07.589692+08:00","gmt_modified":"2025-10-26T12:24:07.589692+08:00"},{"id":2622,"source_id":"3facf10c-b7a9-47c8-8401-07f0bf91bfa0","target_id":"843f1ecd-1e38-4a40-b69d-19670fc99a25","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3facf10c-b7a9-47c8-8401-07f0bf91bfa0 -\u003e 843f1ecd-1e38-4a40-b69d-19670fc99a25","gmt_create":"2025-10-26T12:24:07.589931+08:00","gmt_modified":"2025-10-26T12:24:07.589931+08:00"},{"id":2623,"source_id":"f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","target_id":"3b6366e1-dcb0-4469-aa1d-aaeeced32af6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2 -\u003e 3b6366e1-dcb0-4469-aa1d-aaeeced32af6","gmt_create":"2025-10-26T12:24:07.590223+08:00","gmt_modified":"2025-10-26T12:24:07.590223+08:00"},{"id":2624,"source_id":"f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","target_id":"f21f36f8-58e6-413b-97dd-2c3d760aaa1b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2 -\u003e f21f36f8-58e6-413b-97dd-2c3d760aaa1b","gmt_create":"2025-10-26T12:24:07.590453+08:00","gmt_modified":"2025-10-26T12:24:07.590453+08:00"},{"id":2625,"source_id":"f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","target_id":"98a7a607-b8fd-48c2-a888-0c30182ef430","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2 -\u003e 98a7a607-b8fd-48c2-a888-0c30182ef430","gmt_create":"2025-10-26T12:24:07.590701+08:00","gmt_modified":"2025-10-26T12:24:07.590701+08:00"},{"id":2626,"source_id":"f7166328-63d5-4be1-948d-8d7bf4488132","target_id":"f7a5ad97-49e5-4077-b963-e3f91fd0b3fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7166328-63d5-4be1-948d-8d7bf4488132 -\u003e f7a5ad97-49e5-4077-b963-e3f91fd0b3fb","gmt_create":"2025-10-26T12:24:07.59109+08:00","gmt_modified":"2025-10-26T12:24:07.59109+08:00"},{"id":2627,"source_id":"f7166328-63d5-4be1-948d-8d7bf4488132","target_id":"5518c446-d99a-4788-a591-74e6644e939a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7166328-63d5-4be1-948d-8d7bf4488132 -\u003e 5518c446-d99a-4788-a591-74e6644e939a","gmt_create":"2025-10-26T12:24:07.591361+08:00","gmt_modified":"2025-10-26T12:24:07.591361+08:00"},{"id":2628,"source_id":"f7166328-63d5-4be1-948d-8d7bf4488132","target_id":"35cfaf0e-5d11-4246-8b28-ce32aea780e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7166328-63d5-4be1-948d-8d7bf4488132 -\u003e 35cfaf0e-5d11-4246-8b28-ce32aea780e1","gmt_create":"2025-10-26T12:24:07.59163+08:00","gmt_modified":"2025-10-26T12:24:07.59163+08:00"},{"id":2629,"source_id":"f7166328-63d5-4be1-948d-8d7bf4488132","target_id":"acf850d1-3be4-4a5c-b599-2370a70f9045","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f7166328-63d5-4be1-948d-8d7bf4488132 -\u003e acf850d1-3be4-4a5c-b599-2370a70f9045","gmt_create":"2025-10-26T12:24:07.591898+08:00","gmt_modified":"2025-10-26T12:24:07.591898+08:00"},{"id":2630,"source_id":"23978830-7b1b-467f-a0c4-2f65572993db","target_id":"8d886dc2-a6be-4aeb-9e2a-f37a5c910bce","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23978830-7b1b-467f-a0c4-2f65572993db -\u003e 8d886dc2-a6be-4aeb-9e2a-f37a5c910bce","gmt_create":"2025-10-26T12:24:07.592517+08:00","gmt_modified":"2025-10-26T12:24:07.592517+08:00"},{"id":2631,"source_id":"23978830-7b1b-467f-a0c4-2f65572993db","target_id":"f08b4e49-e369-40c1-aa6a-2570112573f8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23978830-7b1b-467f-a0c4-2f65572993db -\u003e f08b4e49-e369-40c1-aa6a-2570112573f8","gmt_create":"2025-10-26T12:24:07.592746+08:00","gmt_modified":"2025-10-26T12:24:07.592746+08:00"},{"id":2632,"source_id":"23978830-7b1b-467f-a0c4-2f65572993db","target_id":"07bcc8ff-683d-410e-9417-ace5bd761c4b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23978830-7b1b-467f-a0c4-2f65572993db -\u003e 07bcc8ff-683d-410e-9417-ace5bd761c4b","gmt_create":"2025-10-26T12:24:07.592986+08:00","gmt_modified":"2025-10-26T12:24:07.592986+08:00"}],"wiki_catalogs":[{"id":"fd492499-301d-4b03-abc3-a06e9a760886","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"项目概述","description":"project-overview","prompt":"创建关于LangChain项目概述的全面内容。解释其作为大语言模型（LLM）驱动应用程序开发框架的核心目的和愿景。阐述项目的设计哲学、主要优势和关键特性，包括可运行组件、追踪系统、提示工程、模型集成和工具集成。描述LangChain如何通过标准化接口简化LLM与各种数据源和外部系统的集成。涵盖项目的历史背景、版本演进（特别是从经典版本到v1的迁移）以及未来发展方向。为初学者提供高层次的理解，同时为经验丰富的开发者提供技术深度。包括项目架构的系统上下文图，展示核心组件（langchain_core）、经典功能（langchain_classic）、第三方集成（partners）和工具（text-splitters）之间的关系。","progress_status":"completed","dependent_files":"README.md,AGENTS.md,CLAUDE.md,MIGRATE.md,SECURITY.md","gmt_create":"2025-10-26T11:32:22.23033+08:00","gmt_modified":"2025-10-26T11:36:14.647236+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7ojrH0+b4JMz5OewwhBN1HZWpLbxn4BSfVMOGiQ5mCMjZWo/bVDSgMUsj53raFYitui2icKBECtENXe0n2BBsgKHCGYEUWJ8hajA7Fmf+xp2vCo6dfSeULUCVqJieTMYfh6GadbN4ilK7NFPPewEgcOrh/VFEFWNdc4EGl3NNV+LR2Zo92gPi05AcfP2HZrAQ08DjdLOxl6o3iU46GZhNgGLrOlWzW3BkzTAuZzGEd9pA2KDNwkp/VHwt7sVnDa2dbcOh5LiBrKsPPR3UO5MUWwDxRccURPlPe6rjpVhCCBNQvnTTyi/p3Bk+AlNg66OW0vb91q5YtN8jfcuaib5da7Fd/eNb4YgFAvDNneYc9LvOCze8X2VwwcxPLB070SMVmELTlm44YkRaQwkCaE8YLyCP6lIKhCOHy4VBbhV/U2iEiMN/d4nEH0bivB5ngcBvB2k6k4TXZLO2521lueUI0Uakw6lObqj4RZHgUcry/wdZkZLWc2T1Gj6wRJYSK0UN3Xe+WNL6Oi+w5Our+5uS3sC1LthEv3RqGmPFNAoXvPuto/GICAX1YGOkyugtD6vRwAKckU+9vom71NISxuykocrtZWRJaiERpzXDLSuvVsDlqq4uH0AQb33/Hpz6KgQKhufpU6DSRLMSUizZhJk8ljFT45Ies8dnyGgDntinGRQK+8ezyjFKvrSj6HzZmPJ2WLCucS1tLyLwlE2SvFQrBwrhMex3CR9rYU88TXIjFFGAokrPHi8ABBbXsjPrpaiWtP+3h3a4BQLSZSxqPuKJTGmUJViIavSkmALqU0WkHhgCT+OTK/0kXXshV1tLSIpS1OGGVdatZ7k52JpmvakPlHZxzVceG7Ys0nyZicrdJg3J64lYvhcNj+V06BLaW30vfIqnnQbSKfS3PwYSb0ITN5BUZUOqTKhNPWAB0j1ev9ndyIyAjyGzEFkyuobQC30lxFm9fEdT9+l83seKivVdUTBRDzeSiGIdCca2/4Eb7+ibplViVBZbok74Jfj0+1WtovPj3BJlsxFuzweeF2v3xpQFih7BMPrDoYRwkAgQGoxbQpBMWFBE8Xw6JxWPqY1mWaD5AX776xtxyl7xr4yErmeHlTf9I2q3EJJWuihtAw6cxcxvIezN1v+6fgRY2vJLSyupuHX8HUHaqmcXFEoEi3fQVRkFmPFfC7hwLP4FU1f6/4vrXPtVUHDZSzT8GXr5nEeXP3Rri5jwcfiDRigEK5/tvVTinImCKN6yD8+M+h25kgOdHBMJQjKuAtcI6Tips6R5PChRuj6NPGUc5UlP+VnGyFTjBoZn2HEccYvmGm"},{"id":"f1c3b021-103d-45a3-baae-c9046a75d17d","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"可运行组件 (Runnables)","description":"runnables","prompt":"开发可运行组件(Runnables)的详细内容。深入解释Runnable接口的设计原理，它是所有可执行组件的基础抽象，支持链式调用、异步执行和流式输出。详细阐述Runnable的五大核心方法：invoke, batch, stream, astream 和 ainvoke 的使用场景和实现机制。通过代码示例展示如何创建自定义Runnable类，以及如何将多个Runnable组合成复杂的工作流。解释RunnableConfig的配置选项，包括回调设置、流式处理和中断信号。说明RunnableGraph如何可视化执行流程，并提供实际示例展示其在调试和监控中的应用。讨论错误处理、超时设置和重试机制等高级特性。","parent_id":"e477836f-1151-41d8-a55b-bfc3b7c24117","progress_status":"completed","dependent_files":"libs/core/langchain_core/runnables/base.py,libs/core/langchain_core/runnables/config.py,libs/core/langchain_core/runnables/graph.py","gmt_create":"2025-10-26T11:32:39.555068+08:00","gmt_modified":"2025-10-26T11:40:26.649302+08:00","raw_data":"WikiEncrypted:4DQyGNtAOQkFkvQnW9iBJgF7SXB7UzPjeZjEU/Jo3Z9frI69ckKPl3f673cxBhObY8VExfDuD1bZFlFR+95k5V5+L65FQ0VbW+yt3fJE97kNat19hhPeMplAec/6xeKT05JuLCrDKw5pWY3IvGbeGByMQMR9syRgrdmOfp/m/OZNzTUFAkAtVXwmIuURSAAaX0pet6RIcdEZdLu1kHZFtUN3ij7M/Tv0s4g4icX7EKMen3aJDlUGWW6moGZevI8f1HvFuQhcYU4i2e2Bv+glZOycwLF5LSlZb52/azEmoTUsQB/1f4psh2vYglMt0KjCVmTvD3mq2Yh6DeTGM8x/dMBpeYYtq9Wunl7CxjBT9x1bp60JyawvDWH1virOygt+2/TMg+YUGVxj4VoiIE0fNflyLaozD2eBwRqzvcYf208yuXiEmtdy0VaVTZmi0GQHjpt7Mx+kA24A6DHRNBl4gaFS0CBqvqjBKxWhauXYwbBSE+nn8r0y4dxRq4XMrUiLqT1j1E2FtrxKMgXTvGkFQvZqF9zKIihgLX3W6/P27mNn/pbuWSH28w1qY/cRfqgO5/usEa3NqXoglMG0dNfO1t0ZulmzioVi+6Eyjdwy9+ySwxsz7O3Gk8m0goRhUVPu4dq2bCx/9AwlgZfAJ79JSD/mSc/AbGM0GCHscOpDrDw6QjIqlmpBcn0OWaAyMTstxPMT4O/vM0+bbioH/xXVrjnGXlvNA7vf953FxxUf8hSDLAtyfIJut3O1nWWloTG58SS7zALwC1FERG1o4tUWd2dvO4LFJWQDyuPTMaqAsSqK9Y4oleXoBBrKxugOTQ6bH8dV4IgsA3ezCbbOaYYVzqMmkVHqjY4reYDXIoA+LDDlAzAkm3OtAtCx9+plO/7LejfGyITRv+SLcJ7UTrQQp8En1+XoKkKUyff6R/GUUJ0998CFukxg/ee3LqgiZZG/NXZFtVQIO/U+Wmrxj+9b2JgDwKIMTIrGabm+aiLI5zMUt2T+uwdU4kTGlxKQ1NTMsgiWRFSIo4tbGRwDFPVQgalD8aPyj8tCxvX3W+QMgCAY4LlElG53dkZ3syowf+MuOzfY58bjeLullI8ODgxoB/Jn+M64YjAbJVYrbh78dlbm84hr8hyAP5zoUSXu7FBCByDSQFt33XkIu+Ibr2QCZIiQl8EgQ+4/+GSMk13VKZXlSKfobi3G+Dsbt7OZhbyU7CpHK5HVXqZZqXtobF4KkmpbEEDM362aK29/wkLAKwHoBVaoucIp/nX3Vt94l9apIUOxDKfk/7nUhH+XpRmHrqkqhS52fyEIHagEhhbdeFFDfsjiGjN+O1C0Dc/lek5P/uh1zqkQ5ItyD/bG7bc39I1bu0rnjQu/UI/uHrtBNFI1nluy3Ae0XtLVwqtttypuHIKFDywLY79SL/ttTKm/ig==","layer_level":1},{"id":"84038110-4491-4b60-9ab5-3ba41c1fff3c","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Anthropic 集成","description":"anthropic-integration","prompt":"开发关于LangChain与Anthropic集成的详细内容。解释该集成的目的，即为开发者提供对Anthropic的Claude系列大语言模型的访问。详细描述其支持的核心功能，包括异步聊天模型（ChatAnthropic）和基础LLM模型（AnthropicLLM）的实现。提供具体的代码示例，展示如何通过API密钥配置客户端，以及如何将ChatAnthropic实例化并作为可运行组件（Runnable）集成到LangChain的链式调用（chain）或代理（agent）中。讨论其独特的功能，如对`tool_choice`参数的支持和流式响应处理。解释该集成如何实现`langchain_core`中定义的`BaseChatModel`和`BaseLanguageModel`抽象接口，确保与其他组件的兼容性。涵盖认证、速率限制处理和错误管理的最佳实践。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","progress_status":"completed","dependent_files":"libs/partners/anthropic/langchain_anthropic/__init__.py,libs/partners/anthropic/langchain_anthropic/chat_models.py,libs/partners/anthropic/langchain_anthropic/llms.py","gmt_create":"2025-10-26T11:32:50.900674+08:00","gmt_modified":"2025-10-26T11:41:19.567076+08:00","raw_data":"WikiEncrypted:AicO/sRr8Vq3B2raT5D2W/IJg7dNn37Z9t6o4FX3SzRnZYqLcbHJH6ZVaumzv2sEj1iJDq4Qeosh0aea+/3Sw4sgWqvLWvDpSgx6S5c0iWA6a7FapvLQkSdZfYc39KjAxPjHBa8HMq8NzbAVZbMtzPQYSY3kic11z86Yp3B+hdzRW352+oeUxKDM6NT3cAmKhI9ji/jWGUXxozJOaN3Qus665wjkY9Sd6iddIdww+iXwjBFVcrIsY66rSKj86sUsJn9lvlNTPdhswF9ioOJ/onGChQED4kuxKQBw5gU8GjNl+5j+QY/pf0QKiwmK/q8w1rLg2XqGtWM2JZn8uMRsBRRZ3f5oLst5dKZtgArZ4ZxD9FMSe3F+gHHe0i05rjklBd/mZyYdTEmVQygW7Hk/aJ9J3IUkERc5K+2Y4p62oDWLFaimTnNYs/EXYR+ehuGftiFw2wQEBRH2KgT+3VSkB5im6M1r0txsKLFdwfa2i1vNuF4u05/dQaak6o9wjjK0DMCxlX6S+fynpugL/n7CGOM1GC/6J+bOBgw5BGbEA1RH44F2CDb38bgQoaGlFeY414ZocHVdR4SBMZLoOvO1FaY00i9O2xFY4QRpE1fPe/jD43f2/tJk3ivPfb4hhGWVE2RRJe0PlFwewBu+Pwo+T73d8K/r0eTezId8x/QWJ1dAkQdJMyDpXQN5T3xyfFuIRrER2zUM2EetwSDRYYdYayuVSOk5SMio7Oxm+xFLrpuHgiE4REz4M20ry88BEcsxfi7yXzScxDBXrUHZPKfpGdfkG7Rm+R3clZtE183CLGq2T4zoyadHdnnPHxrtolJuS+EBW+82rYNJnSHiD3qVUWesZg45rIUJLjctMyTFGX/DvQX7sWal86jJY9P2jDA/o5osSHwfE3kOCXHgxh2lKRcLkwBELR+tzWlETLApIt9ufub42UDum2G44MG3eFKVQDx33dse03YsBKBbjizdsIg7ktkImsldWKEhSbFRjFncVKRjkFnuOugRgyzRRlSQYpGaLMTUrSF0G1Y4mFKx0w4QWYfES/7yHDVsEMVKA6AqS4lySyD2EIkqWcoofQXCqh5UghmGZNrOKak5dmSeAwUr40H4a4D2o2DeCX/Wd3/YSU2hphmiRCozfT+21dYGUKYMEquZ1RQrFtp2cCm42AcfAKFd+fw1cO2uEFSUIxxY3uVIZ5ps8QmmcHi29uNZHKbjNk8kTbP2MAh+xeKTNO5c3XyXDtu4rBz34wOo5dcDs7KzqblMEZYnwROl6DzdePlOSizVpv60UXGt5HFn7MmNhmaJvyrMIC3Nueg3gojTN18IUqDkuAYEtLDdv9/Mo4sXPPjf1wZsHdkbSnMDgDRJh1HVLRkGG4VCHuuy/WKv5Zk2lBSrSj3EXjFhgucolaFENfzzKLNMuZRO3Lo5eu4sTYVvP0JHkWxXXcVv7pZYEc2Xnf3VOGHwcGbSwBV2xV1IEAtgXIK5dtDFbbaPxM8UinXUCEuvExE57mUUYUxwMro8DCfrcaZBNc8Gpy1JZn7fHudcf2btab5oasa0Nb1ow+I6ts7yzIQoRKf/Na5JVDM+Ngoo5Te3+GFRc/M1Uj/9vWet833VwqhsMXSJwk1XTxdVYPa1ckx+0TKGBvY=","layer_level":1},{"id":"605b534a-c19c-4f50-a7bd-dd79a672b6ca","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"聊天模型 (ChatOpenAI)","description":"openai-chat-models","prompt":"开发关于LangChain中OpenAI聊天模型（ChatOpenAI）的详细内容。详细解释`ChatOpenAI`类的实现，它是与OpenAI的GPT-3.5和GPT-4等聊天模型进行交互的主要接口。提供完整的代码示例，展示如何通过`api_key`、`model`、`temperature`等参数进行配置，以及如何在`Runnable`链、`Agent`和`Retriever`中使用它。深入探讨其高级功能，如函数调用（function calling）和工具调用（tool calling）的实现机制，流式传输（streaming）的启用方式，以及如何配置备用模型（fallbacks）以提高应用的鲁棒性。解释其与`langchain_core.language_models.chat_models.BaseChatModel`抽象基类的关系，并讨论在实际应用中的性能优化和成本控制策略。","parent_id":"7042428a-e443-4f41-bfaf-1704cb09851a","progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/chat_models/__init__.py,libs/partners/openai/langchain_openai/chat_models/base.py,libs/partners/openai/langchain_openai/chat_models/azure.py","gmt_create":"2025-10-26T11:33:05.148411+08:00","gmt_modified":"2025-10-26T11:51:08.683788+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvHEcKiTNKeGBAIAhcuTbRkV4df8wZSTVk8im1sgZl2wtli310wm1ACdnCdukrS11iC7oov3E0hyUzVYhhUMZCHt6eTVHWWQ1aSSsnCM6DpvWivdEsvI18pY9SNZzgeSqJjkSPj3f7jy1x8hcqR/X0DRYBE0xNLuLHkj6CHy0yW6cEhHUE6Djhyl44e0BHC4icyWiOJuFTAtdYtFO8JQOIFAR/mtnlsEItZ2ZMazhz545WxeKld7DniWBnoKvXiVNAdPwXehYLMWtCwphiBslZO0orcKdGRzJfhl++d8at2GBnFVNY0WFeFDjb2Ae3oGEPaiJerCtXgZ0Gi+o9ad5Xg055VEEQBdJWvbyGfughm9iZrkFR5Ew/GXCEtDOdPJrNN34Sxbv99649qIDyDS3YewBeQFJJNECoB/MXyfOVL5U7k2xyejkiJ0TT3pD2K/rGuI8G1Psce2yEtyfRLYdcCxPO3JcaFEpM1x1W0Z588fBCHSVKTaWrxzRgGYWRtM7/j+15Xir9eDZj6vWSiIXX0ff5d6V1lFE+iUDafatJeWsED0XaCo6fa+D8+JPn57M/m7yJqRBSi9NjcB+ZWjuw8DfMJzklJo+K6dTpiaf7TWSTA2yOnxnv+LRLre0QcyIwnRZbDH6TgyHWm64h+HXftHeWF62JHUUMqqtDgHuFmmV8tkWwsaVm2h9fMKksxX6yBS2whpa59OoRAbdPV83T5ODCWuOUkXDzSJvXakpR5PRy7cMWDxZgOofmjH2QCnbSD7h8vwMCADDuWXNbNyG1G/ecSa2nvWQvUmZQvSIUF9qAb+bCRXEG655vR5wTNYEwPtWob2+iJabbWoqdV9fgf6rwSygRVpctLzBCXruK/MCm7mbgg4AxTdG9U1HqrMzXBxNJE/L4/HCO2NLeXzbF37F8twOXQ8c6jl7As/ZTmcjuzEYMu2M6YGK+yH/7iAxMRA2RO+BhnBtBTRjyDG+R2Zr3oDdqtdcflWBCCNk8mfg2iP5BtwpsPaAehwv8XnWQPKccGv00MRkC7hlLYpfLLvNGJr9BxxaXWu6lbwTZNEIxW2ZoOseQKfnOPFSym/6IuaeMavBNCQtxev+H+wXyHs6SA2FYa6yFf5NGXh2fTglThi+nwbfHz9LE7fI//bP+A7kPulWmZH9VNCdqMgQwcl6u8vSzAyYV7KRqJN93rEZ4qRTxBVh1T3fhaLXrtapF8p/25lV/Y3KA1mjWfpfGPc8Ct7rsTH4YV5h95fTHcqmPMjx3dVSJkNU/Y0tZEqmRDdTM2WlEnK2d4bryanLex/dzh6HJLfqOynKoO1rFB3c07jJKy2+zg97xPKwAeKvhyQncxjGkJtW/92qc83tdYqlMx1vLQNv2YEeHMWgLGIpZvLLbi77XN03vymxIMMpTYfmBAH74RfIZT57hdJXEg1tbze3pwr8T7aQvmoVpegQ3lEV3bjXNOVbJ154NuBtICFiMBjPgOIwzQ2pq4t1Yl6zfFMjMXUuHLtO9pjd6eOlsvhUaXHefv31S5OVDU5HAoOosiuRTL+NowfBVKKeFqSdWmow3mhk4kvmfNcNm4RQqhP2oMCMynjZ8EzPg2Weyg==","layer_level":2},{"id":"2a104a3b-2341-4b67-a77f-9af60146fc92","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Agents","description":"agents","prompt":"开发关于LangChain Agents的详细内容。深入解释Agents如何作为自主智能体，通过推理和决策来执行复杂任务。详细描述其核心架构，包括如何使用LLM进行规划、选择工具和生成响应。涵盖不同类型的Agents，如ReAct、Structured Chat和OpenAI Functions Agent，并说明它们各自的适用场景。解释Agent与Tools的交互机制，以及如何通过Prompt Engineering引导其行为。提供从简单到复杂的实际代码示例，展示如何构建一个能够调用多个工具（如搜索、计算、数据库查询）的Agent。文档应包括配置选项、参数说明、返回值类型以及与其他组件（如Memory、Callbacks）的集成方式。同时，讨论常见问题，如无限循环、工具选择错误，并提供调试和优化策略。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/__init__.py,libs/langchain/langchain_classic/agents/agent.py,libs/langchain/langchain_classic/agents/initialize.py,libs/langchain/langchain_classic/agents/loading.py,libs/langchain/langchain_classic/agents/schema.py","gmt_create":"2025-10-26T11:33:10.894118+08:00","gmt_modified":"2025-10-26T11:40:34.549593+08:00","raw_data":"WikiEncrypted:EOi5GlYDPEmhPqOJUdXOVdlPmJ7aO956qK/bxp8P/GaH3MnHsJ8ww84Ssmd43zyZGx3OmzKhaEZYI6n2eOj73U5kuDd23FnaJb6sRT1joW8+efXFkcyJeN0bX2smXZVYAIidotdI9hjHB7z7jE0eNhh3BG5cP2kYhowmkr1+EblqzYzrphIsZDfBjSh4bvE80HMBK6jb1tNeqIPPwU2Xmp0Z7RtS6yCaNHie5iAt48490+mblkLrMPjeti+BovHRaBfawU27vVU1iWOa2GyT/tEcNmJJ3mILVPv39O7zzNR8t23AORK194mFuOpICdMIIFxjvkR4GMCLsY9CStko+qbHKRJmCHmww8g16o7yF6sRs4bUsMuHLdUk8h9ScZhYzUK086yIlTvRPfWSatVPck7iDg3YMbXUaxFMAVb0aPIFBje/NFR4zAxo7NQJWa/+25jTb3mndVkqfnhD66+7fJZQE3BB0bxpb1SX/yrj6v0jV0MAzYkHZbqJWwvAW8KkZZR6vRVIi4+pdoeb+4ox/x/bmNRaHSOb8CG1bzjN8yHy6K0QF+CYpERVTpsTKhQeBDJtJe/rLPuoTqlMsiurGZhnW4NnyJ62gmdVFb+1k2tXQ/TNW1+K25+CBJ+VSsnjm2gfxAG1kLNChjb76XThuhNR11X2Xg2AfevojQ2LonJdmJ1+NgvfxN3Lb7uNFgz+PTqTMRm51945MYhzhNeb7I6y4vHnTaicRRO6Psz8d4t2kRlxgrP70AIX5kJS5LRvvvb2mKNjmIHcmd+j1MC/+e76FTTB8V/U36UU3AzqMTlyBRqKPnFQ4uLzWPWyQ8bsYZy1YHTqoj+9ae6xgVh7BudDr4qCTLD+HMhU40HFk/FjwYOWT+awAbBINT5LkMhBnqQb0Fi/1S0JQ+56nSPiAwLxtUJiHYDXV/Fc1KqHLZGyzvDBfvcQmZV2XYCNExhQJmdFsY0e/oj0C9PDPk8l3g3suja7BFEispAX+U9TPtOT9ugBklZr/GexLeiSD+Yk3GqIfRLck6vMsVm00V1q5mMBbEcGdyRKgcqcz3ujMNVlHDj40TzYYOXX33DJEKgJZxtbBZly2T2gTMyP+VmesoNK7O2td9vkQ62KMOokRycrzCnQ/A67ii4aphM9qurgxKVrxqIegpQ8tTXP8fYYstvq+tBO9tR3HJ+cAhzswhnGoZbyYAAQlYbkjQLGWVLS+PHAVw+5S4ohPGxZFoDclvBkMaE35Mv7Sk0NkkznZxDt4BgPOh9ucgPEgpSu0B88HHLm+JzOzGRArsw+PIRf97cnWcMI7rDFGr/3f6i0rcbzwRRELB6TgtGdnx6YB0WF9Ymd8qfj9SvetRZueTp9/mUH/2xt7sn5vCVTcZeY081cOczmnoUjhHfTAOWF+Ks9Kjbp+pRYBD6M/LCIEW3E/mcTUtPJNOeSoPC90hcohVgJ+pxzkiJ/T5CZRkEGrGPTD80lgbbo78mDyp3pZA6zqI/Re9euNyr2LOviJke6MTKH/V4dr3WwToFA+FZlI2LDeQmTzmMkUwv/3UcNklEPFpWUrERW9pini8MY2GHX8Ypj0e/wQvTlA0eOVmrG37PZ/rHecT15LTjrk/UNLT8EKI15HSNctjRv9ZppafShwpbV1P507r42SrAinj3qbezPxVxaLGGZCZ8hAysdv0tYFUxZoHhjFXnAiw0lpz8Vvt6X8Z+QTm8x1/Tgvz8X8sjnynXVFHCBYYYoaA3OxbO0qqefe9zDV+87zR0eSHAO0WU=","layer_level":1},{"id":"f3ab6d24-0538-4205-9c65-2f6dcde3f5b4","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"核心聊天模型 (ChatOpenAI)","description":"openai-chat-models-core","prompt":"开发关于LangChain中OpenAI核心聊天模型（ChatOpenAI）的详细内容。深入解析`ChatOpenAI`类的实现，它是与OpenAI的GPT-3.5和GPT-4等主流聊天模型进行交互的主要接口。详细说明其构造函数参数，如`api_key`、`model_name`、`temperature`、`max_tokens`等的配置方法和最佳实践。提供完整的代码示例，展示如何在`Runnable`链、`Agent`和`Retriever`中使用它。重点阐述其函数调用（function calling）和工具调用（tool calling）的实现机制，包括如何定义工具、传递工具列表以及处理工具调用响应。解释其与`langchain_core.language_models.chat_models.BaseChatModel`抽象基类的继承关系和接口实现，并讨论在实际应用中的性能优化和成本控制策略。","parent_id":"605b534a-c19c-4f50-a7bd-dd79a672b6ca","progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/chat_models/__init__.py,libs/partners/openai/langchain_openai/chat_models/base.py","gmt_create":"2025-10-26T11:33:16.285518+08:00","gmt_modified":"2025-10-26T12:15:58.005989+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvHFf4wF/R9GcRwEa6/WEC3KnLZJ8VZjt8lrTAn6BdeU+iqfZlzYonzhMvYgdyUV/IVMMnbPxgbolWgIy85ubMjPPxBXIns1+ftubwLq2Y1Lr6WNl8b0a1c9m6q49MXTJZxVu26VZ4NASMPSpnKejzeJPv2m93P259k9VWV2PSzxBCrF9/rphbt4xoTF7l97xiRqCyUO3JjpBHLLYLFc6NC5ff6eM1km1RrJTSV6I8p58Tx5hpFoJbMfxnTIM+8By7O2Elunmpsrn7IPrt5VD92xVovF9SX9svHRs9SRoUL6UuO4jsd7aU+GripCQTmrSMKuok0TdyPMZR9hmcrp9sFaJy1HQ+mFbFyCbKZQpZNiQbkbtzjtGz3NkWoZ99jUepJ8V/4RGkDmdXVOa489WRYCJAwBNJ+iR++1eaTannfDXbX7fu7tqtNbPsnN/fIgzoQ5RZKuseCN2JMA0l4Ac5JvSCZACU+d9yzepoS6aWPwxz69rclDyohpjBHELwB81OKMqrWyRzYdWiq8xQ619kRzCKbTT0N9IzOWkkX7qyeKY9YRwOQFpmHDla1w4f9JkPUXDXT6HTpuNyAV82u6ZoR+lAebMN4VBFmnaD/jdi6i16ap7d/MitXHZy+/wwAqlLBNIuE1hfczE2Lcw+zlHiu8R+wFTtlaks3yWpotlTPkb36MRKx1Wf3b/c9Xc+FtDvpSyYzdX7288o764apIMjZFQGQmVUh+SCmhPC6uUlvRMg5Rx0cgntVAzMbzGwcJdCwFrnLwPwBiWv1owog3ZTTJdeRmkBzzyi2xkICS3GRREGXH9DbgkvJ39i6nQ8rBrKHGAxLiGCos8RvtDNpXObKCIjO8Y8lxMree0yij0XKGkmwHEZdkKOHb8mO84l172Lm+SHeDMGbdSXzngM1Vi98QYIuvd7T13ma3Og8Va44xv0FLlzVDKJomFCyFEUc0ufOGebFHXGYJ5A++KVm4tsKeCSe4J+kggiwl91M0aydYK76yJAdtZKrJvja31PKT5DqzU1N2skcE9tfISXBUEgeA7RqgAs2Z0VQfGJDBvJ9sK/KT2pVNEOn+uKtB4WV7Rlh4GdpjUEirXDxxs6bweO0iNFcikfUPYlEwJxqsgtQ+JxYEgOCMsXysCL0c36fWrmAN4TVS3Wm9vYGfSNnBvR5VxIYXBTx2Byu+D9H3s8AgSxzI2GgS+7CJW4z4xUMWhrQcX/cmJAkeibpFTh0XGMIVKBmXP0xQ823o9eECSUXahsnzZhoBpan401V21L/Qyv90T8dwem7ssas/BNR/6aLa+sqwypSuQOP64VISyaqvdhNTH/h1xM8D9JVLdRORYPtZRJb7FtsY3JlYQlFFGs7tjyA9KOZhL9g9m7NsU/TBkZDNugs5L+H4aVbeQmWZZ9PDu31VTYgDDQUXuUZpjC+7Uc5kgPoHHZHgz5sf4l1hlf5gCbkNP26JpLhPQ4+DItw==","layer_level":3},{"id":"e9f26301-bd68-460e-9305-61300f48f5fd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"LLMChain","description":"llm_chain","prompt":"开发关于LLMChain的详细内容。解释LLMChain作为最基础的链类型，如何将一个语言模型（LLM）与一个提示模板（PromptTemplate）结合，形成一个简单的输入-处理-输出流程。详细描述其构造函数的参数，如`llm`和`prompt`，以及如何通过`run`或`call`方法执行。提供实际代码示例，展示如何使用LLMChain进行文本生成。讨论其在更复杂链式结构中的基础作用，以及如何通过`output_key`等参数进行定制。文档应包含常见错误和调试技巧。","parent_id":"739017d2-068e-42c0-a018-28dc42bb17a2","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chains/llm.py,libs/langchain/langchain_classic/chains/base.py","gmt_create":"2025-10-26T11:33:28.701148+08:00","gmt_modified":"2025-10-26T11:51:00.113238+08:00","raw_data":"WikiEncrypted:NbuFuqBLiDJERZGIBD1FY6jexfGAiW1inEUUQ3ms5tCdgaeLppRDVfqf7dp/kIoxig3m5pbT6WGcmHtKxbKHlbUPnP7QqVwSgpmEe+B4TLaVmQlj61FNgzduOZ0SfysVHrjRCb10lwABH8ABr+5o9cciR+S/ODrupT+m30q7pHLVQEdQE/DNsxF1ho7BmVLtY1wlPaB7tq/p8NKZCklsnTG3XqQ23dYNp5coqmXvsld2vVSwmqgebHTW5SU5hrMadtpu14tt+05bgDtUBjuXcADXxi0ogBU4kiWPX49IMw+Q8Oe+vzwbZExy3KaSiaCNKeYMToo/HwbxV5q5FqYPVJNydddBZY5ctq3QWlaZhWaADIYOdzthsbP9U6Zrj5y+y6cU6Sv/FfqTj2j7GhC9oTezOvNBYm3s7VadnatM+yvzxAC2+IUT6AC6wPB071shPIdlMXe+vY3kYPzgjI5YKy4a6s2iGjIlsrwyT2w+mXd0IBZ/3GUvf5c9AxcZkrB9PirdhZs6Q1Wy1wfPDLPNURZFKyECV/dm+Gmqi0p5ckj4ibihYWqAKkxU9zEKPZh2u5f3pCp3Sfg+ptMjyMctjk11UbbdBcwQ3TvFssNtSxw9PKA4dkM6jNMGgi0u5AqLbN+w+ZXI6Ef3b6mGSmntOr3uRkX12LdHZtSpMkclE6UDjV/KmOB6VubGlTyh3h8v5L+KnBg0/hZylNrca/r0cFHqy9hr7VE9YtGLlli0qXmay3qUU1Gjg/qdRspjbdEYGFCgClrDzf79Ghx/ZyTrbDgzEZ/MaXDfiixhwN+EaefcRZbTETWvY0CnpnZVQ/bo7EElNyzGCPwcUhQ5FB2DbHssDTpsM/TlkwZPRNvg2Qs4LYsQ/W518tW1E946DFJjWlHd9UtqNNVTBQkP2u4j6DnZsLE2evgwPbhvFHqD38C+WYcCAekPWQwlXtCqlWpDZI/MU5pEr6RHSwMlB7/FhrdqP38PIiyiCOUAW9VZt3xXwbHQziDx6Aj4AGEvZlQeRwUTetHEJvQolCFyWprg33f7IO6ezGz8s09kTen5xuWhPuvh1obp8JZsrQvmGOBl3OPuZyhyqDArefBtG/pTPZuAXkgcZUJGptr4WlsCFVVIvxGaChmYcZCtW2rhCxJU","layer_level":2},{"id":"c557abbb-3556-484d-8ae4-9560f7de948a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"OpenAI Chat Model","description":"openai-chat-model","prompt":"开发关于LangChain中OpenAI Chat Model的详细内容。详细解释如何通过langchain.chat_models.OpenAI类与OpenAI的GPT-3.5和GPT-4等模型进行集成。涵盖初始化参数如model_name、temperature、max_tokens的配置，以及API密钥的认证方式。提供实际代码示例，展示如何发送多轮对话消息、处理流式响应和系统提示。文档应包括对不同OpenAI模型特性的比较、成本考量、速率限制处理以及最佳实践。同时，讨论错误处理机制和超时设置等高级话题。","parent_id":"cb531d92-ebb5-440f-b083-fd900269d60f","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chat_models/openai.py,libs/langchain/langchain_classic/chat_models/base.py","gmt_create":"2025-10-26T11:33:29.984342+08:00","gmt_modified":"2025-10-26T11:52:21.625761+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvKNnginNTMycOQXR/3wcWKgwg7tWCMEU+jRxXcWz729ZKINBSOg4DSxLVQVg5fr6NERC2DYaPgjlsu4YyMV3b0tD/28KDws91go/7fLBWi1nuBkTyRxQuqeDPKmbHjknqLSEFNRbiTnyA4NIQIJ4EJDR52aVUn9bIIpRN8pnNEjBBQ0xdkM7qMxK08lgDAI2Bosc4FJWHEyDlo5YNyYWWHegmK49pb+IPpXvjbLwAze6pz+PcL24pJ3utvgqkS29gmTCHrTy69PkD3zszKKov3dHVw+tgVznD/K1ZUEBP08JnDT6fvcXT+wnER6ZPpQNVA606+BbNCOHdGaEXqhAgQFtOtz3gxTV1HyzctCbWHY4wVJ3wIJ/6+8DU4sS7bGqx09a6D2c2U84yCPBtvnvtJDLMDC+FR+3jK+wRbZSyYafa09o3YvMncJ28rI6F89G4dDNAZ7ig7jkQG63u7hce0HciaA704Znocb7yIavgsOGb1ghnZmsNRjm6lElyld3uQChDXOLT9Uxqqly9JJgTVy+CVXDwKTSpNDR1N+bzYj9NnDkQGmIKwLRmKu/c1Un5XrVFiIQ+2sWFjLOMOdkCt8bryQP8Be3hMKh/Xg6LuANvrBMT3VLhmZrx5eLpArRkFrD+yQ4Sh07x41nzCYb+U2AJbrlZ1TfPaQqlpPMxnp80nUD639q+L5ZX17g/ILnOrOQXnxh3WtP8xlDbJ6KpEcrOWcgRfvYPBy3NKwoClBEddDSp86/hyYgDAKPEoWrRJ/B5P66kg6yNFIefFDvCwDFNbx/vQ8GN+UeoR6zQOqsnYVehtFWqC9Fr/ojSI3iugIiTbiGL4LMpMwplG2YLzybYZpS/ROxDIIVx/0lmXn1B7b++ETAXAMMdGHmFF+ddE9CK3q69BOxjgt1Z/lpmopb2WnCYe4bvJARBN0u31ww0PAC3xf/SlvXHXa9VMz+ykDzyi8gmDFGYi5JiQUbH+nBW9qy1GlmEwa2Mf1Tj5J/ejPiNzgWQ7mR70SoZqR34WnhCOcA5H0E9C6TNU0kjdSKBm/FSgaklikqXde5JXCegeIKCZCYHcCZYzDCFfrfUBySQ15gbLm1xYRMssAGMdOOE/udLyTHNWcnyGccJWFpR6DGXjbbNjgQZJiD2qkqhw==","layer_level":2},{"id":"baf186da-7347-4a0c-a819-e4c5f5225530","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Agent类型","description":"agent_types","prompt":"开发关于LangChain中不同Agent类型的详细内容。深入解释每种Agent的核心设计原理和适用场景。详细描述MRKL（Model-Reasoning-Knowledge-Loop）Agent如何处理数学和符号推理任务；ReAct Agent如何通过‘思考-行动-观察’循环解决复杂问题；Structured Chat Agent如何处理结构化对话；以及OpenAI Functions Agent如何利用函数调用能力与外部工具交互。为每种类型提供具体的代码实现示例，展示其初始化、配置和执行流程。文档应包括各类型Agent的Prompt模板结构、决策逻辑、性能特点以及选择建议。","parent_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/agent.py,libs/langchain/langchain_classic/agents/mrkl/base.py,libs/langchain/langchain_classic/agents/react/base.py,libs/langchain/langchain_classic/agents/structured_chat/base.py,libs/langchain/langchain_classic/agents/openai_functions_agent/base.py","gmt_create":"2025-10-26T11:33:31.88425+08:00","gmt_modified":"2025-10-26T11:52:19.112767+08:00","raw_data":"WikiEncrypted:+R68usAX28quA3KS9aZo9uuYg+QwkXE2yw23iPIV6Pc97rRMQrfiSAwcBE00oNiRHHSnJhowdHJhupSAKdZyV+khn3Ml+883IEzpv7Y0BaYMml3+nwTj/eRbO1ceDXz+Nh+5mRr3pgBRcskWTAPHHTmMMYQYJNt7gkxElxYE/CkqyJr6xh+NI5y7ts9OjSOoNiha2dhK48ahHCsfNi6sjhFmOoAX0C35piwy7mzU5d2fNBwuQ0ASZJeP0k4RR91sqn90KyP8wwyBhioNmh0ffnf/NGMNJOt4H93MvrI59Bmmmx8QRQFrdk3M/OQqEf6jYX60nJn9iRIhxh534AK3TB7dl7XPTQevNrWk82xmYfjFJq8A368K/MxYkJAWTuHhS7WtEWOcpaXTm48g07L9tByk+zPwZ+jnqg4EwbXEmRxwPfcgRMfKgMrhtxOMXYm2o1zTUxj3ujSQYxHckoWduC5cc04pq4Ls4mPYlqsbXawsE1iwcqfZZwhVKMS9Awq7Bi1PZ3G9WTudzxek59J+Hw2PVLKfwXInYjR1S6a1twsLpWQXiZ7+Xna46ZvPBNilPiyVFqhBLyKkjnH2nYhnQt1hxhfzDIU9cLv5W/YpzIRekPH1usjM0zBQ4PNBxf6po8bdVFAeOEk04C/462fgNYAzAxunAcpSE6DGcPpQyOUiXHIY0e5apEWsY6JC7Y1BoWCN11j+kGQy1MLSHin4nMoya/q+JUuEq/A4NpDVROLrN7aO0Sjp0edz036WREwGGiNKgJTlJx2gZDJy6w4A2l7e0QyE0K6G5JLloJG3NMG28NCfhfbFHCR4pn/3t+5otgHhY183dsus+wZB5Ohw3ePgNgArtNCG2+JXqpmJCxlgKNzKas8N9+c9K0UZmFhAkKvjfxbtH+rfdiIlvEvlbx8s1kuIyg2Sa5RqEFbk6hQLSSWCr1IuFHxkiP/shPQI+L7zvWRK/0w40r21D7hDmGpNDNbaXG4PxmA4nV/JsdWRuLJ6ClQqQkFtOA7jXTgkUAX67334WDaG4IsB7CQzrG8CPHC86sx/yJtY4Hsj+G3JSCYU2dgXxFOm99xm7GwlTLYp2FNRbtSHzVm7WMvGn4oDhXwd+Nm7ZcbgEc5WT6I4OGLEILq3DdsG7e/8NyNKQvy3T8ELQANCqu8E7B2Qxh9ZvV8sxesQA+PHpVZqsKJWI0lGRampA4jR+t99oeV6ojh5vo0CHbiqYtpqoPyBLg2D4vk/JpuS4yBt/GThMtqkdMOMfwGzVcbdxWjZtMB/tLubnNJzZOWwf/CBNlsgk55i6WpXnsWt3rMkYoTTTlj+2n956tsgiaSeNyhbksOHaDkYryHEpvM1V/X6c94ca9azKGBkDQFHa8JsKgCP0+mhGOwEcHHARocDG+hePUZJ6YnMp9cmkYahTil2zcYuPBQDP1lkgVVm3F2GnA5ns6aKfjlxnzaoAL+CnBZy0FAp4/PLt+6o34FxVXMZSbm8NCpZPkrKiuC5G22rLB7fp8RTSebW6AlROQVCOsBRwQ5R","layer_level":2},{"id":"ee740caa-296b-4e25-8447-876ee7caa6d9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"OpenAI Embeddings","description":"openai-embeddings","prompt":"开发关于OpenAI Embeddings的详细内容。深入解释如何使用LangChain集成OpenAI的文本嵌入服务，包括text-embedding-ada-002等模型。详细介绍如何配置OpenAI API密钥、设置请求参数（如维度、批处理大小）以及处理API速率限制。提供实际代码示例，展示如何生成高质量的文本嵌入、计算语义相似度以及在向量数据库中进行相似性搜索。文档应涵盖错误处理、成本优化策略（如批处理请求）和性能调优技巧。同时，讨论OpenAI Embeddings在不同应用场景（如文档检索、聚类分析）中的最佳实践，并与其他嵌入模型进行对比。","parent_id":"a70dfb9d-0144-4270-8d72-8dee18f10257","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/openai.py,libs/core/langchain_core/embeddings/embeddings.py","gmt_create":"2025-10-26T11:33:45.558126+08:00","gmt_modified":"2025-10-26T11:52:26.919417+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvEgJwkERxWCVcuCL9uM/+bkJFVqi/2TgRCdX1DPv4GUJKhD+pHigMtC94MJb3gMhKPPDw75wnOKd2sptLShrF+ijhBPJEQqmli/clvKYnFxCieMSl4rk4UQQoZz3aQ0dem1sIQ9tR7PKnyGfMUHTCoK7M4EyZ9q9ZGO7IgJG1Dpa2fHeGW7WfiO9BuO/+bkuOKWFobLmyKvKaOlZZ3bR7qVkZ/wTd7W9UfkmhJ4uXaYjBDbO3IdhV5s9lMYQteNeLvj4zPF7A2a9px+FOu5UiRZf0/zn7oA42jHEj3T4NnJrzzuV0w9Hd4sp7MdUf++MuyR4i4adfxB9WTo22vZPfILsuJOyvR1DH6EMr3/UdcD7ZAeo0nmAaF00Ktv6A6K3dYOxYmdOzoKFHj+DCD7GvhKVNrs6Dtcivf/a+98TbMIN5YRV5Vw21WyQhPL7Nhf/IwdwtILwkgfaJGM/UEXzyeVxRHik4j6fqos+MEQmkNj/fhqMNJXb4+4g7NTayO1u8y7IX/FK6ByGqe8XJAtmxi7uE6sAn7MbGxzmSBUUkAxnOe1Rxhgcd9A6Dn8X4N7/kf9QwGuPslgBP2SlueJJJHRYzC1YV4RYjG4xMT7RJjmev4X5za2poKgusPvLtrFV3ZM3vXHu8czJcmmi1TViHFmrHkOTJIhHJq+g9L0JAOtFr99fSMaLNlk6Z9K0iC+hYxH6tDABGkTC54nsZhBuPwI+OYcImC6sFKOI3JNwxZEKEndoryR8Lx17VzQ38ZIdPEWPDGf8hK5m/299gOtBMJ5xMEXYWwUVWXEJAhEwBIuPk1iiu19m1/A6CJcnzlFGIwR1Fk/QOmiEs7A0obI/gwln3zI7xlEaiLWNcCPR6C+zBfUeY0sfi2yFPBs6gpCY/HGl79/e0BB4PjcRnVgssKJzkmA1MOpPlv1Z7xBaGdRYHSm4Blprew5rjBibDRgDL10hMMPN15No/SMUDTQAXDp9rEeqjiBpdTX5Fns1S7nWy1BwH+7v7aOEULYRoP12qfQY0tBTly501Fxr0M+DRXxmK0rMPLcRIYWg/92mdphOCFGM/rdZ30iy3PHPCGRdLQTjqWm06qXjEvw5MqQiVJ4mRf7EeQYxeeYQiOmWhXFHHNJCaUncoHOTbd+YBSV+VfNqMN1kys/kud6KSCg0BoqbJC1J5RRdnhNwLnPJtud5RiRFVjv9msQN7lmxmb7IP74g7CferKnxqfw14s3YR/hEXv3t9HEB6yTqAN9Te8KUFzPAdc9/bRgUOfso+tOUCGrGM6BlBAHRO7PhLTfhufw=","layer_level":2},{"id":"3ce9ffe6-7ff3-437f-a8a6-8146c5904c47","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"基础LLM类","description":"llms-base","prompt":"创建关于LangChain基础LLM类的详细文档。深入解析BaseLLM抽象基类的设计原理和核心方法（如_generate、_agenerate、get_token_ids等）。解释其作为所有具体LLM实现的基类所承担的职责，包括参数验证、回调处理、流式输出支持等。详细说明同步和异步生成方法的实现机制，以及如何通过重写这些方法来适配不同的LLM服务。提供继承BaseLLM创建自定义LLM类的完整示例，涵盖错误处理、日志记录和性能监控的最佳实践。讨论抽象层如何统一不同LLM提供商的API差异，为上层应用提供一致的接口。","parent_id":"36c35786-2770-47e6-9a89-1e55a35ae360","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/llms/base.py","gmt_create":"2025-10-26T11:33:47.076752+08:00","gmt_modified":"2025-10-26T11:53:45.132288+08:00","raw_data":"WikiEncrypted:krlMJCHoNKYelMAaMHuN0RpnHXVnqSP3pdTrtTdPvmsOBAbldI9tpjQenU4wVzLQTZpmMnKLm9sARsUVEDb7JvkadDtOqi7mY2oFo/AhYys4K/6ejA4S4GeL5Dr/K3F7kWDYJ2rTRe890O0l0PcmIupEGJ9tLsBQE8bye8cUrpkjUmRPr0W4VGm5TWBH810dSAJn/3PVuSdNjI5bN8uwq09dkDWD1QBR2tnCvR3JqsQawtUMLqRZ2KCAt/xo6NRDVvw8x+ajnRuupFLk2OvMJB8TTONuf2zDCj5uM/p+DTRxLxNwQSA26RZfr+OwBOb84xn2R8cjmf/esPAtlPEgkAyUnUA9AfE99n7ZyC1q3K9LDM5pWfIyTG8qjiBR4D70PO1b9LmvTNAVp+ABRlnYnYs9s1/pPKgVqR9DYJ4qjgTovQzDAqTR0dZfaB3FSZrLN+cfQPlG/luZqOgjJPXalOVRxDX06yDY4YXI+ZKIpMec8job1OGDLuqgSjmWGxu6M3U1pvAkKFMcYcJACXcLDjN2Pvnfeg1QHIVyhx6DQxABoagesMzw1FlB3by1/W3C+0Mt3jT/uiH4Equb7f5nJSZ05VyRzgNqfRoBs3qyaqFTcTjvMiDB4k9wyN/LOSMpcXDZI2yGRFRFldfw/wA/y9K3Wp28+jCJiPgU0Zzb4z188iUTFJMlO9hge7CqHIpquJLhoHnvYKM451OvA7xl4WzoJlM5XlBqWPSAbcyGIn385U37H/P4tuKwynDa/tTNAwVVMVwLleoYajsMLIEsjGdL+a5CZRpzSq1eqMuMoy1ZjvVnZBP4Md17KPv/2R1ljE+SPZbpdPDr6EXyu8k+cm4Z68kZDNLMuFZZxCvJXAmfNFQTTUy11/6vxAz2H58hPqd3Iny9L/6alr5/Cmm5Lm7a8KmfcvMsUNSNTiDHMAf4sVJjfV8WV+xR08/kQwbVy792mHxCk6nTfko0T6ZMgpnb/f4NUIyoniPk5sTci7Pu0fvv5Y9SLofCrlAOKyqg3iiY1v7Zd95QnajMegik0SqUrwA2HEqlvmTpt1MK/zs2Io6LpixVlVq3XVXbbo/ptqD35LLV6CYptAJeDFO7asKfWh+BaSXqAvUOJZztj6Zx+tdwCZZxqy9h/8AF4iF8","layer_level":2},{"id":"73f489e4-845e-416c-9690-d0ae30e3ec80","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"PDF文档加载器","description":"pdf-loaders","prompt":"开发关于PDF文档加载器的详细内容。深入介绍PyPDFLoader、PDFMinerLoader、PyMuPDFLoader等不同PDF解析器的实现原理和使用场景。解释如何处理PDF中的文本、表格和图像内容，以及如何提取页面元数据。提供配置选项说明，如页面范围选择、密码保护文档处理和文本提取精度优化。包含实际代码示例，展示如何从本地文件系统或网络URL加载PDF文档，并与其他组件（如Text Splitters）集成进行后续处理。讨论各种PDF解析库的优缺点及性能考量。","parent_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/pdf.py,libs/langchain/langchain_classic/document_loaders/blob_loaders/file_system.py,libs/langchain/langchain_classic/document_loaders/parsers/pdf.py","gmt_create":"2025-10-26T11:33:47.273358+08:00","gmt_modified":"2025-10-26T11:53:40.476703+08:00","raw_data":"WikiEncrypted:VVrAFNmq+Sw8rN8x4vU6dhSkj7Qi9i5shfr6exL6usqK0fOH4o/k806rJtg9iPhIRvlKwktoOmXPGQOrzyNhBUPtiSf4MbgyOB31Db5gDq7gHQhDbj/PgmCca1DvrIkaSqfTyNLRILjBWC4wHW+eRRZxxz3+rbRrwbO5zlys8omD0Fr1C3Gs47WAqqbX4fsUcbl5YtumUAvRdUyXQOqT/eEa5ZXK2hJKCJcotmB79cHdxigS36PRgJ65AkpTKqIFSh6zEnxXMOd23fI/FzSZ85f7hookExKuyQJNTCwtsNx0KbA2jsNrxROWWFCCe8Vvlh+IX2+joYqk9oNOz4QC5V88Y2dCN3l2roUs8NoMjr3y01m3vCFT3Do4GrHGNSd5iWRzxF5TruJvGDxaziUGpopBUmQzcX2Fs7E+ALn85zFuaPCKmJG56Xc+JDhDepsI/u9Mn+styMvrs9n1XnLY6OQ5BEf9PbStE8wgSbeb6BtggjzUKKjPuhnpuG2YQUj+9wmvBkz4XN+iAEo58Gn2HlsJrVs/PlH5H+6FTm1R/iq02HCMBAE5tNesW4bU2Xi+ctWMPDBA1uEjCK7zfvQloifv25XMiHz3PUJddxAxRS7HBd3gWDDqkO2I+WWJl+i78e55BtEoawq+f4+vnUpqDSmjPxSnWdoIEPr6sygHcpN1QExHEMr1v+cIVBaPmrQGDW91ohowealkfFsQ8yeG2zOgrMhIJFU9CU3cdR1Mj+A/u1avRfQNLVsBVkqGTELoIgz9rqystU/qCHJsDCkUOEDO/fxFPXA0BLbeErFemxMAtjuZqTdojUztiwfBw6HdQN+/mQsp+uTujVkxvdTzQSTF5z44S7GiJBNtFlhWjLgHARbtDCg7D7mkWtl0ca1D+GRn+RvUyDlsuG91s77pN5RHePMqmlm74FKyMnlhqRC9KXEFzBj+sJV3u5/DaToaX/N9ZLbUvsZTcRGaVDxJ5dSEyFsDct+3RWdb40WOHKJ6UGmx1vLMl0/9oPEpuw2F6T4wtBxQ+CiGowy1SZUOOBfPi5nlR+mmB8Z9mxs56osHhKYozrEljcxZP5fWYXkHkAG4N/ksSklJW1lBftr4X7zA7Sl6UJE0nFjX6GN7nEyU4dT0I2fyad+O+M7SOVOH2tDmbaLeXikR7SRZvaRkqcALDuBj01jGvdsfl1K5yOG7k3Q5kqPWAqmocUZbtiaTj2+7ErMhNR7PtGEVelSoHOu1xoNOXNoJT4GeMSKZB7AuyWxAtO0BS9RAFuI6CRbk2w/eC0mhWexb+VYSrRYSlAu61Iptdnbg/K71WNxLeh0=","layer_level":2},{"id":"0c8f2658-a312-4ec6-8008-9bfbbaec75a4","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Buffer Memory","description":"memory-buffer","prompt":"开发关于Buffer Memory的详细内容。解释Buffer Memory如何通过存储最近的N条对话消息来维护对话上下文，适用于需要短期记忆的场景。详细介绍ConversationBufferMemory、ConversationBufferWindowMemory等具体实现类的工作机制和参数配置。提供代码示例展示如何设置消息缓冲区大小、如何序列化和反序列化对话历史。讨论其在保持对话连贯性方面的优势以及在长对话中可能出现的上下文丢失问题。说明与其他组件（如Chain）的集成方式，并提供性能优化建议。","parent_id":"950a5856-cb2b-4c27-8314-1f5789d0f152","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/memory/buffer.py,libs/langchain/langchain_classic/memory/base.py","gmt_create":"2025-10-26T11:33:57.445052+08:00","gmt_modified":"2025-10-26T11:53:42.619759+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RHGuEMkyk+dnJgv5zGAg4yaO3Bs39QBxR732TgcSj82N84D25dfSsG7j5cPd/APzcYirbYkKSHQt3KQjM/h4bCTkmh/7JMg1S+lAduBFOaubskqssGClPfxtzQqA/HN8GKe1osxu9GPJf87l2Lnsj9o3tFxJRY9kL2H9V8uZRSGFvS62aHwdri9SfDGI/c7qP5Bi+6RHVNq/chmsHGZTNpsvtEJFhZ206c3O9gP12qrugU5JW+z7p33TiOn+HmeZT9zxjcNpqIb1E3BegicCtJNejCTqVr9eVNC7/3hf3pYr8o83XctQjE1mYScwVo9PQaBsiwmOdKZJJpJQi5QoHeY91eupUJZD2yTYY+NfcZykExwboqdP8Osb7MrQ2RmxEJk1zAhj4DUvLHxX9/QxLQuQnakin/EE5VBnJbqE7WDsfsYtre4z/MKac1RQNKGQjT6heOmPXyoN00ytfk1OttEtwziKRK2+H0HYfB5nuagIVsgXsiLN9z2aNmC+1wXpzQc+gNwwvosdl7WxpO6RHgxRmAA2vpHSquRmzoUfRCELzTbUMHRG6HRs63Sn2eKphM9IeugUwMi6/6SdPFELtEvoFeaK7+tae+AbLI2lJWEbkJqw+VYPuXNJdM9cJFBnvxST71dVR7MpqiR4gfNEN92mgZD2329lX2s3MesHBrVMM8QhB1Ta2K8JlUTgSQXF72uIteALuZEF9gsMGcaDz8QO5hafdTlk1Bedy81wyLH8WB5wSd4e2Z9s8aesgg00/lxacKx4o53q45kmZ7k6B22hzc8zr1D0kzpyxHo5J1ZGwSytKXIuOUBlnuUgc5LWfD9I/jXd9CplUL7E2KV0P7izyKduCw8BysxmWWPvBzSqqL1MUDSMxtPSeD4o2toO3SZmAQhRYMWyoaX0/jr3MjRRzzCLquIGJPKuUp7KtTCAxmqhcwBl07SGwNmVXFfcLR7M8Ol7t8eKuZMfbGOAyqHo4BkJgrM2mV50EEt6VZ9cSV41mYqqXBdSPijEO9xPxv7QzA5JLeXtsBJ5jfeYHtvKnGo87jk8XWd/AhMx4b3h7V0+yVx8Igs+rH9GcFrbj30Ugc1GoF/dJUku70FOuYH+hI5Nj25bUK9Zipg5WNehUWvJE3TITQo2t7raS8nGkF8O6alTv515v6RqeabdTJoPRAeHA5mRvEhNARcBGQH+flnzhdovAOmzArrYs3sa9Q==","layer_level":2},{"id":"27fbee26-58d0-485f-a0d5-790bb9fd065c","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Prompt Templates","description":"prompt-templates","prompt":"开发关于Prompt Templates的详细内容。解释Prompt Template如何通过模板化和变量插值来动态生成一致的Prompt，从而实现可复用和可配置的提示工程。详细介绍`PromptTemplate`类的核心功能，包括`template`字段的定义、`input_variables`的声明以及`format()`方法的使用。提供实际代码示例，展示如何创建和使用Prompt Template，包括处理单个变量、多个变量以及使用`partial`进行预填充。文档应涵盖高级用法，如使用`jinja2`模板引擎、条件逻辑和循环。同时，讨论模板的验证、错误处理和性能优化。","parent_id":"1248f9e5-5ec0-4bf5-b002-ef59fc4259b1","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/prompts/prompt.py,libs/langchain/langchain_classic/prompts/base.py","gmt_create":"2025-10-26T11:34:00.681233+08:00","gmt_modified":"2025-10-26T11:55:07.408924+08:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxD3DELG+AeH4t5upwEhnAcAKnCSHZqTct676H4cGQIP8Y/lw3oHuCzok4so+iyrDK+HYN8g2Axk1hSnwdEI25/s4nYpnHY5dOox32grPkYGS0EEIr1aet+9jDko5zy/uQO3lbMWDuzKWViKG9rZOs6Y65PO3RFc7pUrA0XBWMUA4iFN8a6/+CE35k5GmfXq535H5uAUTd8+iO7LZIUHfdzxz2P+09hTwAh1Vj8vvaOVAvu7+ujewOk+5ugFSo1P4TdkNEi8db9S6HRwzzPr7uWkECQelrykvr2szycEn6SMUoMgVufvpY6181diE02M8pIWQF1J/DzAUfS2k42P8gKqyNbHfUToYGuZJDMfv21Z8KQogCrmE33Zy2QQjgFXo8wjXTJpwOmERPBJnSq+DD60x4M1DwcGFxwU37yQes0lt2I40EM6n/ctdzKB0lTIIVS1pZyrdY70p8laiQ3rYXSCjxoS5kpZxywa6coy5bn0oiskpygI0uDP4k1i1rGPe1KPPjskwnIHqC7I6NkqRhyKwexfQVlpVK0aorXq4NQ2DGrjLih9uXeUeGj3fAiNtcjnkLAqRPdLfV8Al5s3s8pX+B+dpVIS61M8rgib821DoNZFeicjwda39z3ufAULmrp6PfoaBX5d2luVap4R1EF4GrIl1ZZl1eaO4u2ejwVxXMMBjzZ7oa0zxyHsaDoIyv/cRdqj1UgQd2DNVes3vHFBnOxvxcRK7oDW51/dVvNyfUXmxOxIc7qDp2jDgbiGccoZOdimNDe4gsqJaqyWa73ocRNNrOUbf6qpAxSblCiyz0U4ASaRG4XiXwGKmTWWXl65DQU764fW9qoqx90f9Xz9hSa3XVjAIUzkUFoeRNLinb/t6vamJuL0om4ng0dlYRD7cyhRflEgE5zT82Ez/rlZFzqiCl6MFN8HvRAxOM+IZwTUotS+QorVH85fpr56cnf5SelMkXTAtuE2VSG3eJYM5f9GiNXWyGQwvA+1cCm1WKCRcGOdOYTRdPPWovZb2jr10438St49MFej4+m1Cq/3gbSn54xG043HgkSlmFo0sXiiSGHG+3it3ikVhzXqh+hK/0eYgOdrNoiGwthsb/klAcSthdAZPS+t7TtkymDAk+deS+H5G7gywVONenPtPC6tbQVw62oap+NklLnamzBibE+xgQ5RNLCnuMtCHyuVUheDCKBzRDdatXftkHMKqioCnaHgKZtcSe2UaTHU4fDT+kB2rGV7zT6XZniPbrhOXBx6iH6Sk+ErIZcdX3p/wHQ==","layer_level":2},{"id":"a603d133-5caa-4658-b266-86174253b124","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"JSON Output Parser","description":"json-output-parser","prompt":"开发关于JSON Output Parser的详细内容。解释JsonOutputParser如何将LLM生成的JSON格式文本解析为Python字典对象。详细介绍其工作原理，包括如何与带有JSON格式说明的Prompt协同工作，以确保LLM输出有效的JSON。提供具体的代码示例，展示如何定义期望的JSON结构、创建JsonOutputParser实例、将其集成到链（Chain）中，以及处理JSON解析错误（如格式错误或缺少字段）。文档应涵盖其在数据提取、API响应生成等场景中的应用，并讨论如何通过Prompt设计来提高解析成功率。","parent_id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/output_parsers/json.py","gmt_create":"2025-10-26T11:34:01.391186+08:00","gmt_modified":"2025-10-26T11:55:05.172049+08:00","raw_data":"WikiEncrypted:wNRNP+9P0xhsIi3jhxEWzOuSvOFeEjY5leudxlRzFNYziJEfmvpxL6PEO7NuGIwwhPJyiEFDE+Sm0G5k8IWhQqUlYkbDUTnATk5qoR/8LHQATj4aw3rWlfVM773qdowQpA+FhI5J/SLUmvgNg8Ib3nWXErpKR0FyxxWAhz/y2Q9tfD3rhe4SmaL3S/gE2PzylD0PP/am9LohSsmLvzCs6c3rAnawz4aEFcLeBcDcQV3kw+K+J9sybKMnlN8DC3OF4PJ+oBi/jT5m0n5qYyf7qudEzjR3Iz6juLn+IW74HC84rKxGcW4CFPfT4jiD/1//5K0j767FBLnbA4qM1aG0txLeFdfRglc3wdG89v/f7McwrWuyypjTwlRiRut6V13urQRv0dr5XhcKRoE5XV9r0sQHCQ0PynPvH4lHk04tP82Jyqb8Wb1gklK1EwXPtmYvyCjQ3kqkbAAGkcVjEugD6mUXbsUEygP0fC9o0TYtZ98R9aDXDTcdi0wwGF5WAqy0RrPgwXiQhC1o9UsgHCCcvzJDcs7zgEnMggDaRSYwXpjuDtm/PNblg6iVXwIpdDUokNZiswxKig9ZsFiwh/b2MqmOBQhafnt3SvJ9JiGJhqVA2xB1InSwySUw725F3I2qL9frWt1ePIIibmm9o3NJmN5uu5GLHw3F8g0OFKNfc1/9VDRY5qyg0pfWNqRCb/iVjDDDTUFIl1onNHKVEuYdxIyTVT2o0QkjEXTwuDwQ52UqaeTOltQzANumg5wN5XRtO2zKqGOWxyPwr95w47bf89qSWJeErYmWFV+v9wM61R1x9o+zcFLwBJOqsQsntbvH162UUNa9rd3Ir9qTVX9EpUA+qP87uXeDEoRYfxB9JjgaSDv17QgI6W/ojdudDUmysDp5LqO3HCOwDZjdQBvk75aCBBSzpMXwAdC/DsJIaiivtPASfztph1I/tRVnpoPtXilaegN3P+uY/1wMcHzJZ6/UUYoLq5uCAEAQ7y4v+1Q2BH8wCsa86KISm2FglybW+qQUMMHrvhAuB0ZqUd9u5ymq2Bg4XWShH5Se87czO/QDcZ1Ka5ug6yooXjecx8cdp8k18IciBkcJwcdof0Rhi+CLbv+BCV7TGJCgp3OOVls+6VO4hvBOEYZt+i01kNYfvjv+d3j3BRmpmQBSnuzSl10BAaVDzZ31BZT2fjHwGp4=","layer_level":2},{"id":"33ffdce5-d35a-4ae0-ba2a-3a92b99e9dfd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"内置工具","description":"tools-builtin","prompt":"开发关于LangChain内置工具的详细内容。重点介绍Python REPL工具如何允许Agent执行Python代码并返回结果，详细说明其安全沙箱机制和潜在风险。阐述Requests工具如何使Agent能够向外部API发起HTTP请求，包括GET、POST等方法的使用方式和认证处理。描述文件管理工具的功能，如读取、写入和列出目录，以及在使用时需要注意的文件系统权限问题。为每个工具提供完整的代码示例，展示其在Agent链中的集成方式。同时，讨论这些内置工具的最佳实践、性能瓶颈和错误处理策略。","parent_id":"42f7ace6-de00-4f90-8caa-97fc51015613","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/python.py,libs/langchain/langchain_classic/tools/requests.py,libs/langchain/langchain_classic/tools/file_management.py","gmt_create":"2025-10-26T11:34:14.135752+08:00","gmt_modified":"2025-10-26T11:54:45.569718+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZzs6weDm24wDez5d5JPVnk7KKPhLpqvzW13galsFgDFNdgihwTvn5jne0DwHBDb4w7K+eXU68S3YeHb57RbOBArwbW4RXMls7jarPE0p9lGdWStkIvIlpCMTx+ddcdFzKSRBmHiEpWLCCHdu62bEfDHtvsBeKtVRXrmYEkQkY2eoeVZIq5JzJFcC0xZmRWQfgmrTSpOdehLfPYsJmowEPLLjzRWcj9wli8NJl/hOF3J9uk9n+OEXtRoj5voej2V6FrF0EqL++NNpUkQOw+s+jhRAveKcJ/bQNq/rzU6rXo+KSWrUbBcRMaWVMBy3zcnNvoXyyleeqOstKoiH1po8JzP3q8HLUFMkG/EDgNCk+5NYCRuQpZoIAav7HhNEdiNBAqv6ZpW2irDsuudjw3GEEqk6Xrg/UKDcPd6CxixZ3J1WvkwE1t+Fa820+TXGbhzHdYaJ1XSOuzVLGwNQxqIQtPzH52aeHzeQksXuh3l+b9H9ceDzbVTg9L1ldfv5qNKNDBQKWgK2C3KOm8p/P7GKDxfQVeYvF+1VnDpT7/MveS/S2IFZtUxNY5q/LI8/hJUrgEMykost58/HvMpTW5WaQA1G4A/LLAFyBlrhTAiHhOlHJ8tWKYs+GORP2MnQ0WhhcRwdeNvy+oDascOsLo7t2Rk/EIJdiUnSLTTGVicZWOzavUTyA1yxA6YdNxGas8SpfwMNO/dbOR/ejZhBSjA4yMDlSP+se6JgLqWzLTqIz09KXXGI8XIG7MfRd2yNkVmAK3cNXgcSd6oZU1fG3QWlUB3/wHyXz6kha7EBFkLOSrNWwySNmD+Y9VRMhZjvxe/G6cOJ0WXkna/Mmv9DXYVsv8rPOafy8saFw0Ur95nlY8kHUgO0UrtqVXj1iGqc/q56ofgb8PJvCBOKgIepaur5fqCeebujrPzBvJk4a0ta64Z/5edApv2Sirh4v/6bOOnBqh/P64+t22tEEI0BpsJkajIGF1NknT7ZqpeSbHPVaoELh5WPlhPTw2kf6RRgc91ZYW2PUHOGMgQvB4XA85OZF60UObWc48cTR6K0ae7Or/zs1EvxL131mXumTmCn3aHwdRBOBqCk0SWZxXzS7861+sQRPP5s9iHTnTu8eftDJ3o1fSRf0fJehWQnnjI0gwrfOQqT81qzrFP3IqwlgPkg0UtcfFzUdX2za6BUIJbtrmDsYeKwhQvh+A/6pnoNv7FkD8KpwDrW3uHUtZpYPgk/AMw1AL0m27J11mpjYEGXYgW0WbSaaqAl/i7FitIT0Ju6o/sw0WyOdJptTkQzLVAXFZR/Z7UIdWsE57HunOUBcKmnu","layer_level":2},{"id":"752f4c84-c0ae-4f5d-b794-1f2819a06976","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"向量检索器","description":"vector-retriever","prompt":"开发关于向量检索器的详细内容。解释其基于向量嵌入和相似度搜索的核心原理，如何将文本转换为高维向量并进行最近邻搜索。详细介绍与向量数据库（如Chroma, FAISS, Pinecone）的集成方式，包括索引构建、查询和性能优化。提供代码示例，展示如何使用不同的嵌入模型（如OpenAI, Hugging Face）配置向量检索器。说明如何调整相似度度量（如余弦相似度、点积）和搜索参数（如k值、过滤条件）以优化检索结果。讨论其在语义搜索中的优势和局限性。","parent_id":"37c063a1-2c65-4467-baa1-3de97aab5352","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/vectorstore.py,libs/core/langchain_core/retrievers.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:34:14.962845+08:00","gmt_modified":"2025-10-26T11:56:14.165954+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyIQL8c97kmIRZJSfO4sEvVYIYiRMkdxHmZSVUiob6xkEi7iwPfUujKKphwZsVY92GC/hqtz2g02zDYlw67mxAyp6m6JUBjjtPFVaKewuvt4euErk0karZldu5Wb2LZElYlJ8Si+o4yur43Q+16V3eCSpWazR6KKnnNlWTboOCYzT7YkYEkkm0JrSiXU0qO24v8SWUKTo+LLXk5qCvmpdCFm9ziL6WK+bhmfzIA5NnQ/48iD8+d6m3dT9cFgsehTS/19BNc9gbDKoy7JcAaVMz4cJ12rHGwqSTiKdjGuloQOSTaVqMG279Wp3CdT9iGPpv6xJfyExbTaFOzCYoSOv4w+7rw8zB3fseTzr+0DkkXUVf7hL6n3nI8mKlZ76ToLzab4hZgKAJFRXrO1EaNVyuRHZwAB4AmKYS+uBlPzV/3NBy5p1laxiMZKltBOkSbEEIhYngQdqi6UsDW6nHLTBW+RYvtB2VrZOY5TGWNOFtRNZZ92CouUppirdXaTVLhrFol2QWH/nLCk9uovJtPnLbzmnHE9crRpGI08U9t8056rw6/mJjzTR1mjZ4QAszi3tHKslJhk8lP1bG9F4RGV0EhfNyMTtNYP1ZlzkUt+1zyA4HpHIuTVSzjQqc5XSWCH4CwHnDfatvtwDQV0kiUoG3kLIXeXbD/b4D62CqWIPYo//6Sr7C5LfxTLV5xUJUz/ylIPeF4vewf+1dnIkMO5gJPbAA06sTLupBdU4othc2roLlHmxdgLtlEQ16D8WEoRVBDIOU6c3F9REioy6ba7g2tH9bwXcd6mALnxgsaxydigtk3cRGGd2ySDYsJyVJ0kFLslVkCqi1RKERT9V0+ZVGDDj+PIM3DMZgBkUjPrUDtrAhXxWEbnt+1gwb0bW7R2u5CS/y7jil5mGBiyMzYMcB3Zc2Sd/9xhn18aF5f9s/yYRLZJwDS8deVEfXfzSPSpyngXTzweQDw8Qz2ez1cmqP6Y35DeS0dJQaSkHOgkZ/nQCxUcP+LaOKJfLMkwStRlkHZX+oprmk4s5qhrdd10mbFUI6mkHT3e3o/2Njy/S7o+q5HpewybXFllNeaMzo+FrB8ysRYUAfJYdrxOG38dyrEd00aNO/FKXgxhgnt0qQxei9piMhrYtw1GgzzC8CwvA6tbcOnOtvhzxfu7rF4rBtXyIIhcXBUMeZjJdQrLdbeIkffiqnpYVVBpMJA6j2JCo7SZ1L7/wrg3CrDW5XF2gjn92FtVX3sa8ded8j03p44NxTP0nUdHySEl6y7ix5041oBMNJ4ybX6p1hQ5ztYkEqbJlKZvIs1Wa5jhU04I43YkF","layer_level":2},{"id":"81d3c644-5797-407e-b455-43b1b5d57ca3","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Chroma集成","description":"vectorstores-chroma","prompt":"开发关于LangChain与Chroma向量数据库集成的详细内容。深入阐述Chroma作为轻量级、本地优先的向量存储解决方案的架构设计和核心优势。详细说明如何通过LangChain的Chroma类进行初始化、配置持久化路径、创建集合以及执行向量的添加、查询和删除操作。提供具体的代码示例，展示如何将文档列表与嵌入模型结合，批量存入Chroma，并执行基于相似度的语义搜索。文档需涵盖Chroma的元数据过滤功能、集合管理策略以及在单机和轻量级部署场景下的最佳实践，同时讨论其在大规模生产环境中的局限性。","parent_id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/chroma.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:34:17.681388+08:00","gmt_modified":"2025-10-26T11:56:48.868371+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyPmxtPtXGiAH4BSAXCry1uekBC9Qd20xjfusqtpKlSNMDR/JKnFKYQCsH/GMsmWBwbS5yLIG90Hm6I9uCqFEKO/Lore9Lqjf+wIuTbT5rppfq4AVni/zwiXGuyH4vu0uHGaogjlC3TaNi4N9lo+1Ap062NFeB09PZC6HfrTgZX+9J0GiH0gKJyFi4CLQcXoWZlBOtClzHoL/rsXwuo/bxF2pa9MKGy+h250/Fy49H6X0UXZDqySZFD0gQlmzodiWPV4QxMJ1YgyHaP8Ad1+Uof5Q2mWCdkU3k8p6mXAqR5CuOZmKPRBjY9za9zAcR48+SMU/Tlf0jLAZEWK1hP2bHH0Q+3aMKk8bZC32pyPA2qR9gnr6YT5gwtNJyCa6F0TZRX9YkXa3qr2tg6h6+bB04HyM0ZThPMTQaunuAbyzotR1QA/0YxhWLentHTg4aXYJVGLZAYQAotEyKfZ3B0m7av2PMtorhYnMNM/AKqi9xruqXJ0RTIm7x1KEwQL17DpZ9Sss2Pqh1md38EAwrR++XDwiDS8aVW/XJitfRKtF0ZfVgkZ8RVBolm4X2AOYnYzK96b5qgrWzxtRgf/KGhooE/GrjvtKVwOBe9VqlDkcS/hlU3GlLfPo4bVQ4RHna6pQaHHeIuUX1ApyfCc/ni8E5OmLB2uQOhel5FZSB2iKA2sOPkCh042fw8R2olgfaw9JV3nplpRTTK/slddYPJUA7wgJU3vbSUVkHN7J+dn+IkAhQ6Bya4w9g1YK7c0dpkPPlotjRblq9Nu1szMLtrT7eWXQSfLRvdso9VRHU8eO4xSQuFfei0ZXq/4fSoT2y1vGRipryjFvslp3BdC6xTDK7kjgMwRgN4G0fNCYnN/DWmVu76O8Ql+mX5hXZWPdaPpa/VV1lm05X3+XBOLIwA7YghTX7+I318pFwVRKcmS3lIFKHxcllNHVTS+U73ww+NIr5rjGmQDmZvQ6yLlsfzwGl/hikNoHmXWxiHZ0thMpeoweGgNQOrKlaeEc9KOM3nY29/5WtnRNO5fvxuOqpkCJpuEnI6YHytdXNkc7yxFegjkdPSJjj0M8IUPnwcbHPOQ299obFkvlFGhybzDdeaj2Yt6ONe77M+WwWt4ToVrh++X6kBkhK5zoVXkvvrO/OcJpIpeyAbhQTevJ29mN1tHeZrMTGHFTlVGDgxQw8RSgBB+tLqcUAnm87XrElXTb0bVwLZhV4IOWRxariLIN71rz+KRwS2P3PkbooF08y3VRoLgsSOatj8ca2AKGZvTkemZJufU5/0bABaQg5pwWMkqyITLxNrUKBa4E0HuSMmvB45ev","layer_level":2},{"id":"34d53867-a80d-4900-b634-d69ce4fa819d","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Python REPL工具","description":"tools-builtin-python","prompt":"开发关于LangChain中Python REPL工具的详细内容。重点介绍该工具如何允许Agent执行Python代码并返回结果，详细说明其基于RestrictedPython的安全沙箱机制和潜在的代码注入风险。阐述其在Agent链中的集成方式，包括如何通过tool装饰器注册和调用。为该工具提供完整的代码示例，展示其在数学计算、数据处理等场景下的应用。同时，讨论使用Python REPL工具的最佳实践、性能瓶颈、错误处理策略以及在生产环境中的安全限制。","parent_id":"33ffdce5-d35a-4ae0-ba2a-3a92b99e9dfd","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/python.py","gmt_create":"2025-10-26T11:34:27.776817+08:00","gmt_modified":"2025-10-26T12:15:14.812538+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZzuVc8NNCg84hlin4oRyuU6P/cy2fTa3aw9Kk7k+9jUDZ/wM/zXGWzZLu2ZAZO62+CamHXebSR86AaT3xKet642yR146d6KSKh3hA671zp1aYnQeQGuEW0fejD2NSX2sJT4iKDEG1AMC0OO0WHUycQUpWRbi9K5IRtI+KrqvDbqy/0n/JCsk2m6xkRaiX+U98OjkK4IdbZjZJoVZN1RSaaMEP3KdQFI0ywIWq0ba3ZdQ+9efpRyDvqEddNcRH6Is1z7UoqmjM1jIvkTGUPNRpHRF1U7DC600QjOXgErGX4Hro0LcBq9KcTF42b9M3laA4E0w6aCO/u2K7J7ZvmgSvHyLXyzRmjQjIX4E3+SSvdBWipnLLOuGPgSudfyYXw1Lrexq5luhkkFe7Ro0/ja1Bsnti9HWt9t1YNZSCL+4jwQB2m6E0tUIBYoO05Vs/ZRCYoFx7xBwM7uF9ihHrUmnZinrbtzSsNntBp+zkk+nO+8nyQVhE6+fvUzmN9aLCX7JutdHPPGuVHCHwJE95ARq3S+OrMBDFB4S5HhnusHSv9rdy/KWUPaFogtnjO+n1NypKcmuMzdvKKhE1SCFIMrRwzNUjBuCyMnVJr7drMnYZa72G/BiKwyf/gq9wj2hzL2PTRwrHVNrK/POBFwHrh14dUt0MNWj9gE1Kk2m6/uMhbafBlasLIXv3NFfEROolLwAsomIQJuin1XF5krQ30/2N8rBSsLOXHN4nPLJ87lfAnqfF5KorsdGD7PBnftXPeJ54OmmwaIeYubR1CRGZWIaFjdvjI706HUG3Pvapuv06TuReZ8etOYay152ZaH+gwhTuzh2A5BrenN3TJutdiAcEBJbNG8dY4AJXoienPcFXC1soeT9sV8cPrVRnfMLm2vDat/0rg/uokjN3NNnJfThqutI9MaVXfWJMgLRmioA3NHeumMcwMYmc7dAX/EeOtsRke+qnk6tdPwVAfeftonflOD5DrDl2zc/TWl9qEid/BX44lGLY6nGs9eP17dyr1skmJVH/rPTq7lnBJE9lhKHXmUOqhHv3OLqpIdHq9XOEo9HDzrDPVTGZSezqmFZyD1oSrg==","layer_level":3},{"id":"8d9054a6-0886-4d95-98c8-19c4d56f797e","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"MRKL Agent","description":"mrkl_agent","prompt":"开发关于MRKL Agent的详细内容。深入解释MRKL（Model-Reasoning-Knowledge-Loop）架构的设计原理，重点描述其如何将大语言模型（LLM）作为推理引擎，结合外部知识源和数学计算能力来解决复杂问题。详细说明其'思考-行动-观察'循环机制，以及如何通过专门的工具（如计算器、API调用）处理数学运算和符号推理。提供具体的代码示例，展示MRKL Agent的初始化、工具集成、Prompt模板结构和执行流程。文档应包括其在处理数学应用题、逻辑推理和需要精确计算场景下的性能特点、局限性以及最佳实践。","parent_id":"baf186da-7347-4a0c-a819-e4c5f5225530","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/mrkl/base.py","gmt_create":"2025-10-26T11:34:29.243133+08:00","gmt_modified":"2025-10-26T12:16:18.281091+08:00","raw_data":"WikiEncrypted:VEr/WKGDSETYabjvhzH3lhfz4D9pfwd4ze+83K9oofaW0aTsNyURbTKA/l/BvYHpJMDV+kqcAhEFaKtwUOSdyWFGVpdMVZ2+R1xXBvx8hsLmhkL5dwtFV4iscTdEut69DauwKmhdx3xd+7ZrNXxFnvaJOvKtwHCq87hWOWgsu+s6lEzRm2vaYVB3Y3oF0ldLUSUhtE1DkpXMIG978668coJojL0aQlxze8xYkLaCe4gJRyl5jLs2L5eTwZmIs1Q/nxGN0saDkiP2iiBYZJ5eXHzHbxUCn+jM2lJDopjeNbb5/c1uQvW+FCFEKnWGVpKO77XtcllOGlePuGD8SwFJITgXtNA+k4YVkqAKR5wDdEuHP/r5/M+4VpAuvlXw0U5/Yztf7oys4nYd+fqpCM95wn6vYdu4h7g02rqFg7MkM6/r50m/3OYQs1JJ+s2PRvjOPhC9ag5lLplpFp6Daj/SbKuTKSfw607wH00dYgpzeQ+GpNz2oagqzyzecCZnIWuJ9Un6ddh1y0xk+d9mByQZ5V3DcCD7B+NP6hgAhAvzYwjdOAcPlP95aXNGGVyNyS+vgDzeDsZ2q/PhqLyU1PGyIP0ohjiJHw9reP8LKYIr5jQ/VDH9p0svUTjvOsvZXQeE0RkZ9jPWsdjFPTNzCLTNkw/uDvr6WGuPplpGswAdWY8aA8XerKhUFGis615axBPTblTYkY527hEKDrXiieARQ3xAbuO520roIxxrIWd9ogHGChqe90CcdPANGvyH8ovdtF68N0Xa+aTbns8mgokvyiAsg6wL74QJl1LICWpCJf7ZiC87a2jzxoO8hmyg4bpoqgsYprQ+mauk1ZpeaZbrqBqAdUuXePtTE9kZ1IFZlGLgZDUxCzNdjLEZwrn8Lk3sEPaeaesTwg3BMGpjmciJTXBFb7LInVJLsstVd1GPGW1xVqbl4Jx6+iDjjW8KwsJf8bp3rDMMiblPA5F/ugqJ9h4MMEIgu7gxcNVOhFFpbJAWIucoD+NFFneVm8Mxvs51+glkBxEWzpyyDB47JaF6DHD/eEW57kigrVEhHLBOBJZ9P7aqdsUKgArScB3nqQ9L912TUF8f26gEJu/De4kIp60/OiaBfo5lCZ2fYkbaTZ8LZCq0ANYYnbG8K/svqJ1z04OHGdzuHWGPu7WsZr4Bcb+Mi2Oql/osv3yqYb5vrVP3cWLs5jRHhwUmrSpueuBVWx4hP6LQzQhjsZD8/pjKa6NvWFGagDfIeFibOwPLrXUloVtiL6vdSCIGC8XNalXb","layer_level":3},{"id":"8cfa06f4-332a-4437-b9bb-2b0e81c1de2d","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"工具抽象","description":"tool_abstraction","prompt":"深入解释LangChain中Tool抽象接口的设计原理和实现细节。详细说明Tool类的核心属性，包括name、description、func、coroutine等字段的用途和约束。阐述Tool如何通过pydantic模型进行参数验证和类型检查。解释Tool的序列化与反序列化机制，以及如何在不同组件间传递。提供从基础Tool到复杂Tool的创建示例，展示如何正确实现同步和异步调用模式。文档需包含错误处理策略、超时配置方法和性能优化建议。","parent_id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/tools.py,libs/langchain/langchain_classic/tools/base.py","gmt_create":"2025-10-26T11:34:30.180849+08:00","gmt_modified":"2025-10-26T12:16:34.531337+08:00","raw_data":"WikiEncrypted:UJlOY+RnftI3J69kQXXwZ/gPYUQEScLKApjfB77NTnx+5y9OrowS7kFRjiTHDAnWfeVmY0ZhXEREkvFUe0Cg2kaKAQ3BeO2CjBBfxHdK05hsDoq8xRnWbaMegg8eiX5pIAQGb4PZLwMB9sBJPfwU/Nx3zrRXybbAn180bOYnwBrO3xnqUB7HyN6Q2904DqUXABiZ/i54d2/HG76+PndWvKKU183aMJ/TF4v01HLrqoZIXFn6ED1pZNoX/hxg6m95aDRcE5PzmqyNs/pDC2PL3QTxBhf+zF/kJUEcR0RdxzSSN8So5DVpdi0uL8dFZ3TL5vN2TTOtS5oCz5wRTt9buHtQwfR/FiSOv2Y3Doh5hlYAidHKyo9iWYHbp01z6YKL3EYB2BYvw+c8Zov0UyTuWdC4MC3GvtItu0LKKsigT2t5r2FU8rtitPSO+a26WpEASNnH752S8JJe31mXq3MB9s2g6sS21pKu9R3ELBgdAKt69heBLBYNYrYijDM14+DXWAHZMSVDZ0zWLQYurvVGNGLTvYFJp7sxXA7KoqN1+oIc0dIRbVDRiE+E3bw96E+tpmjPyr/BoCfiT3KchsJzIfVNEGvHSVBjM+GHtUAlZX/Sdn2B2DZQUosl2G39DjU1gt9/a9juRwmfTtx35rXgaR59TcMG/AwC/JoKqGz765W69c+2Gzyhe2skdZuxlUJmmMDXOchSCVdreus1DSL6ubOcZTTXzmr3la5G99ux0UFmY7owbvI29MdBMH155mTrCFmP0awTtGhwbUcm6YEoVsU8hZ7UPDE+efPIrgo2SEC77Rg/NtE27QZbLlnoyPrfMhBMs4GGsKabJwIsAwmWM3H78z/Uy3rm8do/2QpcZlfzUr1BZY/xsbd/F1rXCv9abMQd07aCcS9vgr+QvcpwmnQQzRR74O1qYrdLCR4cBodh5x7c1ddgvA0agTh1AwCttlmdRLdgTTdQp77bh480u5ep1+ekpqKxkZgk6DsfJI8Lk/KaGlWpUfIiy+8DyfXsh6iqZWnQJHbWzu2fS8TnOyuQG2keNYbTXNBKT/W102YamfrhdqT3fc4YHsLIq3JljlJWCsJejnXk0UO/7BNAoA==","layer_level":3},{"id":"5e7b8afc-cd09-45a3-883c-01cacdef5ec8","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"融合策略","description":"fusion-strategies","prompt":"开发关于混合检索器中融合策略的详细内容。重点解释RRF（Reciprocal Rank Fusion）和加权评分等不同融合方法的实现原理和适用场景。通过代码示例展示如何配置融合权重、调整排名算法以及处理不同检索器返回结果的归一化问题。讨论各种融合策略在准确性、召回率和性能之间的权衡，并提供实际应用中的调优建议。","parent_id":"e84e7681-17b3-4cf1-9297-88c51ce3aef9","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/ensemble.py","gmt_create":"2025-10-26T11:34:38.551832+08:00","gmt_modified":"2025-10-26T12:17:03.579562+08:00","raw_data":"WikiEncrypted:VQkPQ94D5XmeQLm0+4tYruMGzcmbjPqy1cIZNNca7iaYhRlN4hPDVRQVvk3678Amjz35Gt3ug37Poagz9AIahfEhmmqA+DtpPAxP5FxF5PEuWbqRZrInr6O2P7eG4FiRtFdIxZxNUUA+u7+3ba0xyMKHsuQ5vo3kNOXOQbwnfe9AZz4IVje4KMwBi7A7USeDLJoHy2r/yjSbLVWzcOS1J60Lb9m+LhulcdlTeeEsLU3l/25FLh+l9G4XykV8yGzjFX+NJlvBAO9IvIJdtuEaEOoNEsDc9F1Zb6HpK2LMh+GYrc/+vIOfcSCEbd/B9ZELonYmvrHzgLrYu7mjzgzDk9PVDYUT0r4z+5BhGGv3AJ6hZLUMRimIL8x/gPvHl4X2MyakZQHCaRoxDRvqqmE/7LgOY7aItns907qeDjbNcWxIGo0w2/pwtrLacYwGDWH2mZRwCFd3D5N87C9Vl1BPFNxe9eIKHfm8zAdSTxxgwFOvc8HgOiuSjYhIiGVD5jdHf9x/MA2tXXoyYRIq+PVWxNWIbzn/+aive2ZCZu0XLvnQuLXbDIMHk4uby1G8Y1BkQPeZMO7walKHcqbyYvcr184ouEQu1HenY4Loy28Y9AdoHcCuePPlbQAAng6230O6vEjHTzDiepbFjcf9+XNwJANOkw/H46TqdZ8EKFjStICPzkYMgEkv7sQA2JQgQjg3i8+ohBQA+V+q3eCVxbWSVqbWToI1tbFgG4ICr/waKgziRnipi5BqxViR7zRoeIJXrj0CqZtbNpAdYSNHTQRbwB5UxSZUKblFUC8HMDhYRSSn+jOdFJwhDEAjXMv5waDClmJdHdD74Fesl5fM3pVx23zC40wtQia1xDfKwd8W7eCr5ERdZXOcB2u6WByurkmt3Gn4JPjeCHwnoDhp1ANB0gK6r233XNa+PB6yMqgAwVXtOGl8i1dCHSV3p7GshlTs","layer_level":3},{"id":"5ecfbf5c-3ac3-45ce-93c2-000c8e0731cd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"向量数据库集成","description":"vector-retriever-integration","prompt":"开发关于向量检索器与主流向量数据库集成的详细内容。重点介绍Chroma、FAISS和Pinecone三种数据库的连接配置、索引创建和查询优化方法。提供实际代码示例，展示如何初始化不同类型的向量存储，配置持久化选项，以及执行高效的相似性搜索。解释每种数据库的特性、适用场景和性能考量，包括内存使用、扩展性和分布式部署能力。说明如何处理大规模数据集的分片和负载均衡问题。","parent_id":"752f4c84-c0ae-4f5d-b794-1f2819a06976","progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/chroma.py,libs/langchain/langchain_classic/vectorstores/faiss.py,libs/langchain/langchain_classic/vectorstores/pinecone.py","gmt_create":"2025-10-26T11:34:39.13751+08:00","gmt_modified":"2025-10-26T12:17:40.096672+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyAG94my38tCHA31wPaPhVvwcg4tB+54uTJdK6lF1mHMXKcuKMR+4WVg8Yi4A2Gwf3CvHzVeYd0iKuMqY0fa5gBwkEyYS4s++8+60qTO/+voONjhjQgDuzifOYsgUXNjXPTRydx9bVe/lSu3qHcFJGXW70PfjvkStjSZRSH5uMpkNjZuwQuttE893YDGZqVkQPCEckFwWC6zjjUqIWHVEf6DVEvkcWBOeohTD+i66HX2ruahgxgsAoopXLFkUPA2xoGPcB4mwjBsAPnKgFpwkWOuzhHgoQoskq2hs59+kIa67djE+KaOnAqH22N6lQxoh5px8AIOy4nkwcCONKpsRrRK5K/ZRsPEzfnqSFsvnOraFdXyKeBqSXDW0yYz/IfziLOGmb66qtbJtU+Rmbt9jvEiUsrMM5b80gi2mkqtFx5hc3avIec/qtBIubmpnq+M/o/Y2nQsqftw6U0o0xJtBv8Sf5JlXW4m6MOHsxnZYRXyP6SYPmn2FNOm16rCFaORYFrWdyigs5RQ8XS7y2vnrIn5KRkyg6gHP8thfxrO4AclG9hNA/4BfaEK6h/mG9rWhzq53rrclhGIJHl9OlDBNG8jJc7XqZGTFhxDw5mFWvBT6msyEz8xlqOZj14NfcnkkeuTn6DFY5yL+5rFiT9zMqAoXjmf/Ah4QoWmVeuhU0OAULYZmT8yIb8IEiSXjjo2nAi5A7yK8TgKfXGlHyhLcdutElcwCOehzk9ddz+m4E4oshzyeTaWClpiHXkl7Q93TY3kgq0IVsv4eg0PZxKZ8Ynw1+6Ua9kA902+MzjtVE8Oa8zy7ytzm8QUQswwWrI4uUMfvVnGIKqhBb4JzYBOZk7IdYlGndRnsGKH8FniVYuU9alvx5ZkXub3FZvq2Exq8Hn2QKys0gzi2ooVkMWwvMdel1qKqi2/j2uSODfxfbuq12xoOtSstiy3ChSJDgjvcBtOtSS5rhnSvxfbCwHKKn4OdQTDupfsydnY/jR/wNSz7HhJ5k0MarLFqG0Bkztfeigm3XkkNLUaEBMNzyIQZxIaTNqmzAMwseJ0JfyKrhFvfm7RZioQMMkA+7ZwCdDNjlJpeaFZqxLbqOE6ID9tK8SCLdhF9+R70BkqSv7GG2JQc0tJxJ26v7XhP+acIoj9GmhVOFiliMjU11/EyFz/ve95LJ+/Zb4QS0ogvG2pKdd83Jk9IZxnsrbatiq1iywg8mg==","layer_level":3},{"id":"e477836f-1151-41d8-a55b-bfc3b7c24117","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"核心概念","description":"core-concepts","prompt":"开发LangChain核心概念的详细内容。深入解释Runnables抽象，它是所有可执行组件的基础，支持链式调用和异步执行。详细阐述Callbacks和Tracers系统，说明它们如何用于监控、调试和记录LLM应用程序的执行流程。解释Prompt模板系统的设计，包括如何构建和格式化发送给LLM的输入。介绍核心模型接口，如BaseChatModel和BaseLLM，以及它们如何实现模型互操作性。为每个概念提供来自代码库的实际代码示例，展示其基本用法和配置选项。解释这些核心概念如何协同工作，形成LangChain框架的基石，并为更高级的功能提供支持。","order":1,"progress_status":"completed","dependent_files":"libs/core/langchain_core/runnables/base.py,libs/core/langchain_core/tracers/langchain.py,libs/core/langchain_core/callbacks/base.py,libs/core/langchain_core/prompts/base.py,libs/core/langchain_core/language_models/chat_models.py","gmt_create":"2025-10-26T11:32:22.232292+08:00","gmt_modified":"2025-10-26T11:36:02.697252+08:00","raw_data":"WikiEncrypted:GJKeAISOpe9fzBR3si6wxLaiETzLOChaSr38e02u1874G8hGeDFqyYd6gnecp8a72d7ZVymfuvXDCDSpxTpKPMODDpLoLmUwDNkoBceX9yz9AMH5QP8qJCgvpiZ75YB27uMBU2o2q4aZSsPsmRWYC1OBDoeUI4nuSftvqKjsD5XHzhTHvfLF0XfmfTL1QpEWTcSU7/1xZGzfVwBpnk+/aC7c/Iz6s2ED5pl7W51jzaDvl7NL0b83s7b1gJXxV0pKQwLAriOcWYORoZal9xBzi/1s6Yp/nwCLDNNpOYcfQw73mjZzMdTkLIvrhLHsOCsBmtYMvc9se7UhNLtBRG6c5IwSN6s3sjlzCCSVO36qz9r+iyYqf4dYsdJjpi7R/TPD8XlN56KfVDmg96WY9bJCgvLVPB5JlT9P1JXoDw41Nxx6fmKv9ZdjRcMvlUQJUKXsJJU44D2PO5uz/0ro8Baws6starICGtgrfK9WFDH9mlVpxI1rZsxtIwx4rQG6uYCqpa6mvQUVDGPEGNcIpXCZe9/T/WKGFFnPXArH/4wiNx9djujajbPc8/sU4TVMrVaWPZ2vjvYVmz1Y9uYXk+TQPFT3K6hUBWnpE2GTSDDqPwIQ0qKFPFdJw3tWjE5OSpKoAeSuSEiVMBSCciK7e8dqdtdPeEJ9GZA4RCwGw1ptzpDneZ+Hr1vvcczDzpHd+VxRwb5QB3kcPebWfWnv2KaNYhsAksdy9C1NnhKdeKimfGep/pcF2+yGOk5xpCgs7M6WxWCCCQxikJ2XsnCufb1s+ooS+ItvGk3mMxzhTA4/DmzGYG7ZfrbOxxPEMiXC8k6AvGjcnPmQyUvn6pUnfYsp++CgH8sn5XkOZSz/AQGQrQxDTC2SGMYtBdRzidaon3qThSAfbRI4pLVQanjdRNqWKA2z0uqpHsVFFJOW5hauJzsQH1+kC+IKUGC81QLf3zOepyh5w5FTfhBWe9EXdyKYki7F3P/oM491voUZZkvd3ogdFjC0mQBVe0GIltcRgbx25NOaY65RqTmMeGsJwHEalASrev9oYrqYdN2O4B+M8UnM+2qAaRWbSGgichpRPOb9UU1G09zpNhXSr96pe9n6nQZAN9gyzzeZ2MHEKyMPCzp4nGO3DpW7gceeqJ6hxvrZzAnj+rPqrcmRKj0mfGRVrdEydCNUtn72Ju2NfI5YnWMFFuixu97rJ1pe0KHtkeKsXTni6jdjN/dH5CaGaylbHmm+YT65Kic5klY5vPfWIB0IgyM6Jb7q3eknzIv+QveCeUtHqu5hufSkXkqhpMi2JdCnjqyK9z3zKVz/D54pa8efLy9eYsyrif/Wm/XbVod9ghuBBVD1EvG7h33mNpSxMh6agjDRL8xnK16kyrPFbpj/RVHRmM0yisf1z8wJL96Oh00uPEXnDaGtzNyvUA9ohxv24z32DFQAREv/asZPiDMyz2I3fayXxSuzc3QqFCxhLAallLPfa7rBJpgmr8BhymlqVv03+RhpGNK8kZbRYHwELxT5OvzXmxwQ4xTItu8TnwimsEuaKD0iHuDjLIykRw=="},{"id":"6264ecc6-6e6f-44fb-a3a3-1343ffa728c4","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"回调与追踪 (Callbacks \u0026 Tracers)","description":"callbacks-tracers","prompt":"开发回调与追踪系统的详细内容。深入解释Callbacks系统如何作为观察者模式实现，用于监控LLM应用程序的整个执行生命周期。详细阐述各种回调事件类型，包括on_llm_start, on_chain_start, on_tool_start等，并说明它们在调试和性能分析中的作用。介绍CallbackManager的工作机制，以及如何注册和管理多个回调处理器。解释Tracers如何将执行数据导出到LangSmith等外部系统进行可视化分析。通过实际代码示例展示如何创建自定义回调处理器，以及如何配置流式输出和日志记录。讨论分布式追踪、性能监控和成本分析等高级应用场景。","parent_id":"e477836f-1151-41d8-a55b-bfc3b7c24117","order":1,"progress_status":"completed","dependent_files":"libs/core/langchain_core/callbacks/base.py,libs/core/langchain_core/callbacks/manager.py,libs/core/langchain_core/tracers/langchain.py,libs/core/langchain_core/tracers/schemas.py","gmt_create":"2025-10-26T11:32:39.556742+08:00","gmt_modified":"2025-10-26T11:42:19.728629+08:00","raw_data":"WikiEncrypted:ICiVViANlur9hTgF3KdhPEbelzsPe55PFn67wiTBN0Kwzmdz5RrXjE0ITiRTingcdN4Mt/ACiMKo9bzDjJlkIBgGmMct/wAWyOgJKifnw+0e+5aJiHXzwhrkguaK6nJqMz7jMAMPnbHecui+4a2ZTxmashaSWPo4kjgyYDlhHEpHD4usBg+nRnjs4Lx+tEY1hphzj3is+kOkUvyw22MNx6A0r2y8L1DCPvkoDOkaBphe6SJY73qCj9+EuUxMizkDSlkDrWJcI65ncsFpFrFiSJf+iuecHVTaXuLAPBb2tyTeHaL9ousCWIkuFcl6GF6eIHzXYaDp9ThvwAlp/66eQB8By3f0bCtFh/yXZIoi8fhn8m2KLL3YjtjuOCN6qHuaY014MlPrcq2/YtMtaMYka12fLFX7zbHNLJEMG16mTOWq2pmHXIGaGJ2EgbAdU1DSYf9JUtPfDumkrRFuuvfBue2nGS346yAUMbhqfEl306/iFQdQUUTrWsOhRIiONL7q2Rle+H8ELy2anHSjZpIhf8f1YaKdTE39WO8CzOMX7R4Ci5EvDJtTfYs70GQElFmj+6tcR9JYFOPiZ/uze4cS0NSAAbkOmoq6pL1Ii9PID5eJAsqDRSoB6vFLNjv3WPI/KS9CltAzr/5R1QzT68kgOVkHnmCrEzuV7YTC0TwRj/STR3hTtVrV2QkqjrFMQGOwMYIfIMFQ/QBT1ZW5k5BkVEefE5YUgCapbf8de/X3UX4CMVLi+GuBbOzDlsP6w7dLo+4IDQvAny0rfBBcIht1FgAs8u6qk8sgxpHOsur2vDGKkSVcxqGollJWq0UcWAPVGMhwSFTNgJ0CtqHODBJW4FM81Rs2wuEUaB7280LjZalLuy/NLMTKR1eEc6qUHjsIcx7UxAcur0f2wiharNx+sv77ujmdMk06YgcTLlLJbUA3ugV8UD8TjZqXue7+jQW+vWObK5Q0rP4Y+I4nyoC6r5S4ngy5vrYkRB3lBfvOHSVKzfgwR8udbOr5lHVDc36ijhYpcVZpvUI/BEEq1mV/YPzZFCE9wy9YJpXUOFl+IdVObelviuSRQ4gRRwFvm46QQXATXXvcs5PT6exHTW/9MvyvbWwHePiDlnbjHn1XuZczsNoD9g/D4D54SQGWUhPJZLsTkxwAKz/zoKaWhvqquZjKEJlnJiHfjuaP0xpAahJjhNGs5xG0h59YmAQW2u6lhpFym0huAg+ZEQi3V5K0MrYVTIDSU3tLlQcnxsDK65hSigTWO+VNuNZOETTfjxKkI8UT/Hgultxk9zEhZZdkfrDWvYMqjBqgdHbc/qOowqdg0MPSUnVGOo4krFiTmPeGwPFVTxTbeGVxfBMkWBrGwhJbMczZ22wK7vYH0Nmxs03jM1xrCFSzcu+iRhygFgzVqftTu1PRG4VCp+HyFp4XkRc1WOUME+dt1TlWYQ/37TQzU0eZeH2oowv5QKOzPF7lcvXUY7xwZipl8LplcEtzFJD1Xn7KziiGTQdr7SveQKs=","layer_level":1},{"id":"23fd15c3-dfb4-4cb6-b6f0-4a23fce22124","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Chroma 集成","description":"chroma-integration","prompt":"开发关于LangChain与Chroma向量数据库集成的详细内容。解释该集成的目的，即为LangChain提供一个轻量级、易于使用的向量存储后端，用于相似性搜索和检索增强生成（RAG）。详细描述其核心功能，即通过`Chroma`类实现`langchain_core`中的`VectorStore`接口。提供具体的代码示例，展示如何创建Chroma实例、添加文档（包括文本和嵌入向量）、执行相似性搜索以及将其与`Retriever`组件结合使用。讨论其优势，如内存模式下的快速原型设计和持久化模式下的数据存储。解释其与`langchain_core.vectorstores`模块的依赖关系，以及如何利用`langchain_core.documents.Document`数据模型。涵盖配置持久化路径、选择嵌入模型和处理大型数据集时的性能考虑。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","order":1,"progress_status":"completed","dependent_files":"libs/partners/chroma/langchain_chroma/vectorstores.py","gmt_create":"2025-10-26T11:32:50.902503+08:00","gmt_modified":"2025-10-26T11:42:01.443152+08:00","raw_data":"WikiEncrypted:s6nhJZ27tGiwki5wp0IvioN/xIi0voSKdA94KUVISXkGeE21rbEfEC3oYO06cvamPfcE1K288v6/i9yfTDFWIk1I0Cq++20cmYOfGSfpv33KPqC/rxstOpc/QYU69gRoVkoP9Km5iiY4b5lzbwpU4G+mzySdnpyJ+sYdXc9xfDsxW65gNFTjKmGCw1MCAFihjdnwWGPulNninNybGdQ/rEIBaX4bAjCPETnbheGpo8m9AXReUVOv1in0lyjRaUDdLPS9L3zgaOAkmRyfQvP9tY1OaCSK51TweWZAVbBsV9sB+0t3n8oa1QzLiKGuxsKnK+3LczYW8/Ky7n6sWwMjmMYY4QLFjDreblgpHYc0kTe5ctuYwtFWl0TKtUflI2OxrdVVJQiAJNv/mUMEwJ3md9pbtu5uXpc7zUHdhunKzQZZBjIYnOReE9vI42YGI1tOIk5vl0oP2nRco7TyQiQTd9bMEj6qwJtud7MjzngcOds5+Qt2nCBacNL0z0Vg9nCcYibNz3vZScXwQUBEv7WO91GxUvqdcVj7Rp1HFe41e+Ax8raoBvh+Z71HZ/y/U4bdpmxxrOAOpGDG2BwOFFQOJNsQb6e9Oxd3AX2LVzsPRZGs6v8GBlQ9UrqM6eQfsPg3zLH/LvTpTx4edgKdAtVaUtepbJLwEUE5lqH03YGwUqwh7VmVzXUJFSbJSTM1OmuL3FjwT1PUAW6ZdFl8Qr+3NHsr4k+mmwhgee6UGhY6jdu7msWQ+RVpUr4a4/fojaUV+tm4AWr10R2fD0oSkWYQ2NlWhDKBEIKzdZ9HeYTK1Y3qoOWD5XMcbnyiWz0Mp16TFbS+7wKNbkSTU1q7aH1ZBoRNJ1RaSNk0bM3VAt2oR8eTKLwZlynGSMSlL2QCiSrimtPvsr9fKs2gTUgFreIqv0/LsdFMBh7GmLJB5/BWPv1u0zWRwFE+CMw0OhPYvqSJS73ek+3/NmOJmQY+GN9+x47jDPFHnHPaUGeBauQkdtskbgJ/wIJx3wlUlDfIpWVK1ZKBrG4sR49qnD6KvVa4heSnZOJo0W/HfOwAJDclSy6idRfnlGIZIPmmpE8plGX3OvbauX/9UADeeiUnODJSXPGHpyQx/Zb9PR3PE4NjJHm9aKi/WEUqt1X/36QAkOVGpNx8JGJwvCC2CcLxkTBpyQ+EKqLTc2C/7HqoKkL17FlKfQM/dm8K9/g97tOjAgYuSJflwzUKXhvdG9hx4570sui9NIWbUAtZiisMEuesWRxaMFF+Q0qAseDovzU0o6QWeDNXyS1VN4626IRcQrJk8rVKvLm5eErsm5Tb5K+opuPp3YMei7gotFSSojbmeyewya6GUFrpOWQxw9JN5oKrRG8yBR4uc//W5a+S2V5vLBvtPf0g36j/Ovr2Sws73Kmt9IoAknyRZDQFDd6xIn7Od3WmXbDRtzFnrdfgwhWVs9NZyWa71Rp6dX2x3WKKwSa30EiFz+RnGJyzCRH7qctRXbmyboP1EcszypzUTdxwy3c=","layer_level":1},{"id":"436ccad4-b078-4941-9984-98b4906f9b4a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"嵌入模型 (OpenAIEmbeddings)","description":"openai-embeddings","prompt":"开发关于LangChain中OpenAI嵌入模型（OpenAIEmbeddings）的详细内容。系统地介绍`OpenAIEmbeddings`类，它是与OpenAI的text-embedding-ada-002等嵌入模型进行交互的接口。提供具体的代码示例，展示如何配置API密钥、模型名称和请求参数（如`dimensions`），并将其集成到向量存储（Vectorstore）的创建和检索流程中。详细解释其`embed_documents`和`embed_query`方法的实现，以及如何处理API速率限制和错误。讨论该集成在语义搜索和检索增强生成（RAG）应用中的最佳实践，包括批处理和缓存策略。","parent_id":"7042428a-e443-4f41-bfaf-1704cb09851a","order":1,"progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/embeddings/__init__.py,libs/partners/openai/langchain_openai/embeddings/base.py","gmt_create":"2025-10-26T11:33:05.150108+08:00","gmt_modified":"2025-10-26T11:56:33.047846+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvEgJwkERxWCVcuCL9uM/+bmMQSHtj1i29QJ+VdmYlObJ48K9D4BJhtY7EolRlYs6hRoFbsfLHVBrMSDK5OT8RLkDAwIoNPbrS+xBl8K86gE4ZCaYKYgPdlsXRnNSoUOwD8olY040pHudm1GraHDm2BF/pOiZLxjFFQZsqjv6rkHEVhbrIcA2S6O3r5eZIUVNxwFh9O2Do0aZOQam020KqBwJBevF/o8JGQ4/U0rNuproq1Pe8/Ybk0vrJKb6EC1L76U/egdj3khxsFXd7UQGFgBwwRWbuHGlYr/oOQVZCGhh0mA8lafogPuXV2cp2K6aCaMvQUOCKDc6Uii6egWBqtPElVJ9ur9Ax0rLoBbRZeQKGQAC8fwHATNZSQTh02g68x3/LGFujHlXnv/4FLBbK9EEEdTo3+IYjHLMUi3HGw9iyIJr8lSqiVCw5wd4sHcQiDHmMFYRyzN+Mv89EJ/syUe/rZogrq53YpdeP6uT6m6w4D9u+wutWpwTV1D5J3CptvdbzPolwvjXzKtoPp5/LAPVBAB/6kaD5qe4kbJXnRG+qldQHdc1ZtWQBcg4fSDKylElhqoYc/eyrVWvi+NCYV31qxqbBDzhhtM6csjLsAiaL54dfKbyWU5eyxqH9Yqts0KSwD/EdhyoVc4Rqg4kc0cwtq6Fz6Hs/C3eCfXtfSU1Nba/SGqDZc2/6LHry837d99DCN5L4rRenGLLLDmFF/kUWZ/qI9CThY4wnSjSxChmGRAhZemgd8VBWBoL5DntfOlh9i2wJ52Q4TRoAKNc1Sjw9Ob+mHDh0x86zSK22pRlXR4xY2WMLj53K7G+vuvlHjy7IdpopP4WZkReJMmDhtF8U25FhAnwYypaP0SNNZCJ46Bul0FCBYGehfqmIxT0iEmBfCyflJfqv5bANg1Lajwg2oFPMGj3/3op08I4pLXmCiVEnTRdI5SgG3EvSeEtb3/9L3OOpkWxbK9HfsxNQM5JyO0CI89kX/SQmfe0nEUVlYusMVtuqWDvp6RsacErWZ3NSjTmTrGFc1KJmOjosiympOSsBI7o1TA7chNLqvvmeQrrHY+31IovRB/zx1bxblFw8BK2thivlIddxpvTWSvaaBJNnLB0V2U7mQL10b60gHHhd8TV3bythTSbizEfF730HkRr1dGGgNH5BFKChiRlZZcJPgCr4XJkUUq9nKOvq4WM5WNeuaIjOeq92C29gJc5GUVBft2DU4ACgXhLotQn8aJ5BUaI5okLOfAcAUKMnTr6tE1G4pfBGYaPSNchWIONlMnZJfRuKFhYSDvecVk=","layer_level":2},{"id":"739017d2-068e-42c0-a018-28dc42bb17a2","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Chains","description":"chains","prompt":"开发关于LangChain Chains的详细内容。全面阐述Chains如何将多个组件（如LLM、提示模板、输出解析器、检索器）串联起来，形成一个有序的执行流程。解释其核心设计理念，即通过组合简单的组件来构建复杂的逻辑。详细介绍不同类型的Chains，如LLMChain、SequentialChain、RetrievalQAChain等，并说明它们的使用场景和配置方法。提供清晰的代码示例，展示如何定义和执行一个Chain，包括输入/输出的处理、中间步骤的监控以及错误处理机制。文档应涵盖Chain的可扩展性，如如何自定义新的Chain类型，以及如何与外部系统集成。同时，讨论性能优化技巧，如缓存和并行执行。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chains/__init__.py,libs/langchain/langchain_classic/chains/base.py,libs/langchain/langchain_classic/chains/llm.py,libs/langchain/langchain_classic/chains/sequential.py,libs/langchain/langchain_classic/chains/retrieval_qa/base.py","gmt_create":"2025-10-26T11:33:10.895871+08:00","gmt_modified":"2025-10-26T11:42:04.633074+08:00","raw_data":"WikiEncrypted:5sFAQ7WfBK1UdpNqj+I2l/mUXAJqTPf6yzf5PBQNdhlND3zivtDM5ARS/4lR9PBoAF/U+mUPlL/HRH2GjwLA+0vXyOXruu9GxLAbG6T4UAIzNZrWIJbB3xaTk/NZCT4pXHXcS3aFi2jqPDaLgYOeffh77ifj7kvQ15fZh9fghMN+BMA8lEdqyyog3EEASQOX0ATh2G8RIWF/MQ9AtxaEZK3BC79fGmHYhpc28Jbr1g4FRSjZN6MZWwHzsSd3lfkhpIhFflUO6XCnCjWyoi50k+xQZ/TSlp14IoBzuO+l1yHPCy5p5CpQWSIBkp2O8IDlgVf4kW+Ej7zNMDsRsCFHkB4dzCJeoKAt0Ry9GfUpNMPtTKC8mLiXcPtH33k7xFwgXIJNfxmDROSPzCwBps2KaIUfZzF4cTjpAVc+rfMVP+vCJ2aam/85/t/74NDCyvULOKTbQpL5rNlvCt0j9VRuVzzuqtdRDNbp6pv4GULtIeTu556DveqOmrHK+iij2fAkP14E0pvSwqrxFfvFA1+aqsldUqeG8MVnHIy0RKV8TwDsPBl1anK3xNL7IUcnZZz0Z8YnfJuhWkJ3CYVx3b6MdutWCVGoTA+P1gV/m5+P1SHU2/+GdB8QLCTFx5SmjW0KGg0/USseFQyWAemmGy0xyW1uigz82R0P4pOjJWhuf0yrw7WBjYw71ApmgCvJl//UHnSp/14+jYiKrmeCYGxfqDgmz7VdCnntGTf3KdRp3y7sa3kiNwRhrSFh7fbyt2BuX24JXjcfLIBIbwFchDtjQuTL2Wl19tUW4NcLtsWhfDAlUhqv/WoyYOJRjgPuDI06fsFmq5NR7x5ufPuVSSYed+exBLTG6It/EwMH0k985q8iN18mgqHchH+5GDvpbjOPkeat6CE9LajUuU0holv9ZdOz3eM9UoZqDUPICa3F8ge3Mt6+QET0ec+5GwrGFyqpM4tqiFTTt5qzI6zzAAObeyD0ZtOoFHCzoAyVOVGMc+YMV42kg8QYin7Dn6rAw2ijcOh6gaWy5x+XkNkUVWUZkWuPo3+WJnEOR1VMFtcRoE9/83pYcp5VVInVZMq/EANuMZtwPZCnpiHUwzeYgwlWVasCV3z2YsE7sKvK1y/T4B5o+vOTS6hyNjyHgWALSq7r0JW8eGSaTU+kf+X6v+IA2mInvde3A+rqFQ4pis3ea9G1b/qPbdME+fGhoWuF6i5a9gasR5y4xLbDD5yU7G/mYkiO+BPSPEdZYM+4FRPfG4HMkMszP7OqqOnmZooegYytrkn23mgMobbX+u9xEnU/6yJfd/O8PYo5LdcLM45eepQ8RXxqI8Tn+a9s1xUdw5PfmnlE/F3CC1dWGq/oYOHHEVz52xIk2FPj2pL9KpBjxuQvIMwdwlQx7QOIhqDU4Tq7Gv+u5m2kCQuEX1Zrhfs1trzlAgHS2pPLnANTy8cn6MW38HEmZBThqN4SEEcEas5NcSKH3VDLXjc/hmHFj/HsjDIV/8/Bfb1/3zKv2D2LmWH7JwuNzC+838Vj5PESJCHnEJgIezH9tBsyR+Pdc5ZZJUzX3KycJDqHYqA1zEIPoU6GsSxgGrhLIqB8kgKsan4PbQzGBywYhAdl6zLMF8x8ueeePzMWSRTPEC3TtqxwNUc=","layer_level":1},{"id":"4c4e66c7-9260-4e85-88d5-14d397b808a1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Azure OpenAI 聊天模型","description":"openai-chat-models-azure","prompt":"开发关于LangChain中Azure OpenAI聊天模型（AzureChatOpenAI）的详细内容。详细解释`AzureChatOpenAI`类的实现，它是专为Azure OpenAI服务设计的接口。重点说明其特有的配置参数，如`azure_endpoint`、`azure_deployment`、`api_version`等，以及与标准`ChatOpenAI`模型的配置差异。提供在企业级应用中使用Azure OpenAI的完整代码示例，包括如何处理Azure特有的认证和网络配置。讨论其在高安全性、合规性要求环境下的优势，以及与Azure平台其他服务（如Azure Key Vault）集成的最佳实践。","parent_id":"605b534a-c19c-4f50-a7bd-dd79a672b6ca","order":1,"progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/chat_models/azure.py","gmt_create":"2025-10-26T11:33:16.303907+08:00","gmt_modified":"2025-10-26T12:18:58.590345+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvF3mSaKbEtJoNrRM4e49uZhqLDpqB8SdVU40TiK+uBp3B0tokZ+fVoeA5ogwtMpZQlwqKmtljTRsL0e3LxNQ2wBQPlVvmI8vVbtg3WXIAYCfatj0yNecD0i5b9V1A2te/xy2vCiA8ie/GHndt2Z5/JGegNmHgdCdiTH69vN5TPgQSEQgNCM6LGIXjFP9NYJq21lJs82wH6RNxnRXcw76OfMVHg9DtAlfYHSD+1ErXUHEsgZzMRqBJN3hzHjINorSDbSGAB8/EUfs1iPxuorXNbaB+SnJ6BZvcPjgbMfVXRcRN17edRRAo+bNykJYCQoAtFaF0ieJH6G8cmJ2ibS8LxcgE81zoz3npANvJQy+cAp2hhvDPHaSpd7AeNFvd42CYjDCq7F7/kZwYL+ai0QXgq4ANtiheW1t4QYIjZmOXZeD09zq+JaXLokrF2pEO6cnpQYoH/hFbMJR4KV16ZbajK82RIBivrSCfJ8IBp2I5HqijXTPIBBVO4cJycILGOG+EeR8D1ytvQ5rCnnuoQk3AxfQeDiyScFF2QckhthvyyQODOYyyACtVPvFdLoABPr1OIQLlsQDtFFkjEupBM0dH5cIKPaB8vBj6k58Qyo1EYkP3ISvkJVpoFePa/A6Gkvryavv3J0UlYkRoCjmQ9VZoiCG6ZQf6mulWpPLqzgjFRRBnUhy7O7AO0ircFs6MFL0NOl4hEdTC/Ra5CM4U7+HTk0qWTqLGP/72ReQatQXncIOP5AuZ0zFteWfDtIhfCqmm3EHXPgrzsaE57kC/+CCmuqkAPxwsFmKk0iIcZ6JdgXz1Eff2l2P2jOkp74T9BLxNqiGDVw3q3LcMnDIuR4eRFFs3bn4YTEKidasBXcmaYrit/WpgE4uUXU4CW1qt7OhkuP/cxgYBlRQKsUzSReOCnp+2x3ZWsyJK9OBUGp4b+4A/sqnJUF0J7CIKPs5phB95cqq0vflCBV08QFWdTPkchZTFcP248NgxuxarMgbBVJZQNPnj+W45hDxrsSfZ7P/mdbiZYJgiNuJFQTtv/WAqEEO1uEqQAkNuMysirm9EvffRaVWi27y/iPSsCEzFSPiFwIk0moMEGiekSoQUOrN2sll2c13ipI4byr752xHh0/D2rR+fBSBurl5fMfsHCrCNw==","layer_level":3},{"id":"7c51acdf-a2e2-48f3-98fc-3be02f0c274b","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"SequentialChain","description":"sequential_chain","prompt":"开发关于SequentialChain的详细内容。阐述SequentialChain如何将多个独立的Chains按顺序连接起来，形成一个工作流，其中前一个Chain的输出会作为后一个Chain的输入。详细介绍`chains`、`input_variables`和`output_variables`等核心参数的配置方法。通过一个具体的例子（例如，先生成一个故事大纲，再根据大纲生成完整故事）来演示其用法。解释`SequentialChain`与`SimpleSequentialChain`的区别，后者适用于每个Chain只有一个输入和一个输出的简单场景。讨论其在构建多步骤处理流程中的优势和潜在的性能瓶颈。","parent_id":"739017d2-068e-42c0-a018-28dc42bb17a2","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chains/sequential.py,libs/langchain/langchain_classic/chains/base.py","gmt_create":"2025-10-26T11:33:28.702792+08:00","gmt_modified":"2025-10-26T11:57:31.819334+08:00","raw_data":"WikiEncrypted:+4JF+GGgQtKhjc9sef/yP2ntrHrojFzP0f7XAkGkpeqEp6wj0liRns38B3LV3wI8GWU1d+Fjp5sSIKQfG/bzv1pVvnbCHk03xJvYaGO8b0oYmpGPnH8tgRXnD77suTPb3DAYgb9dP2LXkwuWpt4/hr0c+sdXaP9DDpxuyEnHYcdiBY1palIoyB9hEmnjf9BUKuQbq+zuDCVcDVvVeeQhBrXNGNTz+sPo21TVKK3lxgoabRbYF+H+MqRI53XWqwU5XoQX6xlAjUhlRHm0WwF/HfkrTlfsNYz8RmKiPOBa9fX67lW+CajVNH+zQ9toMeyLmZ+wqTksUbNG7Nll4Hymh4QUzonnMg3I1z/VX14bPjZTUbc3PRyWYcBM62SUV2EnCy0U00tQssO3toQmSGetSydksi+gTXsy+bRrjjcPmALm30ZroO8oEK13TLl9cD1F2AiCbeowkGScoHi0lm0Xtxe7cJDT2fLwvn5gn/bIxBnTW6PM1/6sVdDXStrIqF9QnTh+ssMTJ43BIMYQseLrRGHyqbgmxi6FxI5TbPB+plpl9QZ70gI3hRGk+Vzuj9978nR+UukqzHQ0IO2qK7RrfVrF/hgGfC4Z5ZUW1144ERpIe6bPCPxNN0M/R+FaTJRdQ2oWCaFdTzHNM7M0/+mbFZC4mqsmE1RkydtDqLQrSEdo4d1at/d+sgJ+LOJSZmr+zaY6obCrZBSP1KLuJyNpjIx/n1CuBQ7DEP2iOhHckMGjMAm3jxVv0hs2sU0sIqkUKZQgNfwn40Oyu4ImW/3PO8y2huaILGjaZFFFu0IzCN1FVNF7ACGeWz4VlACpKMaZSX7u5RM5t/c9PSi0/tlW338DZ431R5ycaH4elcixdn0JcIDPp0wp6u0Ou5jVb+/xpBjmNMsUnt9WSBYpFn3Pqyi8cw4Xn8jBGzgJ0sqfrGa25wvBcD2zwuhAIDq6RaqFpccYzqp0yMJG/7alkO8qU+jQJmptxuL7zFvL9pERRSgMkLe9WyeGLWZTRkhHMFdXm0fBkDL1fqVFWD7BccHgNMugrQT5KNnEs28lROCr/diNZ9MUA4j1NRUxZtwP3/0UWnHLvEgrgPNwtaCjq1eTpFDagjlybjalhTuaB8jFqqhzl/zQtm4te5TP9A8kZZOHUH6Lfw4LdWSo6jj1MFksZiE5nsCSC2Uyr1nKUcNck1pojDjXDz2CS5DDeLIPeiJo8B/ShTmpON2efr0gZAiBIQ9rqWXF1Cv53Hm3v0DpkNknw8r+Y4BMnw1qPQAagtiy+K7h97hBw/WFt1gh23sVVg==","layer_level":2},{"id":"b6b3faf4-13bc-41c2-91e8-e81fcc7b4c3f","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Anthropic Chat Model","description":"anthropic-chat-model","prompt":"开发关于LangChain中Anthropic Chat Model的详细内容。详细解释如何通过langchain.chat_models.Anthropic类与Anthropic的Claude系列模型进行集成。涵盖初始化参数如model、temperature、max_tokens的配置，以及API密钥的认证方式。提供实际代码示例，展示如何发送对话消息、处理流式响应和系统提示。文档应包括对Claude模型特性的介绍、成本考量、速率限制处理以及最佳实践。同时，讨论错误处理机制和超时设置等高级话题。","parent_id":"cb531d92-ebb5-440f-b083-fd900269d60f","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chat_models/anthropic.py,libs/langchain/langchain_classic/chat_models/base.py","gmt_create":"2025-10-26T11:33:29.98598+08:00","gmt_modified":"2025-10-26T11:58:04.1563+08:00","raw_data":"WikiEncrypted:AicO/sRr8Vq3B2raT5D2WwkKxXWW5hh/C5a/hg3Ag51nLga0r0jg+kV/s2uohx2+wleXdXcDge8ihCzcEYQk8C5ppk9lf+EGjQXxgwBOnI/i0u1z+HhYOKhRjTjXJYgsOBviKA0iWrhjNztElOvfkgN0gQ7OX31RkBSMOznjUA+3MwLzbk6L5GHH1fYLR9O/cslst6z7DgcGUZojKQcbtLGt/uw1Oggopn8INXYi6eeGz+Lo2ScUez1chDj5lobG8aauugPdUTO6EG6rxzWFDikgdLEoY5pGcsI7y0WH6g1Ce95zZ+HfWY5rkYb4oVe2jeqKncyPgL1Hqe+WhpMiDbOsUHtIDdX1YS0aEj0yEvfRe4dtMTjonaUuwPFCmGWNlVYM1oXbtavIIjaHX1OfL5/ZkZIOPwj83KgJJIEBNHKh/pha43NEWKOJYfoQG+d2bZwmd53l0uYB65ysxj/pjbF6nj2hf/CsK7wG6nAUeKaRAMk4bIzYYAFMdBWIalKap7agxcHKyNqlRa2scUNXetumvpftYmaKgt5SKK74lORJWv1ciV/3hwwlVd4y43NKwlQ3yYs+J73YcFjbJtEd7hhsN0E717DtUoN9Zvkv61wV+2DIVZflqsq0zUEyNSISIlBcLcOPqpCiXEgLSr3dVheWbNp9s9tEW4OzsSiasIHjw6DPI+HhnsgYbCOzR6z4b+Ljh4t0a4CcmV7/PSnWvaik1EfmfwKbiFze1MIWyYtyGPHmdaUu5LY2D12MYWvmvVFoTsFBupZ4STgwMSutd/35uUJqmUtxloqdxo0/AfrKR85FKECnE97mbQJJyIULIz3Aj71ufYeP+71kRgzxPYpFMg2bOfiATeueTvAqMCFI9BVrbKFmtn0fuSvGuNz91BIHa9YhWf5GtUijnWajLjuxAc501rnS/aJ3M7W8ubFQ+QY3Q5fuqBh5wKB3Oqf2lbtCDp3Sa1xkgx8QkQJB7ZPvYyEYbFUXxTlD0ehLrkrxw0ns3nj8X0DtG/UUnhDc1L2+D/yKEQcYB0REV+JugCPY+L43xXYn3WM8awbJyDPMXJpr1P0pBus+cbQ0+TULKHf8bMtKt4s6O8F3dD+QJkVsakC2M5e3DIr8YMND8z871piPoh2FXjsToFXWe/VjFWmuVSOB8ubx1HcKHsph9A==","layer_level":2},{"id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"工具集成","description":"tools_integration","prompt":"开发关于LangChain Agents工具集成的详细内容。深入解释Tool抽象接口的设计，包括name、description、func等核心属性。详细描述如何将自定义函数封装为Tool，以及如何使用预构建的Tool（如搜索、计算、数据库操作）。涵盖Tool的注册、发现和调用机制，特别是Agent如何根据任务需求选择合适的Tool。提供从简单到复杂的集成示例，包括同步和异步Tool的实现。文档应包括Tool的错误处理、超时配置、参数验证以及与外部API集成的最佳实践。","parent_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/tools.py,libs/langchain/langchain_classic/agents/load_tools.py,libs/langchain/langchain_classic/tools/__init__.py","gmt_create":"2025-10-26T11:33:31.88601+08:00","gmt_modified":"2025-10-26T11:58:39.852821+08:00","raw_data":"WikiEncrypted:8Ol8bTGrVtBBOxDMV2k5SaEIXDsRKgoWDdeOzNtX0S1eDXeQXIBffnOTCbIgk/f74kFNNYwGkbgyTEAviU07PxtlEEmU4oVz/XrJ9hTzSeneLNrB/dFvl55PO4JLLcFaldHkNRfRewqu9X3Oc1jzKKmWzJsi2FrUqZthVHcNy7jUzsyiuErqi3PjzywbpU2Z4hQApAJpkOYxixzC6xtQ9az5LWaOUsT02J5aG9vWffRS5yPVKMmpuwQ5nB5e6M+ENUIx7oJ+myGYxqdJFsKoU3KxXB+WYuggGUIRPU+6/Oq5PEQlduoDsFZNuNG1yk5Z+bAp7xT8sDw3NVFiYP/chfvol3k+ZNzlS2nINePIN9wZvAxxStcVbgHKNPAkOxQJxqGsfiJMWfyqoVrNZ6F2t+IMTP2XsaE5ed1eFj9L1A2btMmQ9AiWrCoq0NNd0YUHRg8J+XlpaM6F81uN/yPfOuLZHIdCswjPin/tQZ0ZSSeGnuya4wxw5bCu4WyjpBvEud+PUuNfbzpd4iRaqXng0gP5uJi/aZ5WoO63qKMmphhPmuosjxwB4+qXATsz9jQDZS4nyH2Aed71PSEiq7xTV+7nZkXSibo6A/kp13lgt1Mai2fBq8i9PWjH1vwjGMDog8RlpYJoGFuAt4n7kKFj9d8VwxPmA/X26lZoKQbnfplbrBCZU7u17v84z3kDQbeCjGNyxHkSkygecfIFcXvI6E4+87cKhL5i8Yo9DC6wuYbx/xzJkdG3N5x/heBLszjj14p6RTeOKMRqBOsA6F9aYRiIm8/V+Qu92KWKZ5gLgdLKmPySFk8PMi4P8yDghF3IIE6UIfbfH4n7cE4ZeF+2PEU3RTMagXvY3e8fzdY845yh04zmOgBITPjOA8fpA+uzJIoeHhoV+62yK0Z2lh1i5rhJKhHjWZiwcEHAf21YfRWzv1KDSSnZha1PyCmJg+q0uoHTps05XQR51q6XJkoF2MfXl2ijjmJH4HMhWPWOEcwjXgOZS8ve9kIjm3J+hBoB/DmdHSE3O5Qhj97qdbKW224SItR08aHzhVpwG136/JkR4TLAQYHGpcPFOWorxmU8CZSFiWZZbQxbN+gIIB9JOElyeVgph7ezV8yj3TmebmOzNzf+ypbqTh9l/m6tERPpT67weuyHKejwGJKg55EeCKgzm8m2jk1KUa41sBX1bdqKTJyd5s/C1sDQcJKC4fg8kRvo9N1tfbO8kZk5N3LQArygouinq9BCGbl66DsLmvSrjgZq1jmlLXsqNDCIoeCd12dFJ41NblB8PwsNThxyrBfHCYeEcKV31EXK3uWI0CE=","layer_level":2},{"id":"a0a36ace-9bc8-4388-868f-288679ef6f17","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Hugging Face Embeddings","description":"huggingface-embeddings","prompt":"开发关于Hugging Face Embeddings的详细内容。深入解释如何使用LangChain集成Hugging Face Hub上的各种开源嵌入模型，如sentence-transformers系列。详细介绍如何选择合适的预训练模型、配置本地或远程推理服务，以及处理模型下载和缓存。提供实际代码示例，展示如何加载模型、生成文本嵌入以及在资源受限环境下进行优化。文档应涵盖模型量化、蒸馏等性能优化技术，以及如何自定义和微调嵌入模型以适应特定领域。同时，讨论Hugging Face Embeddings在隐私敏感场景中的优势，以及与托管服务相比的权衡。","parent_id":"a70dfb9d-0144-4270-8d72-8dee18f10257","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/huggingface.py,libs/partners/huggingface/langchain_huggingface/embeddings/__init__.py","gmt_create":"2025-10-26T11:33:45.559865+08:00","gmt_modified":"2025-10-26T11:59:11.419855+08:00","raw_data":"WikiEncrypted:YQ44zCxJFJdfeVzeHWBsHYJGWsRoiTUTr2QEjn+2ayHm6gx9RkaJ6cBCtsWukX2K/gw0dRr4Ac4EIa62G3F3U1f9ZcSFt1i1gsnkNNnSaebUmnF+vquwMviCavyNUT52UBEMR1XESLwhniRaUrOOzzng/h9I6ez56RgM/MiSFdmwxHLpZXTADfBRfF/Or75dhs2QWmqaPXLxCa5/Gp182nX0B9+zqWeQY7+Vx/hk79OAhlF5GYSl3TrR0PGYmQA9iCzjBFeQPzK9Er6H7rHNVxI0OyEMUP523AwsJtiV2OWACR3uSMeESTcTd2F7ZoIwx8y/XsaiPU6EEVmYCdiAP/2AakLm0mtL1riHRqEgLyb65U0NVu/U5LmEEMFIXye0/c2Fyo4A9D8lxOsvIOAQvyp1qLPq+ajECgicy3CO9uCB7lKF/4HNrvHUJKDBFnDAsSFaK1t9dv2eGpbjdHDwj81vm8Wf8A3vTinSdetU7VGoRVC3NDn01JwEYXxZC2axK6fOcUZYzwdEsA6O12ZtXI+cRt6wFhbYfmeGx/jKenUeCq7eR6vDmSRtHO/e3rOJWIMbl0PmYXORsa25I1g3B0cr0g6OlEloHPoyAvHS3no74cmer8LkR8A+tAow7t+Fl/ZUoPCf+XhNmPXBBA71fL54OiuzsLUo2werMY/AVrEdZT/J2xCJfGsq+iGvKLttP37XEl1jRUFKemcmHu8gJj/ITWQ/Ptuh24IFlrEn3/1QHzOHovEnItxpmsXVQnHd7qsqtzuwGQyvA0poF2D/CdSOfwqUPHlxovRTcQpDVCyfafwghaA9rDli6sl8dVJK+lTKZY6kX0fhF5Muh5/dcktiudYn3Ty6Yy40+t6sQmEzdN8U8owyKW8gh6cYr9Q0bpe+qH4JWQXCj7e5WZ4PdxsAdNk5GrtFodmNvc3rZu01EuY/5EQA+mOjdZQuvtdRbYBAHVGK3K1TnFk4SHwtvs2tNa7eGMFhMLFSIEyn0itZ/3g9D0tFpcP79PbiUR5QU9bMToQHGUYYc2QjTrTgHDOApWc8qXH1dSKxxWA6DJeiB721WSJD+fziLduDwR3QiWdcd4eme8dwEr5OavGIjKxLzCbddIxZvZTS9QF/ozxrUxVtvyLGguqZ3A9BHsKy+n3maCorI0hU2AuqWy9FRgicBq1UQNXVFVYey3fmUQP/B4zN+SQZYGceP1b8dWcxN4ns8sz/7YS30O/YYY4qabunEd3Qbk53GyoE6tohpPImsgO2V2b/ri+ATs+JCvRIn2nabDi5OWinCumDsb6XToene6vHmDr2xl/b7J3pIKaqiPOGcG2BFPQn67lal9L3","layer_level":2},{"id":"3389096d-e328-40ae-a72e-eabf43b5616a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"OpenAI LLM","description":"llms-openai","prompt":"开发OpenAI LLM集成的详细文档。全面介绍如何配置和使用OpenAI的文本生成模型（如gpt-3.5-turbo-instruct, text-davinci-003等）。详细说明所有可配置参数（temperature, max_tokens, top_p, frequency_penalty等）对生成结果的影响及优化策略。提供完整的认证配置指南，包括API密钥管理、组织ID设置和代理配置。展示同步调用、流式输出和异步处理的具体代码示例。深入探讨错误处理机制，特别是针对速率限制（429错误）和配额超限的重试策略。分析成本计算方法和token使用监控的最佳实践。","parent_id":"36c35786-2770-47e6-9a89-1e55a35ae360","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/llms/openai.py","gmt_create":"2025-10-26T11:33:47.078597+08:00","gmt_modified":"2025-10-26T11:59:50.949045+08:00","raw_data":"WikiEncrypted:12kiyKn3nLHvBTLlvpeURt/EJUAKuzrlwdAfUH7IvEKuM/rGGzF0QyURi7xGi6PGrPnm71qX8+GvsnaxLjS+qkH2L/205Jh7C+M3lYLVGTf3B3JJrGZnL4J7jeqPRBRqAM9AX9MO7p3wH9VQPWWJNEIEYARTUMxviVOyqXdw+IqlMdoY5oP1Ev+RTUuSjLNCqVke+S9gprQMvi8hz1FYjdyCLWO2swc8KkkXhY3DrL8AZFcy6BSSnSAkoQCaOr4Sic93WtIu0HqrOAjp/+ZfqX/t6qvhwSSyYjiW9QxNXsu3lg06boFMVC/pLexosYqKiADzmIAmL2stF5PIbeAkWaJaZ3RT92PboU5p95YyiqT2iF/iGGer6ikeZfz7OqG+gebrFZgLxB9mDcsjfFKZ7rjUywOVw/kArVvvqPGwcB1Plp94MWUGT4JItvlSOIPR1R/dxcvpFyANCLRycEKW3tvgnj/bDg27r8BcGnjko2cDl3gg5om1bfJtZMN2ibajTy1z0iR9AtEOoi1hNg+8fS+gESRnol76FLY60dCBXQksdlz53IBfsIKdk1AWg17YTCaUsvg+9Jp9hHSG6LIEh1FsF2IiwG8cjQbpiCZfC71ub56qpbk2bjLDis+qsr44TWGxPTq6bRjRxV64S/TW5OzqF1AP4mxPstmn6KHHhcqbmBXP8m6/PSpFjaSw7om2r7B7eHZ+X7El75mx4ppbCnENYyp4SHti9/8VFo7cE5oDNpfoFUUM4b1dYODHry9ytrjvLjrU5qzi9MV2a69j7XhVTwhj8VYFQNiesEbVid3H2yXVos2kC7KvkQ3NXfcoOB0Yvv3NIH4LaEYzNsFCyIjKvPyjrKBa/Epd4ABxAdMAqrNJQQzGECObKKmMxIxYNF3vISzD1fndI47cbnj0OJXTENxhGpRaixYA19o2RrcocFqgDGVPiXhIZZ1ffmlUbHSiStuw8kqFV7K40ZZUqEEGNX4YQ6/gh7cmNVRo66uPMSM+po2eIKEOfcfVa20+kVSz252vG1YZSKGJYYljZGhSXIEoguWcMnEB7RatIwLf6DzdiJmhgb8W6bEBxBIk7uIeAxZgbg8gTpkGsMSFpyAzIk2MasAze2HJL1QuKM3V5tKG2LHl7waEp8lkcXF8","layer_level":2},{"id":"79b39613-3fd3-477c-8f6d-1e3216d2ee9a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"网页内容加载器","description":"web-loaders","prompt":"开发关于网页内容加载器的详细内容。全面介绍WebBaseLoader如何从网页URL提取文本内容，包括处理HTML结构、去除广告和导航栏等噪声内容。详细说明基于Playwright和Selenium的动态网页加载器，如何处理JavaScript渲染的页面。提供配置选项说明，如自定义提取选择器、请求头设置和并发加载策略。包含实际代码示例，展示如何批量抓取网页内容并进行预处理。讨论反爬虫策略应对、性能优化和错误重试机制。","parent_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/web_base.py,libs/langchain/langchain_classic/document_loaders/url_playwright.py,libs/langchain/langchain_classic/document_loaders/url_selenium.py,libs/langchain/langchain_classic/document_loaders/concurrent.py","gmt_create":"2025-10-26T11:33:47.274907+08:00","gmt_modified":"2025-10-26T11:59:55.343537+08:00","raw_data":"WikiEncrypted:GGw2PtzPQLpg9C+8DP9VMRgb+wMzD1UBbUOXKm/eFyG9tEfrAg36FB0VYygLE2l8TyIARwJDnk7+tmXKDStBCv2xZtQDffbF5GdeSpQVbImcfbwZIBXSsvDOS0uMVU0/5XG7qNbmSqxnkPlO1rHhfIWHv57ZijtL8HiPo82H8vB7/rnhYzzEnk39TNTzf0HNBmkT3vrD7AVsqu04Eza2ViyLyMiiO37XvtHBG0qhOyZoUaQRm2GloLV/fXDbDi8C2eqcr264KLRr5zVX3yvPEIZnJakDf1TEg2rmKkM3tldb3JdRkvHmfN9XbrwmcDR+u4/GGQa0j0pgajQF83JMc1N6HWfXmMzORAw1IEjUrjh5mvYX2IwkLkH8Wk3h01v1/kR0RN9hKVByijolmUuBtWQy2JfHjmCwPsbXfHM228QWZBXNjs55gLzc+3klCqQ8k1fVzzY0LuiJ0kC764MeHMHD4Dv2WPtukBz4xVT1JmMBOY2jxsFQ/FXLcvcfJB+YSBRrtilSEKOpANpY/1w7Osw7cPyCuJ6Mm4cuh0p77P7fW26cUgB/43jXtxFGbjpfIP3n51sRP9ZKFMAgZ0n5wsD3an/BUUHbfJD+XTJrdsqBunq1df8kUisZOrzx9bsBEtMOsQe+ri9dCU+eQGeZ+AzUdJ+H630GADeWoM8jt7zgApTtTkbKyRVLPqJtQgQtOVk/ADASGrOtAAalivkX5Nqzq2Cm4HHGz9dfeb3KnrRtNX5UCjvvQaPPcvHd8O02kra07SqM3eU6eFl8lJu8iJmwWLtYYb2M7yOoCB92sUJobZ/+9Td5+6rrpbgfklLGlansh6PVRIBLyzx0ZkElgP/pBq39POJvsoaR7rdz8mYyv9J9r8gBF2zCkEI17xMef6iQ2u0jPyKIOWchF1REyUNQi9lXU1MWobrya9ceOLh2mZJa/Oi0eXTtC0M9c0UX/2sj92UNIqI2dN6Qc8Q4GHCdy6QkWurlUqxgZa1ZdF41Zmxx5ZcXd9kBL9MSaC3zd9AI7eY570R3vnmGpOLKiag5QSRabiOLAZyr/qS5/g7Uq5fAnfcK4s92wcomQrpqVRgUhfIK5rlid9KCEfa6dA2IMEqV71mhTnntITEnl0+UxYwM/10hZyuGjEhoa2gPEbo78Tqy95x8A3eFAg5BkakL/uHLxTP5Pl9qtUnzmhqvwWvYdQwOJGIa7xXUOXIPzZzdi/4YV5YbtKuEkc33G9pNFkZl3+zJQPxNSaeSEz/cWEixttmmk1kugXzPNDxNqOWm5hgDiBmXjglZE0b6q6tkoES53qcckGyPPvO2x05g0VCD+LPuxDQZ3RjQxAlSJwumJvf8nJl8Z4ljbwynhg==","layer_level":2},{"id":"10b9c650-2b0c-493a-acf3-e0320ed8da14","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Summary Memory","description":"memory-summary","prompt":"开发关于Summary Memory的详细内容。阐述Summary Memory如何通过定期生成对话摘要来压缩历史信息，从而在有限的上下文窗口内保留更长时间的对话记忆。详细说明ConversationSummaryMemory和ConversationSummaryBufferMemory的实现原理，包括摘要生成的触发机制和使用的LLM模型配置。提供实际应用示例，展示如何平衡摘要频率与计算开销。讨论其在处理长对话时的优势，以及摘要过程中可能丢失细节信息的风险。指导开发者如何根据应用场景选择合适的摘要策略。","parent_id":"950a5856-cb2b-4c27-8314-1f5789d0f152","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/memory/summary.py,libs/langchain/langchain_classic/memory/base.py","gmt_create":"2025-10-26T11:33:57.446926+08:00","gmt_modified":"2025-10-26T12:00:32.070967+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/ROruyhsaUOK0FwJrvnWn+Qqaqjeybl+vAbozBaSpNHSPwPtD5WfZ9KINKgmFaB4b7L8s4SfBmXcQBoy1KibwsqibrGPeuoMgpFm3taPwg7Tuh454HKn8DM8McAsXU8sJrTkHc3S1B9No2LMdpTkKnDoHmv1gvjsfsWcQO+gan2DLJphd2zbxT5fFGJhMD9k9NN6jFWA+o7jFqxJYKltQwR2MR2IDFXMJK3aMmQ38ufzr8h6WJb2YEdahbydsFPCzRAzQZbJgeMkAymZyp/kALvN6bPChp6dscagkJKfpmY6wjBWPoKysXsIaARF6e6O0swUbbQytBQAKjpkOYogZxXrQPWJ9ehbd8cU1ueUhTAlbhkdWTFPSaIKuHOKUzwW0kJSrSrXjgpMX5gDs4bkBJ5ZKr8R5xYfzrd6eavG6LsT/ccO99bbzazoAVl0Y/I5esCbU+cQAu6hV+Dw7Ns2KbZyec1xhf7BgShqBVJXJRiAmIYjv8wLCAyZwInZi+HUa+cnhZSxkNOoa7w3MN+7LEIp9Jo0RIn+uH4WnETRS4nJLd57kc5RioRkyfDxE72NAWXp3zhAl3kdtBKTcWgEEsujpjnFsp3PMGVTzgsgyD31UxBq0YppfgVSs8CWAquZ8297i6DFrWjtV+Ure5dyhMmf8JSrGWup7xCaMi3zhaE1bqiiXz5ef98HVblP6qVhNryx/rRq2W5YTdGp60hjyKpm17A/CNzgke+amJiqWE6gGbniijXeegrRdASiK4SjZPZpdOM6yW2fRAulOHlm0Yiz+WWKDByMB21UrTyPPC9+9M5RfK+kuo6Pd1cWXnLmhr0w2IxuFlcHMkEAOLFWxtdFikVkAJW0IbiGXtuuV/S9lwEY1c5b2CZELrBgGyhMlh52XF6wL/N47gtsyxh4eCIs6a3KqUE3PSWzunQX+xWRA2UN1cqOrCbRp7SZOrSpISTTri4mcdbkx7m679JKSLNORgEGRwOtwn0oTs1To8W4vTAn+rzNu1+uFOX+uBWP2n8aeDXV0EJOrEnKMLFdWf+fN4V6CgKcMUv+f0+WMDGrzQqUnQghsTLQ0uqoYOO/atsvSVvDXJCufiUyZKXa97kGdMwmYVlXQWurEIGMtRUfKcgVOP8tAP/n+39BvNAAxkxL3dm0im42NR+Qf8M54NJJLEC3Er5WGQb8iFKXx6jJE/v8r8zRZivRUuZCElBCREQ==","layer_level":2},{"id":"0337b533-6e7b-4ace-b33d-1788569e14c4","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Chat Prompts","description":"chat-prompts","prompt":"开发关于Chat Prompts的详细内容。阐述在对话式AI应用中，如何使用`ChatPromptTemplate`来构建结构化的消息序列，以指导聊天模型的交互。详细介绍`ChatPromptTemplate`如何组合`SystemMessagePromptTemplate`、`HumanMessagePromptTemplate`和`AIMessagePromptTemplate`等组件。提供实际代码示例，展示如何构建复杂的对话流程，包括系统角色设定、用户查询和AI回复的模板化。文档应涵盖如何处理聊天历史、动态插入上下文以及使用`MessagesPlaceholder`来管理可变长度的消息序列。同时，讨论与不同聊天模型（如OpenAI, Anthropic）的兼容性。","parent_id":"1248f9e5-5ec0-4bf5-b002-ef59fc4259b1","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/prompts/chat.py,libs/core/langchain_core/prompts/chat.py","gmt_create":"2025-10-26T11:34:00.683146+08:00","gmt_modified":"2025-10-26T12:01:35.122663+08:00","raw_data":"WikiEncrypted:ygOGkbq/AB9wHX4C5ytEUdk4508O8y5e7xYjYwl1fe7/1cT0tMeZQlBL2CoiMLTHud+HqK/8ODPwCw8gxW47ZFPAjDtP601QW3mAaVspD/TV1FcNTqv+BYCiIU6CDTH8+sRgW5LL+D9TY2DQu0VGZr31CNNgYwHUkOp3oXId/LPtFlCBiSbVPFR9Nm9J69e24uDF9aIXj0ozeb2bPDetrMhzL7Zdo8lbmtIjb+zTBVtKMzb4gVdpUpCqAtPB5l+d7bTA9QsbQpQ4sbrM2BsFmr4/X5QU8OUM93mtMZCGKw8QCHKbEoE5fAjFWNvpZ6KDqQOCT9yXWk47haehOhM8Oz3h5tR+L99DQ6qHlJdnkhyIl1MNROxcK7lqmzFvKrd1aut+1dgdr7PtTG8QLmejjqMmfayEw7hULoFMZuYxiTIF1Bb1beEE1NNoibxGAq7+5blxNZNWIhmtnBW9B5u9NFHS+akY2HPQI3KT0//Hx7jLzlB3xYiAYFtJhlICstlBYrLakYHKJb+k6ngOdzZvQUhNLkWpDkoF60casOHJwsSGc6clfdzRuceXYvMud+0jYWX6MebD8yJVHKhBOhA7GYMqSqKboVGRe3zezICQoRPEV1HYxrjo/6OmLj8HXPI+QA9N8jiLHLPIRakGYKdTJaePrrMujGM23NUKInk/9X6yxLdH04doIqvTbH6XeIc1zSWpyltW039JPenJPNWnmkBu62+e/ZQyw0LgfLEpZ3Ba+b/zDgPq5BKkZlabVvUFuAIsbQrUTS1dcd8sR3fTqo3A8EPAdbe7tnWfM+PLDEDLy4Tta0e5blWJP7ddBGYPLBG5+dV0q6LMpxG+cqTKC4IxE8Zh/JNhbw7rrG43fH6Xffj6jWail6qJG7EdmVUMt3LuahTFKYeQ/00N3nACIyz7jteuZ3Mq1bftUKkrrgb0tAkrbawxaO7t6SHnbPcvpbyqkNQti0Amom5c0uqRNrcuiZCDjJsbuxTRMkILJ/7/9korrNeR/zJ9OKFViudEfmxIDSnH+14c3tDrcYmoj2E8fwtEyMRUWMjBF6VYC6O31twuMwnTNn8fvuX8CVCgOf8MudsuafRJxslrIJ4K5awFOSMjUoVk5JGUuFD77olF7FpA1vIIHssjO6fdn82/TI5+9bF2L0yoEo65Eac/PjZ+wf0GSCdEqjBnpVWT2jPJ6mJAmpF5sUsT+wB1/WePifiMmkfFdv50A0XpOdV95G9+W6vZljrhDE5137US0XuAZIXQRqinm6RqGj+nsiJQYWE63XhpAXVRmO0geQhKmFqRlE8jmNoOCWjY5I+9lnkgP30Cu5169KPz2TFpVmf9","layer_level":2},{"id":"1c85630b-0b53-404e-b9a6-f0f7c83cde8d","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Pydantic Output Parser","description":"pydantic-output-parser","prompt":"开发关于Pydantic Output Parser的详细内容。阐述PydanticOutputParser如何利用Pydantic模型将LLM的输出解析为类型安全的Python对象。详细介绍其优势，如数据验证、类型提示和自动生成文档。提供完整的代码示例，展示如何定义一个继承自BaseModel的Pydantic类来描述期望的输出结构，如何创建PydanticOutputParser实例，以及如何在链中使用它来获得结构化的、经过验证的对象。文档应包括处理解析失败（如类型不匹配）的策略，并说明其在需要强类型数据结构的复杂应用中的重要性。","parent_id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/output_parsers/pydantic.py","gmt_create":"2025-10-26T11:34:01.392981+08:00","gmt_modified":"2025-10-26T12:01:34.532025+08:00","raw_data":"WikiEncrypted:Y5JqPbvrlpC9xaRAL07cXGG4pjKDcaM/IzGjDCWuoLrZCCNorlEATWvm0ZTLbQb1rr5d9d4Ia/MwJDNP2jBjdfFyqKXTuFo0NGDJoqyBbeMpo9WRgiMpBBf3iCb7knm7W1a3HNJ3IoC52Bgfy4yGPOe+RZdoSW/vM70AnrW53vk1UG7vGDY4IlFw+crovWQqnFR8InL+00uPEL1E6QOUhqjCofGhp26WD2flKQmMI7ymOBbKRNuAFLHnZGxSZfGEnvWRVAkDvJEHYuKZzA87TRamheNNi/hRvb7op19Y7BRKrtIo4Q6OHBCOTpvBS5lT293UUC/9mKjn2oJxhc8ErzfcDF7i4TNYGo7zDmVEOKWaBC8fTZY7eObfDn0gQMpP62Jh2OMTRNostU3/gsLCDuUOY/qCHX/K7aXI0YPgd0jKG0uZBdIt6DQwjDgL96qwFy28R+ap4iyclpZXaD2ccDv9XILproC/ebB3a4FqcQdAvlj5XULvkeRviKhNdsxi2E5MTY/HGZAXea2GtvFWgcIZDWPPPQufjNS7im7Ooftpnd7mwgb5VeeeJkUhm5P5W/0RcpC0y2oUS6kFGa2TwNSDzMMmCmMvPWKK22jKnmp3ijo4kZVfl6lpP7RLGiuhMGyEUiWzZwIfS+oIw8qotywiyshjio2rU5i4NanzxDpf0yKD3rLoF8dhsqDaVTQMRoHUbUpB9KawUwMxumaOgZrgutGPcjHY0gN9ZHe1VO6K5R5a7VpZ2rOHq1MjxVsohi8kwPj3tPQyWwashxfldaPkj9laT2bpfBgfFFALQAT/LPPTF9089TSFI56wZwpcHIPj2SmRioiXbOgSJxSWcXxIzQqSQ9HxHsykmRLPhGZNokCh5gVOTLSTQQONx9G8dphPQKX9y50Dnmzsdow39rB+9Qlhl6owmNiQ0jbN69fTuzsyTVmDQ15h/ysa0V5SbbYit/pyXtb3VZfKqY0CpREKf5p1RByqtQhUXawCLUSOfdaTyjbm2vHlxC6CAyr+Ndbu2n/rkHTk7JPmEdtyZN6fJm3gDwzUpCX21wHIc5kHPvXeWkTLxp0AzW68wstY1Guu6Sr4Oyiy8iOkCLU0GKqqa676M3s8R1a8UXBatF5GCOTQbcZnv4O5wfZuKTbmOWDluWXXsyXe5JnFHMGjLcfvZQYljP837nU/yRyEB62xTsjpY5MPsi3ViaASuUdhCcHiGYrdApw16CGv5+tdLQ==","layer_level":2},{"id":"df7852dc-6bea-486e-a9ff-ef1c9b085b6a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"自定义工具","description":"tools-custom","prompt":"开发关于创建自定义工具的详细内容。深入讲解如何从BaseTool类继承并实现_name、_description和_run方法来创建新的工具。说明如何使用装饰器@tool来快速将普通函数转换为LangChain工具。详细介绍工具的输入参数定义、类型验证和默认值设置。提供多个实际案例，如创建天气查询工具、数据库查询工具或内部服务调用工具。阐述如何为自定义工具编写单元测试以确保其可靠性。同时，讨论工具命名规范、描述清晰度的重要性以及如何设计可复用的工具组件。","parent_id":"42f7ace6-de00-4f90-8caa-97fc51015613","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/base.py,libs/langchain/langchain_classic/tools/__init__.py","gmt_create":"2025-10-26T11:34:14.137462+08:00","gmt_modified":"2025-10-26T12:02:50.459254+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZzuf9qp4Lx+W5f0Unpxp1rQaffanRGf+JvUpem8um+oglNrqSolWir7HhW7/QBV9xora4nbK0THrWEs6wL8pBMj3CsDT56s8e13jpesXTS25hInf0bsNjIwUM5NemX6cQWMZ0ZZQuCiox+pBbhz2pRVQp2/fsDNxl99+l8WUW+F1xBTuKQgvCciRuQZzv5irT79nXvJK78ZXIEFdxeaRJINeRF5U70CmC7gUTlGaHYXsg4en8tyMVMwxWPPEddZs6hNg6vBsijAtfGpyCt4/JkdpM+lSgVenkoVTW+XclDEt6z6+PV7d60ssrX8lxrrVfq3bJXl0AGpJzP68lLKmb2M5QhchyPVABtyZxm243jVgWSH0AC02pF3mr8jnokpW7Hpq8SQ8nLxZCoDg69y2w8VAF1Ke+Na9kt0gB1pJ6LuVvqdG3xVzKPm8hhepK88EspLPQmUBfAJ/oMXbBEPUK/R+GRqXKs2dUI0gMOJKvXB5BjYwcaCEEH53iyhEdbdrX3v2koRkGz2mgTXqSezm/kmEvqC5o075536FnhlSg3HWuyBaqbbrjnjeba/CXYdBd+oVbPus68GrUQ0t/Mfv8lml7wBtOjOot/HPFEyHowFegCfKQEujYv69nFxO7gFETt3OLQLQ7i0C7iLMuvkHlDyYJUTkBLpNLHZ7rbStp7+ehgcnfgh8GHCRaQFmeci18acHlOJXmvD0C1FBQ5RN3milOnFvoZxb55ZjvpG/YOV1V2X4PbEx5Sur0Nu+DKRdDwL2FTP0cPvMpf4R0SoQechJQWjhRr6Q9zLkIeeRlTp+N70OcnDK2ePSk++LHyfsSDdg4jJFENkDHbQwoTp8PU1bG7hlX10YEYjUtjsU7JbwM0m+Wzo3Hw4U2NlozTPLLf+Pk92EUf2C+WAZSnRcB25elNPWUZBbGRPPki16oWBjaDZE5kx+Gz4bY8k/HmalsGTQvQyNTmrE6C5f9s3cXoGcp/hmlmCowCAFkFGNsUy4+EqlYFL6BLybsMNtM6RjRvPys/rXhRurUl7s+cPN+1LI4DIkG+Zv+zNcpsu57QE0z+ZvY1nd5D1l76PwHmC/gZmBjFPkbQbKdInhXEU6d/UiEiLSA4pxlClIhDfI7Uo87YE3xC7ZwMtXbC11fPVYXX4JOoSjo4GDXetqtpHHWtfLU8sO1HkLWb8ncYDFNBpwKhgkltPQrQkK9LuySvzhfow==","layer_level":2},{"id":"0c62cfa3-c020-4b5e-bdd5-2ed39b3992ea","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"关键词检索器","description":"keyword-retriever","prompt":"开发关于关键词检索器的详细内容。解释其基于传统信息检索算法（如BM25）的工作原理，如何通过词频和逆文档频率来评估文档相关性。详细介绍其在精确匹配和关键词搜索场景下的优势，特别是在处理专业术语和特定实体时的表现。提供代码示例，展示如何配置和使用BM25检索器，包括文本预处理、分词和查询扩展。对比其与向量检索器在不同应用场景下的性能和适用性。","parent_id":"37c063a1-2c65-4467-baa1-3de97aab5352","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/bm25.py,libs/langchain/langchain_classic/retriever/elastic_search_bm25.py","gmt_create":"2025-10-26T11:34:14.964537+08:00","gmt_modified":"2025-10-26T12:02:47.845589+08:00","raw_data":"WikiEncrypted:nw+4BVPr9Quqg1OIBceJExVs9IaAzjF1sws8O6zRZ/jUSuAYtitQHIYGOlJ0zpBma23mZPrpHBNausS8yaU2U7UxBXzKjChMfI+n2I88L2OPJvPQEj8bPEIaImLtm6i2430hmURMN66ViZPgi1uG3pH4P27lyRei1HnDO/E9NqdWP+KrG9/YnO1UifLx6Sy+ylTVs/jBTYCcFoAdxto5mIZb5U4jczusGA2svTglHSmc2wKyTAti0aO3sW7+M7EXz8DklkEj9+tgGAloTJU5bAdEERcprlyO3hAnde16ATeptO2Ejn+UZceZ0881XMlRtuEDMSWyOf/6Lu5LQSC1oU4KUiVOjCuNYwGltdxMQej8YkvRUIkvbGlPgPaMpv2/n5z+vhMKda0vZScmD4G0sjLYSSlgHQHqIKoinZREiHNuAaTZQeScjNIMcz9wF9W54eixhe5AjaWjsuhLo53v1tpPfAhMWhCdgbddbbXSJ6gB9hpuYaqPMXPtzzOQeCrFYW4Ho4oI3mmd3YxhGKohBOAA9hIJbkIJV6mL3v6AuRvkElVYBJKdbhn52bOEuXs722MIIQ9Jqdpz7i3EnZQq+32Y0YCDHlbvTK7tKctZeRxrdvR5y1ZR0WYtd1DZHky3eWh3zjcE2OloO/BxnPBjOzUy3xXEYBODfcTZj9W5EJoxKZ7QPqS2/cu5+jM3/Wbdonosx05z5mhCod1UhZxjTtClsaBHWkrICjIlTltwdeiDF/Mbl9r39qMSmjdWBU0d8y+VpXPCbFGMejhjzw4xZcWno/yTyC3SODgMgIfaM+Sc9oy2WO8wvbIrm5R5i8a6fjmglMeGv8lRBdzBpetX7ZEzzl1TvUzrEVP+i/+KEXXDVPp6D+qruxmAxMUq5Y0J7C+L1WCnh1V9RankkitZZz/eg3yGKPxFgmYyBuumE5tWQ5wGV9N7zAmBt+ErF2Wj1mzZ8KxXXrj+3pTZASFF/NEljiZhWZufIAoneZvqxV7Eu3Jpn+/0PS7bs42hgnQJeElg6Ifu8ELIR+IJxkJl4c2IzpeumkqzKnavM/J4SX3NBZILr1d6ITK5P57vN85hinMigbm8T+DSfcNCV+X0tmHr/SNKJ99yooHpVgLm14/2yWfJdlZAnCK7P4ZKk0aQ","layer_level":2},{"id":"01feb3ce-1552-4c3b-95ec-e309d50aa1a1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Pinecone集成","description":"vectorstores-pinecone","prompt":"开发关于LangChain与Pinecone向量数据库集成的详细内容。全面介绍Pinecone作为全托管、高性能向量数据库的服务特性，包括其自动扩展、低延迟查询和强大的元数据过滤能力。详细说明如何配置API密钥和环境，使用LangChain的Pinecone类连接到远程实例，管理索引（创建、删除、描述），以及执行向量的上载和相似性搜索。提供实际代码示例，演示如何将文本数据嵌入并索引到Pinecone中，并利用其过滤器进行条件查询。文档应涵盖性能调优建议、成本控制策略以及在高并发生产环境中的部署考量。","parent_id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/pinecone.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:34:17.683081+08:00","gmt_modified":"2025-10-26T12:02:37.670011+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyD+enoQNMfwb9mUsznEYNzhy5pFi21F8bI7v6vzBQR9EyFg8+3IFIOOOvupF3P4Hr9c6Fynf9NbmDDOQE8dU2KQ+qr1ITw5xDRoqoVfIWtZ6HAk2dwDBNxQBh9wRUTEinGKqIn2gbka2vthxf7dAWv0739RwAyObOF4m8blNAXwtzihbGAq0Kh25tZHDKbciMs2dvAbcito5fLUhjQCqH5cfS73Hc4wpKvJz+xlP9GUujqvhXMwhme8lyyfttdw8KSlG7RAl698weL8Or3vCW0o1OcrxSG72I0nxvkjQ3A036RmsaPSf5p9175s6e71axgdj4JZieZ48UNGTS6j/AM3dm+KwGQNpa1gAAfWHQUd4H+cm0mPmXh6NZGlsPTwcKVrVn0P+jcgFhLnhH1pZ2Jdhdn8fnR9A818ikHd/EZfGPRweym6hdNhXW+qdrca7d7VJkKTqgsqyM/Di0qiyztbz/vfwlWmDMOEMiAdzcS8sbLvvF0DkqBh7uX90X/4a8qiN8xvvcF4tpLbZmil+xKj202vqHPuBuHSW63X4uVeUQhl2NwtpwWvBD+Yu/KatsIQ6lxq0tnf8SGClclIRm0JJrNfSEfOa3STNKc4I/YmDLwodl88l7xPBrjF8hCwi3xWNRYRhMaT+s/I4llU0fwGMuYkfSmWuksXbAwFjgYyx9AsNGjU+f1Z9tsS8btcHtM7agYxPms9aFALaxZMrYw0d3iqtKu50fgxqTNWvlrhyqQashuK34JIqjQPPFIAPpMikzUlMZUbDXvsy0ksx7uaTxls1RWIFQ70KZvDI85GmnOy/2a5UnYDj7hda/fkV2OzOp3mWr4gnEWIdeKdl+oI/tba5GxEvYg6ljjAUa1w0OZ1yT+OUu1xuQYbOlke1/H2HqHdEWc7bXrEg9eNz52BBU0Rgv0qYOvYhT1YxvHG1feeGS5u34px+tYeGtna9wyKncK/fyTxeprNv2a14bJdDR7QWT+66whFPSJkMs/w+RMeAv4gLDIGutu1BCvW/ZGpUibyfoMjKgvw37T/ebW7LaIGX/Tc+7v/YpZfxNEb4mztYY/r855VSZCVxf5wCLRqAhyyeTh5juHBC1BHTG4r8U81pD4DbowjCM+fMLw+fiKhfTkvLBdzlI9NPzf/SNQrZoK4WVwHgFqMfqCkQJeHXJYppLqBlnXZVqFRJpJHK9z4/5Xz2GnBHKQLCaSD+MMUnzCMRwqoReKPFi5qK+WfwQJCDF8BBOJFSySgmh0NbExKPVsMzosZUXbhKPBz2x9aFnpIWILcv1oH/+9+w3rzuArhcPXpxFRGbwkpeu6bf","layer_level":2},{"id":"9f243123-6b8c-45e2-8e82-60c50426e188","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Requests工具","description":"tools-builtin-requests","prompt":"开发关于LangChain中Requests工具的详细内容。重点阐述该工具如何使Agent能够向外部API发起HTTP请求，包括GET、POST、PUT、DELETE等方法的使用方式和认证处理（如API Key、OAuth）。详细说明其底层依赖requests库的封装机制和异常处理流程。为该工具提供完整的代码示例，展示其在获取天气数据、调用RESTful API等场景下的应用。同时，讨论使用Requests工具的最佳实践、性能瓶颈（如超时设置、重试机制）、错误处理策略以及在高并发场景下的优化建议。","parent_id":"33ffdce5-d35a-4ae0-ba2a-3a92b99e9dfd","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/requests.py","gmt_create":"2025-10-26T11:34:27.778786+08:00","gmt_modified":"2025-10-26T12:18:06.408091+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZztZVGwM9v9t+3D2FDhFPVALw7UBJXRPHh46K7xB2tvY5cE0jXv3vp0HdVw9ty/Ow6/N2/et3St8iVnnA6yWsjZ3At6UTRub90QXhzIhcDA1pCtyMFTiBEC4NF3pE8sfXehh7krurQAHzvk+FszqsLV4Rp1N+fEJWHjmynutZtul4bh2bJAxUgcctctFUxbsnVlWx7BuQQQA1SZdhf+K69YlEPAbks66yG4/Hvprn2/oLJ5Ps7LmnhcqDTWz3GO2MVObp+VUF8k0kWjh2di2qjH4GVCBZ5tmSa1I3r9I8pDkXEfzOTAjAIBCNbwZkpioozjlm6/YL282sKORfsyDotJZtSHcbc5HuQ2icVC4nFyQB7QcDXeBQtQwrY89R4ugap1ZqOFRx7+/Akox25o4p1gS6DrJCNDLDDhqLXVFZMM4EObdhz0XEFEiPE2vQX09dl4d5v0wYqPQTepLsR/U5mF77B2kJl2vw8rw33vSistP/nVVwcq4SNrHWcz+xR3DQq8BFReCOl6JFf8axmPD4bksF80O9hsL2IoM5zHE5hHVKohVxM/x7Qjp0A6ryNpWh+W8Xt44fOJmcuYEist3BiQrBVxRsg2tPHWX9TGY02jiwYW40GTaUt8mEdyrY2WsagGugznUxTUGt7wXpdI/7TfgVFq8Ib+uWAZoVCTYNgd8e3ExdseFiSy4KG/z8uzVLBw7D5d4YFR5SC6pC31v7PFuWxy2vUXIVZe9+hcy1fEpy5z6QzlWC/eBueFa93D2DsjlWDJ97VgAoSMws98Ue6oBydVl6KcrtvIftHV5FWKAq7mUBBQkTuAEgMsbkuKL1BhcR/7PQmRaFE4LmtOhO3Q6SHrYmotDSauJD1EinUvfX4J34RkKO2WaotM6ggomNI6Qk147JytopBD2pBFXF/C3fhtKgLTSPPviCqOM5idPumUsF4a6BxImQ7w4+uQXiait8bN+pYjo7BpPShAM6GBZm/vb6bVzYTzntJwmyDUoGcSwV3rUCJFS9b2sqzSsv8Gqm8D/yQQOyJxhrQGzODuBLeMVjkrVilsZcJWtxNlQ6S0Wp6joNzK//9sGmkdxYmbxif9JstljzdrCVCHsK8+yQOScLUVURZMvBnXeGnOEG","layer_level":3},{"id":"6c5c4d81-1a58-4082-9028-35df7ada80b1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"ReAct Agent","description":"react_agent","prompt":"开发关于ReAct Agent的详细内容。深入解释ReAct（Reasoning \u0026 Acting）框架的核心思想，即通过交替进行推理（Reasoning）和行动（Acting）来解决复杂任务。详细描述其工作流程：如何生成推理步骤，选择合适的工具执行行动，观察结果，并基于观察进行下一步推理。提供具体的代码示例，展示ReAct Agent的配置、工具集成、Prompt工程（特别是如何构造包含'Thought', 'Action', 'Observation'的模板）和执行过程。文档应涵盖其在问答系统、信息检索和多步骤任务自动化中的应用案例、性能优势以及常见的调试技巧。","parent_id":"baf186da-7347-4a0c-a819-e4c5f5225530","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/react/base.py","gmt_create":"2025-10-26T11:34:29.244817+08:00","gmt_modified":"2025-10-26T12:18:33.9913+08:00","raw_data":"WikiEncrypted:u0nHx6XS2ysWbjHRgDxgnDoLQHbFxU9TukdJXNLAPEcfpQxI9hwVDLU4P2GCrSoi8u33Wea8MKjyoBmEZvNRnZa0d7OvSZdN8vbcGVKfBwDwnnjjrLoYuOXDsKTlh0EJFAePnzlLm8uNmZX+VO7rI5XrVbo8Hh/iUp2X5iw0tbWVS6iCVqMlfsWImS+7gdDs5sSUelKrz9KW7xDImGn31okHHOuTZqYhhAP/IdV+uk79sXmTfsMT/GazTbuBEFNsLzSVsWF33sxJr0ni1kzbUILNui7Ynw+0+VOLOPo6tCATIvPp0dyz2GvW3J5W8smLH6BOJNpVn5TmBiJrm250+/9sfb72qgZGNFDgQ5wLU/1pgDs5X7lI2tHp+fyBDemb+WeZllDk9lV153GPF6SrPXXVofoZkTRBmHDx4g82Ff/YwPPmOogoSZfw3Dc44fO7I02RWZIIKEIxU0qaRAZg/aDNQ5E1mBUIJeEIGW5iEU0LzhiShKCis1yLpkatSJbWA+zCGLgdgPriMuYMSU/Wa8/hhJ4Ix7Wzwzc8mWTuDM2pVcpIOJcXKZ5nlpYot7v6MtMwE+6GNa3Lv859iES7rbMTnYe9cSsLMNiYzlsaNgxs5Wu3jJir1m5mQ4XMVhNdMpk/oU2Y2dTxoY0Y7zEiY7XAKAWBUlYlxe5G4LD75PTIIursOkN6XI579HwUePbUmqO6pgqZA841vMPDnNoY87fRcoly4y4r5xWEht160bshu1VBglbld12VMCvlcTxCTvm6WfKdwk0raA92/bLPhgmcWtsfx0U6rbfMV95MIjwULbagrAVIo00c/FMwaEo79jD9vGS8cUHPWp4NiL1af9NnHVYhEhuaSjGp2oR85KjPLJgp3xsV+iLiUns98dMWsde9kj7UihM4yvh407cLrezW01uf2zs/C7QamLlPAnYQUYb/Q51+DqcnlW6e96eoDH0MSaXi7jHTvfiAXLMpiEdR9lCTtYzu+QWau9Ijdm2B4gpMb/ibvVNF+aoMp7WgshRPPyI5GpCLvCOh7lm1JiHM/kdIwctknxHgNR5FyqUzZI4zeXpwhjMaCZFHpuL2dMWYhEiaS380nBM5QpA8KL7Iyqv4wplBiXv5DOTX8kzhd9qheJijsdrWx/U0Hp6FsAiaagesaNPw3gpneIdGDu96m9Z78/HfGxZIiReOvRmy0t3XWU4CCzxsKgyFmlY3ju3pAz8ji3GbuYGzbJ4RuoNTEPkdJ2GElBEAqw4Mdtf0OLhP1xa1ktYgPAwDRBHlGSw6tJR8I6aPdaXuphhvqg==","layer_level":3},{"id":"7cb5f1ae-ed3c-4106-96f6-2ce72314c650","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"自定义工具开发","description":"custom_tool_development","prompt":"提供关于如何开发自定义工具的详细指导。涵盖从简单函数封装到复杂类工具的完整开发流程。详细说明如何定义工具签名、处理输入输出类型、实现异步支持以及添加元数据。通过实际代码示例展示如何创建数学计算工具、API调用工具和数据处理工具。包括测试自定义工具的最佳实践、调试技巧和集成到Agent工作流中的方法。强调安全性考虑，如输入验证、权限控制和错误边界处理。","parent_id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/tools.py,libs/langchain/langchain_classic/tools/base.py,libs/langchain/langchain_classic/tools/__init__.py","gmt_create":"2025-10-26T11:34:30.182759+08:00","gmt_modified":"2025-10-26T12:19:30.589599+08:00","raw_data":"WikiEncrypted:VrTOMK0P24YINQ3w81YokSkpTq5ZG565Cd/Vcc/FJ7mI94GB6lMGW7wR1aFAmO8LFTfKGE+nyHno4rvM5YX0XKC9o06eqsJ3XXQSeL1Ac5emTs5Y9PmM4TiH4KtKgrxMTNH4vL2BcDmrWgKUmF9rT11c9Md2nissZOW+WDEf01pnp1Fitq+FMTMrEEnpf0TaeBFSHW9XLgCC38peWLJ4J+luS+wF5ggqQEz8Qq7q0Pv1XPap7CFFrPKAZZpSjnPL8wtzgORf+Ce/YBm5lHfkmntAJhTUy2DuhMkW+123C12KOLgGa5pdutxl5TjpGok0kGYtfJ5gNaFjEKXyb2v3bR/36tQedR5nQ7E89L4Xsi4KQf22p0p051g7Nnu+e+AAHFh8btcDoIb+OI3nQ4J6p7XvbLB++8BQ7XifSC/8k1oUZ27exrv7fVF/08+OmWFGZ1hcSuKk/lWEwxYSsTNFRKAWqV2Cdt8MnyXh60nJwIhggORUUsJf5yg42N/oDLZnRAmCOcIMSu3jao/bPeaJqIdNDd956TbER1cI+e5Q3FWLbjwbeg7INMMS5ABuOfX337wdHyryL0OhBD6uaT+HsqeHxPy3nShXTFGp2I3HOJtvMPWSQM53wStDjFXCIcKLRCqVvtBXHShoaxTYfw7HLAXEPQM16R6Pp994m8VQeeik9cZhZ3P0ZdKyk0FQnZlt6i2xEjRZ0TQQKHWfyrCqz/7+bb7jnVhsegiT1eA3jPNE6hFsgusU+bs04hE7aAUXmP/6OPN668ysx2Hhh27McUb+703Wtsc0iZMMpY9XqLAv3AtvZovEelYaTJL4mcaJn0Tyv0tEFkub7WshnJQiJlj6N7Ap9gG6pQpKy0XlBQ2UkLBDqOBFV5o7YblvwmfWBSf8VI089/VDdKpjs2dVo3NsjYjTC5CIqJoa73EGm7QmgrNRCcik4ZKL6+oQPKI95djH8lp8VyDKVg0sTfFKS8a3ibgpPnQTVp0yJ+vGhw9cwWWlbJurHY9hwrvLN1KJI4MUHVVX1ghELRFOFsXdcdZbe+QE0T9V7TU++Elufh4x6xJBH6RJramd3TMSNuRM1XbwZtpwknMtfBUmbPKYGIVFdC5QRPFF1unBP/Cz92n+HIGQIRxaBhNHUP3wKSWaRQWv+ja6HpDnktRHh8EYgBVugZ0D/TfIHQ73AiS+MRFd33IKaHEtScJrc8BsCn2rn9tA7J0sOCLOZj4j3VsiIg==","layer_level":3},{"id":"38e1e47c-c3f7-4552-b549-54857fef6ebb","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Pinecone 混合搜索","description":"pinecone-hybrid","prompt":"创建关于Pinecone混合搜索集成的详细文档。说明如何在Pinecone中结合向量搜索与关键词搜索，解释其底层机制如BM25与向量相似度的结合方式。提供配置索引、执行混合查询以及优化搜索性能的具体代码示例。讨论在大规模数据集上的表现特点及常见问题的解决方案。","parent_id":"e84e7681-17b3-4cf1-9297-88c51ce3aef9","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/pinecone_hybrid_search.py","gmt_create":"2025-10-26T11:34:38.553789+08:00","gmt_modified":"2025-10-26T12:19:34.955032+08:00","raw_data":"WikiEncrypted:aU3Fq5alFK+m4w055r2R9pSSk3PMUf3+ewayWPfNXy1SjnwcZHadU2aRKxkz9sa0MJZEz/RtbnrgYfqAVP5ZK3cKQC+Rqy5O0DDQucd7GpYWpH6ONR1AwB3y8cLLx/hP7kb964Sp/KcMYqbxFj6hkXBduMI5JIlY24Di+LU7psc/wE3WlPKw8/QMKasraMFLZtKW+z8yWSXXEO7vYlW3r8HxDiF8o5E0JzGIo8fLbpMXB7vT2TxPiLRFDAL9nEcRSjBOn6zuxCD7ekCttNPwBNWpmAwZrYOROUWCzO0A0Sm8eWFpZlBvuq0MbKnBPJuzF/JHJU2H9QrjC7/9fAKS/Kc3zZHznTpCXqn+twnlNRUR1NONcFOmhZ9z4DN8KOY/bA09mdxzJ/dZrVAi/Igp9Q89DjYzU65jMjyx9DaQmbXffjQlfxt3cc3MWCipY64oSjqIqq7zfAxMtXALjwwA76uJLqgK8jPv2CxwPZnN9z6om215MXLGbJYKcZwoiZ56Y7c84ySHX2zx6NQjQQVkiCwfDiWz81NBB6ml6YkoH7kK93TSiH+3vsvgQfW0H2dwtEfYcf3Urb9gnVEy8quzwJ3vLjdG7K029uwd3NRxfnQE1IBjgfa+EQB5kijBqyZ1UFORS7jgIanCgo/px9TBoDqEMApCZUegNZPb8sKaWMlXZKgCQ5ePo0AAhEGNkVoa1m/MrCKBa4/dfBJUWL2vO77BKIb3bBGwnCjp3aDf2aexqKxJxl/hZhYEN6KXAewIgU/mlu4WUkK/tZgZ76/6n8gwQsOqhnP0cFFiSWyxzCiOI/GYJYBShsOVSxgqQAggdvtNw+4l0RmKZZoyZOvQCA==","layer_level":3},{"id":"d84815c4-ae05-49af-900c-3b219ca7618e","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"嵌入模型配置","description":"embedding-models-configuration","prompt":"开发关于向量检索器中嵌入模型配置的详细内容。详细介绍如何集成和配置OpenAI、Hugging Face等不同来源的嵌入模型，包括API密钥管理、模型选择和参数调优。提供代码示例，展示如何自定义嵌入维度、批处理大小和缓存策略。解释不同嵌入模型在语义表示能力、计算成本和延迟方面的权衡。说明如何实现嵌入模型的热替换和A/B测试，以及如何评估和比较不同模型的检索效果。","parent_id":"752f4c84-c0ae-4f5d-b794-1f2819a06976","order":1,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/openai.py,libs/langchain/langchain_classic/embeddings/huggingface.py,libs/langchain/langchain_classic/embeddings/base.py","gmt_create":"2025-10-26T11:34:39.13918+08:00","gmt_modified":"2025-10-26T12:20:18.488791+08:00","raw_data":"WikiEncrypted:mlnMCj+10fwfWTIeGKTzguvycGhLgQ+nn4ycP7/msc+3XxVlx9SR3p0I29V9ZFw5+UBuYujj9CeGCXzR0xSRAxTtUd/DwxPUvJ6qBKW1HqgEJKnlEykFP+GSWJ4YRFSZ9FAx9/8cbBXHck0UdVYN8yS+WgXZitNQtD1wybqebuiXMyFhQMJy4gI3J8qvV+gDpx1cUcPBpU6Xk4x4blT92hj0uO4y3hv03xlgoEezo05C3e8vKjakTuYvjnpd0kiiiMaUQh6/0x78FQusgjSzHSV7XwBxt1T8dVoy7zdcPMFy0Wkjw1E0r2sxPGOB64gMOms9OnKErlrrtdo4H5JbNHcoxmZaxk9ain2Q9wrsFvZX6LEsuhKoAL5QR0sGSUfsn1kGIpwaq2MpniMFmhB46Mv2eNaVdbs1haRCFBM7eQOqtzM/wU6oY8eljR4Al3xPHikKN/4yRIeOqz9sVwxXakfq1A+4I9cPqQXxO7eXGlJdLoYZF31HlV8rbzCn61ta3ApkK/8VyRRtPPJ10SVFYMw/8r8OtyihBGGntbcaulNo49bkyu8h0Y+oG+dLdncbiruB/WUwGPcDYSopubRgWpTzHVIv3D1U+3L7J/AEB/ENBVIzbUyMqYOjRwj+CBQP3UVf87SeCrBGZJKsfpA2un4+inQIhOZ8XbUWUWZbqiATFiHNtOUUdh/Vryjmkoqvarct08bDnkd+s1nMs//K3Md51vx89MTkSOsifSQe8+/4lRmjsnao91zqeEPbtezRuybgSKn+li05n/h/2ImVlNygPyWiU3pu6qzLkoiGC0/Lf6CJYjN1vUUoP1O315Z0BiStShwK9A+Jh2rzJ/sep9hWhEPK4C1y+CgDe+3zCY1TUY/JetFGUP3R3eH5UPox4pBjDFcjno+59TXpHK7IqZu3DU/FPuP+jmGkWL3o2iHcmOHSN73WxdO+POHVdnOWu6wUGIxXv/lTr90md7QRKh8Pa6QlwvlfQ2grvgsOiZhGYZuMAE5nIMwkgPV8TR3aDQc4qSoTA+RAjT8Ve0bWaX58/o2vzkY22okq+RU9Pqg0aEIt/brBwI8G3Vy7YmKocsRsRxof/CAkByFP2QWZD42TJ70q1N0TIM8i/5K5xm6hhkKr7CSCB8PLO2yUVRwDJxbyll0QL87yi880qCti8H7oOjPI5NswVoYRVCP9phA=","layer_level":3},{"id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"经典功能","description":"classic-features","prompt":"创建关于LangChain经典功能的综合内容。详细介绍Agents如何作为自主实体，使用工具和规划能力来完成复杂任务。解释Chains的概念，即如何将多个组件（如LLM、提示和解析器）链接在一起以创建复杂的执行流程。涵盖各种Chat Models和LLMs的集成，以及如何加载和使用它们。描述Document Loaders如何从200多种不同的数据源（如PDF、网页、数据库）提取信息。阐述Embeddings在将文本转换为向量表示中的作用，以及Vectorstores如何存储和检索这些向量。解释Memory组件如何为对话应用维护上下文。介绍Output Parsers如何将LLM的非结构化输出转换为结构化数据。为每个功能提供清晰的代码示例和使用场景。","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/__init__.py,libs/langchain/langchain_classic/chains/__init__.py,libs/langchain/langchain_classic/chat_models/__init__.py,libs/langchain/langchain_classic/document_loaders/__init__.py,libs/langchain/langchain_classic/embeddings/__init__.py,libs/langchain/langchain_classic/llms/__init__.py,libs/langchain/langchain_classic/memory/__init__.py,libs/langchain/langchain_classic/output_parsers/__init__.py,libs/langchain/langchain_classic/prompts/__init__.py,libs/langchain/langchain_classic/retriever/__init__.py,libs/langchain/langchain_classic/tools/__init__.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:32:22.233186+08:00","gmt_modified":"2025-10-26T11:36:30.07507+08:00","raw_data":"WikiEncrypted:QK2FE9niK008DzzrBeNOsSWx5qNI1vCF542RsZP4dqFG4w2MkK5YdyomAjtpKnQQ2NoajmRYQA6U42NQeqxNO3EYubNvwQ3VeyviAvahwitW1ZZc7QuSi5+/VGLdXMZxysqMkAXsl2HpUU3m4PxC8FNaCRjx8CyHurz+QhjqFk8AeU6EIe6TKaHGxNMg5HoqINmmkBYubb41tvYdYPsTDjar5e1z3YN8GwvYvjxis7x4FycXN1ZQwAIfY+wYeZ37KSNina7AzvNavvJopfpJoZ0/mZ72sMBnBzKj5l2ky98d3A/9VYMdDw4P/nx7hz0qf/jB/NB8F3LHxa50022IPn3nKOrzv1Fp8/zgEMiW1OGW6j7yLKVideVn1X/SGFC+YJ7xXffJxnPwKJUIqGcY1YhMjAIwq2IrpqInduRG/WQfjL7FAlC8Jf1HN6YDqb65HMQ30Jfot1OAsYlnELDydxDLTP2u3pMGqfmPMd+C8pTou10O7X6JE8g5/fNWUp+88YgjfGzgz6QcyhviwVg1LxtHcgXitXbWV632OyaPiEWmYwJNUZUy/EkmSHSKsDgRjyB1KJxSA5Wk8A2cZknhdKmw9351HE9cqWgExpFo55UkLTrGN1+oRuWOo8VeyjLqnQ1kno1qbKgyFyoWfLdSkR0+l1JNVdoYDwIKEZsjxaATDsbFNjywEMV6mv/PMxu2l/HqWjJir+yp0aRQkyDoDX4Qih3waPJAhBoNRiLb9wpYHOBtnvWyapxjrSNt3Tuehdg7eCl3hJnHtrXM5mK+QLTRwOZ3SqI2X9v9QVFpHVgUQRRVAqBOJGCYyJCDx4JCZZKyYMoQKeM4PiMsnhj03nBHC+VgBjLRioP1SdbkwRWgywBG3T2armV5zaqsCYHky4D1/KOeY4puqd36RMiqYh3IMWIDIMbwy1hdKtlbIpvUTpahxiTbrHoUuFarbzDliUphDIq1Th40+pkwUVcY0/3HP5o+trrthjVpIa/5K1mLJoBR8BtyvYTmSzNia6/YhWQuqy+TWiHSGJ/YbxJVlwHJhte0kLo7QQCYIIvwXAsOYfl8n5YRlLQ0avcG11jUQmE0S+nW6bWvUixWk5Wgyb5ktizXXX36j0SxHn3KLtuskPBmD5nGY8UgZ1lHfTy+P0F3sUBGaMdy4zq9H8ofs+tg3l3y/Ry+ERIpG8iirvKddsPCpHWgNEs7XQ2AY56gAowfARP/9vjqDjGrhhfhUzEpHOzWEJFVQi0MmY6qrhPXtjqEv1T+OF3SEXchc7OyK0EKs2BdpqmdQ6i03b89e0/g2kmt4waUIF34A3tM5nS+1lS9jfLZ1gQUVRhwiVhvuvgpOdLwOzs9ll7tZmgQf1YOr6+AOkbjkvkTmkA4wfAOzEzdXWKub3ZCvTl/kmAbEAn2e6KhNtQKD5jSV/yeZsSih96Fd627PFB6Q/yBo4AEKA5ESSeaBseelxlPF2NBucntnehrD/UQJyoz83r7Xd/d9fiUZDWYVB8l1poSkSug2BE/80EBV2TKwwXOVfOjgbb5PeSP9ZfgdSlo1jnjIzXUps1OdEO23423botm9gWu9A+RQst6vyVM6eRCcwNHgP1jVWIpxu+Y3EFCSqbZKYepPriaRoi0dc33s1sEJrmPrp/GypR/0Z6xAmVgg7x9MW+QMNfz26pfL5oOAq4empJBGh5IrmUeqPqZ2kz4DH5RI4xL2vCvpKIiwTJGCvM5nKBLBVtdeX387mQ05kuGn03VXOhuVVt6XMgRjqX2WIDebZ60YWu15beY9j1dtiSjCOLt088yk30HGWKVoeBkBsZoaF8UckqaTQFkqTlKc6hN80GQ0RHC0nZW6y7WdbUt1QXyVYu/veAHHCmVhNxost5Xk4BcVE49FhEQZ6NzsQ+vez8ZKRq8c9kVn25mwcUJ0MT5K4XxHRD3hxvkk0vfM1/2HejuSnfDdWFrBvIK7O750CxF7et5ISMBGWWuaLScr+6t0fcFCJTyH+Tq+0mh0knARN6D0PUbMdlisIojzoTfI5nlCjlWbMhkWIR5NIJPNWMPmLh6Bsp3+zhjQuj9fIi6EGh6/jCD+HtGyzN9navBm5Cg9ofePcicELd68Diu8bMvRQzsh4yAR19c6qjTAs7p6gfdFsh6kO5slf+tSzElU7g9AWEnoaPtG86/zd1wwkhzYwuUCfFF0iJx4HTV/1uqgQmrXH7+UGCExhEyG4lqJFk60yRCZoY5vMw27/Lz3fFO2t6RW8W3HEO6/23UYHlpIl/4RlW7dF4ETKElA48="},{"id":"5fa23b29-1c74-4708-8756-ff9ea12bbabb","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"提示工程 (Prompts)","description":"prompts","prompt":"开发提示工程(Prompts)的详细内容。深入解释PromptTemplate的设计原理，包括如何使用变量占位符构建可复用的提示模板。详细阐述ChatPromptTemplate的结构，包含SystemMessagePromptTemplate, HumanMessagePromptTemplate和AIMessagePromptTemplate等组件的组合方式。介绍FewShotPromptTemplate如何实现小样本学习，以及如何通过ExampleSelector动态选择示例。通过代码示例展示如何加载和保存提示模板，以及如何进行提示版本控制。解释提示安全过滤、输入验证和模板继承等高级特性。讨论提示优化策略和A/B测试方法。","parent_id":"e477836f-1151-41d8-a55b-bfc3b7c24117","order":2,"progress_status":"completed","dependent_files":"libs/core/langchain_core/prompts/base.py,libs/core/langchain_core/prompts/chat.py,libs/core/langchain_core/prompts/prompt.py","gmt_create":"2025-10-26T11:32:39.557551+08:00","gmt_modified":"2025-10-26T11:43:55.493796+08:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxOpbfdksavKMWS2V13NyqN4qymVlZec/tHx5ao8QKWdSp6IQL+H4R/5t8efB6n6LDaWyuZcOQtGcEDPNQZTcW+H7C9pJK7UWXxm2tLdo8CzQuoNsjHv2YGwSVtGHaH2xWqWdrQDQpsHyRw7Gm3XYTsbeU77kz/ZR4VrdniV1U9ePF1VopJ0a3odbdGMvxS30UKZeL0/o4W0NWuCDQnROUJ/JUEZMy7QOfhxg/vujvH1V93AA5Jq8UqR2OfO12MuBH1FOQsxKealH9f7y6BDXgut67j07OfZ53FddKar55WsQjd1WyduTszI5t1ew8JFXxXt5+7ezqd08AT4D4odmsxNGw6zVRqcYRfw6Nhl5yUcP0Pdqy6EcFAHDHbHJx/YCg7UeQ2DRJTVCA/stTW/YIZmEdIeoHJC04anJeHQLfsHNSvLnEOtYRHbT+74dwLAbF6oGr9QRbu43uNYVstJ642beAR+qA1v7EnSlotKz/eLbOQ58z8iO2QJaQDWODQHJ09vzaC6D+UfXOPnXBM4pOIdUwgtwaoZ12e4hpygJQioJDNpm8Lk2E4N59uYhu/TRMv3q/rj6xNtUqhk2gjDBKb9AaXnaeTwnxwLJXLZaXZomBE4YsMvtNScMmbnTUHNLjLzRzLPH/shHmDZk4ffivOYY4YUA6NHHnjJ32RCG0BYy3lv2RXb4h71sU3wnVpTf4ze9q3LPTC85u/myG01pOX3PMZy/lIbZ/Tn2cXs4+pu88FpdYMMDsg9EkNHPaPk6TABe2f4Nqs4pUWbJR8Bn7NbLmZxkiqifMDUJwLFA4S0UjoAyWelOqlUddhyKCn8pXx77c5gAq/Dc300tr3rEh1/tnSeeCcWmGYYE2UB3Wh/GNpeJ1stm+G/RtZ8cyeMDd8WmQrpuw6XwZe4oQ0rHHzQYTBOjs8pBP33arlujFjuMZuP4K8VYw8LgrlbtZ4w/8hXznIbWPN5VgwilFRbpkUO6bQ9YAVbQ0gpWxFeO3radi4B8SowSYt6zVXVOt9pD3ervn1NOJzRAaQAVusa+Ishi9dn9v8JQ+RJ8YAeXu7yTVp9lFNKIwvsnj/t3XU73EoUn0cPPxY2t+dH9rOT8atTvooNWRE7bSs0poYf4MJptneNoZl6Xg8xgu5sRDXCi5St6EsSWa9x11gXSkj9e7DIKKexh4PFCCR/WYwqV/kUxig6ZMRRdVsZfi8nl8RG7bBeRD4kW89BgCiiYH+EsrO5gaClnDMwII1UP8QlyOwrzImAaVUxtoFHUrMdkUj4sJUDj5H3ig5I+wepycSn9DJkKfD6NgnHModG5j/MWTG3Y","layer_level":1},{"id":"7042428a-e443-4f41-bfaf-1704cb09851a","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"OpenAI 集成","description":"openai-integration","prompt":"开发关于LangChain与OpenAI集成的详细内容。系统地介绍该集成，它是LangChain生态中最核心和最常用的集成之一。详细描述其支持的全面功能，包括对GPT系列模型的聊天模型（ChatOpenAI）、基础LLM模型（OpenAI）以及text-embedding模型的嵌入（OpenAIEmbeddings）的支持。提供具体的代码示例，展示如何配置API密钥和基础URL，如何实例化不同模型，并将它们无缝集成到LangChain的各类组件中，如链、代理和检索器。深入探讨其高级功能，如函数调用（function calling）、工具调用（tool calling）、流式传输和备用模型（fallbacks）。解释该集成如何严格遵循`langchain_core`的接口规范，并讨论其在实际应用中的最佳实践，包括成本管理、速率限制和错误处理策略。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","order":2,"progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/__init__.py,libs/partners/openai/langchain_openai/chat_models/__init__.py,libs/partners/openai/langchain_openai/embeddings/__init__.py,libs/partners/openai/langchain_openai/llms/__init__.py","gmt_create":"2025-10-26T11:32:50.903702+08:00","gmt_modified":"2025-10-26T11:43:16.317342+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvJ3H++1FSWgndVTVFuOvwIRLQm4aGeKWP3mbLbTglLpunUvXe/Fs+L92bSs21DFrgJ9NCRvg5rzVjoCDf5O8P0/s4dWXV49WFtoRmQCNcQzrusUlT+00lwASForW4Q8/v+lL5fuT88Ua6KYy278+wvlnmozDWXsjzWXfqYAqI1/n4GJsBHytj/QaUvGNpWpg3Zlzvj70fyppLADFP9aFUtdEQw+gTLZjYnUBw/Z+DJfm4xMQaE1qos9rPhMPUyoENRgkpnuBU5pIhF8CXGE6j7ovXPWfl5nQWKcvtGeAElDKHs1oGBYFMBP3e8/DL5Dt13xMJjWTsuGUCCXraG4xj5OPWZGzQNu3eDV1+w5CaB2nNGJSZs2UvVlTQq5S1CbBECj44y07jAfd4Fbvn6XlA2xWBmW8ZvgsHz8BbA77YtDU35vF2kORRuWwLuKBawU0IxEdd4LT1yxY5DEwK9+f1VJbuDDbQwAT2ubPoUT2upq22zd7ZllbhaGAp9BTAV4RcQ+LXfcBYQJa0Xxg67lw50S45CphBtuP/9/KYSbffQyej90XeeWqNixq3SCNYVFVrYhLX6+h3EZl51S8UQX2vI0kIp1nLEIxB+H2ZQ7/7JyAUcovkhwBa1qzTML9IoYRZCwgRn0obFUN6SgxRSSu29nIMS4gbcM3CzlRRdl+NnXtTv2w/cWBsF4lEJ7b3vsdz9VF5z6+mXQqf1Rn37MOre/pz3fI3cwtZ+P7c0TAublusbsG/NYHxuLxvuyC1cbbxUviocd0YkbQCL0Mbm/GRJtR2SBUf+2mLkM138Rw7mdKLnq9FDCRh7n0is3Ecgx/R5GPC+Tax8DB/4JZfIF8sOJ7G9PQ+RYZwsF6/N3kj8/+XMrf3k5Lasm/WnyjtwsM7xygE4hdNPXIvGO4GZ8D5cUFUwMckAEeEGhpc19uAX3wWf1Y8uuE9SXUM7xR/cRGEjt+KW6GvY4rpx9eeOuKLP+9BcI+DmtcFPSYhQfEHupU91X1FpMKVMpZFuQCP8RnVzDLMFDUPyAvU/ADaDtB7oW3mKHqBdqi4JK9HOj8Y9MZ75OAXxPIbh6jTekKgZUOilzGTHsyC5QtUMtDtet3N1oU5a5snMXnxDHU/ajh54L1UQaZ5lvWD4zynvc3GamNXeftV5WcqxgRqoccM5akk1C7aBRYckYfN3YWq5sDlVP971b5P2QZgOkD56PBr2hpiHK/YmZQKqIIHZhhER95LYdzDylSaFcoeyFu5XlVarFeI9Rtw6UeVKajuk4/C2sAEKazAag2f1vGhSV7nyWkRVJekRdoEHfN2u6IDcfk+6Xh3wvmS4iMljsmW0XYhYBpbyB2fqaty2bz9M+jvJTmvUWRPh6uPpxtR1sj0bYwdsZWkHR9kejep/QNQK9+41ib4iFk6s8Cv59zAk1kJE2TY8gAqgw4Q/1lQqG7EYctYtunLlFz0kromn+0KJ0J/xnRmEErOHg9Rm+xnHy/XZtBRiFzFVZQFkWE3OzovRUG5K4U57eCxOT1fc89PVVFSfL1umotEorvK2eZLKvw5jmfOQrcdoFsmiWzMTzvgcmGxT8dACgW/InMlW1kaOSIcw0nVsqA1aUmSmCZVrHhn1lILZ1F/VYFovyuwg53OQkB9YZAwHiVMDLQ+Bdov14w9GnDMuCkIN87ZzzlgYy8WRncJ05tzgnydFw1Zce3Qb5NxWCaU4dKFPQZbDXWqmnxZ+MFeYZHh8eQCS0KO4c8MhdbymA=","layer_level":1},{"id":"80b25616-41fb-4f9b-890d-e28a715dd75e","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"基础LLM模型 (OpenAI)","description":"openai-llms","prompt":"开发关于LangChain中OpenAI基础LLM模型（OpenAI）的详细内容。详细阐述`OpenAI`类，它提供了与OpenAI传统的文本补全模型（如text-davinci-003）进行交互的能力。提供代码示例，展示其与`ChatOpenAI`在参数和使用模式上的异同。解释其在`langchain_core.language_models.llms.BaseLLM`接口下的实现，并讨论其在当前以聊天模型为主导的开发范式下的适用场景和局限性。说明如何配置该模型以用于传统的文本生成任务。","parent_id":"7042428a-e443-4f41-bfaf-1704cb09851a","order":2,"progress_status":"completed","dependent_files":"libs/partners/openai/langchain_openai/llms/__init__.py,libs/partners/openai/langchain_openai/llms/base.py","gmt_create":"2025-10-26T11:33:05.150891+08:00","gmt_modified":"2025-10-26T12:04:23.488649+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvM7Bk1XfuY9S84g+m6Sf6Dp4HfaSYc34pNZ+kFaG6ovT/gZ1xAtqY/6QkQz82asHDXVQTEmlWYqghGOgIo/GIuygFk8LED5vRgP5czPESEJzJ8Jcm7uCo92bjTPxTlreN3tAH+quIftCux0dcCfYqxC6IKsloqdbhdMPAdzOD3kK+JM7VEwq0W6Mo7uqTsucqzeqKPRMQjcvLL6qooiOKrsaRRXPTl2NODvxA8aeFzA7wnKObSs/GsnBx9Q2WXfER3ymuKtsmIaxRr9uLDv83jIhICyzbg7+1/xLOvASxq20THkvhfFVETc8LfNXIuIuMQWPO02G99BkjYxImsq7AhbdZj3HwbiOCZYwWsYzL/d793+RJn3wuRh1i9IMms5c6M9b1Z46M9HAU225+XehF5/3fGvgTFI9yXYgJcrRA10WcoIehIiBMkMhsBKHPoMVDJEzjahjAOcRwnjpy7O9GujML6VcBA6bpR28Z+6QiFLbQiYcLu6T+iSr/pNO/Lsq2ukU4oobDCZast0QtLroB9hGVJxbcnAVf21yeD0y2HOa+oRWwgJSYfpbZ4nsr9ePrSFvzzHFsGUnitKiLkfh3VyWgZL4ocgn2WpFGaEk7P/LozQifLOaZfqMgqtQgY5aRniD+1Ch2fiW+oOwXAZSAk/iguRCmtgHBmK53ytnmcW1Bz8ODMIPx4YCVNJTFBRjmnJcGffa0K/qTc77CTKvz8vMUmvic/82hmip22aVRht2tP3R+7pcRlWjwVgEYIC501BeYh7dPXCozjCF0ovwUsdZgzcTGKiqol9a0xdm+Dv3MbLqzlr+wh+Fe20ldeEXzOGdqbUgxAgsVwZN8Wfbr+3Wln3iozQv9CQXQ7qg5nwzAywl1zkursRVxhwlArlfeuIfzlC27HNF6snP9OeDfRfqtbDGA2GOwFLNJygzA+KDQlFDKGwP543L3S4drvS6jrhTwm1zyZcR41VIbHWFv+qY7h4hBC/Nlk7zUDJ66V2eeTRMbyqdy0cvJEJx3Vs0yRYkVhpnSQtKOCPm/nHJxZL/POd2+y4152vX0vUhUupkMPMnsa9VJ9LIFWB3klQ3DjSYF/jAafqEYOrke3sob44NNvp1gP0Mt++k41rteIbX","layer_level":2},{"id":"cb531d92-ebb5-440f-b083-fd900269d60f","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Chat Models","description":"chat-models","prompt":"开发关于LangChain Chat Models的详细内容。详细解释Chat Models如何封装不同的大语言模型API，提供统一的接口进行对话式交互。涵盖其核心功能，如消息历史管理、流式响应、系统提示设置等。介绍如何配置和初始化各种Chat Models（如OpenAI、Anthropic、VertexAI），包括认证、模型选择和参数调整。提供实际代码示例，展示如何发送消息、处理响应以及管理对话上下文。文档应包括对不同模型特性的比较、成本考量以及最佳实践。同时，讨论错误处理、速率限制和超时设置等高级话题。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chat_models/__init__.py,libs/langchain/langchain_classic/chat_models/base.py,libs/langchain/langchain_classic/chat_models/openai.py,libs/langchain/langchain_classic/chat_models/anthropic.py,libs/langchain/langchain_classic/chat_models/vertexai.py","gmt_create":"2025-10-26T11:33:10.896789+08:00","gmt_modified":"2025-10-26T11:43:35.134394+08:00","raw_data":"WikiEncrypted:6kzquoW8bVAAgKgtyMyrBlIL2q+L530ly73PDC7JvR+4w0CG/uH39PwyBfVWeJTXi/ulfyqlLb6SdoSa+IzloPNJIE6Uyqt02b82LxRJ5RzSyuisA0AOfxhpRpCBxdJfmZcYQr9xDA2Eq6ixg9Fg1fLeoVxgC3+cfyDtOR3D616miWZaSj2q/CyevuTk5ttpmWymCpHt2Zr54IRzlpv5vKnIVQ9rveVmHUXfWNb5+g41A/pWCmIw5uZDuMobxC60Xzwkf7DOWFzRJQTFfHv/x57juWhXCeFuIR/luIZETOHBr2QuQ0e/d8qKMFgVf56yHsrvAqGSCjN8ZRb+jgo7+fHpGO6MvQln5qkwQRChsO44R7keRTiAnOuifyiXIfvyZQKtRwU6tpjO1p1X21y6ZiSPF/vGH+WrVlbUwNeWHJNl5evlSznwW+9wL+Y2TIpsbnirp8zkKIspM2yVCu0vjee1jo2aZS4bNnPHFlcSTA0yS/jqV38DumBtbu1tfR7Bqm5vqBSC+sFKTRe+IZR43zn/pHu2iTsEabOlJTOKpnXz6CpDgdZqz223PRnKhdKJatv//leKOwW9ww80rp6E68CgPt1AheAl5SggE49UPcSHfGeRvuHaECixniOquCqNKW73Dd5PjDDM83jzgYLm8AHvH+2OwSW7xsItZmk0Hw2UjWfW6CMvpOcOClB4DUN8W2NXb67IAeusnMThzcJcpIwpCo6xYxL5Lp6ZRg2sLFphwZVM3TNACcTb+UGLrGhkEuMD7thuLWpNbMFvsaULtZ+ebimiXZy5NAqSyvpE4e5PppN3JsBm239OxWXmUFhFGo8h13LmbiNgY4v0l1+UNH/GTCTwNXWpy7UmPHogB2pwFE2qsjD29BG5xwUKRc1G1g1JfMy/1dh1Uns5Ss2QSxP3pObn/kZikmhUSbWzcaJWM4Z3/vgrDp2M3elWtDvRD3jnxqAvzSgAoJk+ZUAAhw+HFF4A+yB9c0UlgglbRdLC7j3+4ecMY2d9UokeOrVno12Z9vg5gFvRw9blVR9lNEk2av51XmYLNKSXRwgG0f3b70flFtVGmNKsQB3F2f2WXAKqMWIT95Q02lflQsjZwEqz9IT97SJraVDSgeYPWTZc9SA9ITOitzrWqjTQML7ShB5OnSElr9kkdWClrCLXwzTG9nG2qYBw4GWK4Lr47Cy9simti09p6L32uRGyaljFRVnipj6aaljgV9/PNddWj4+m7W9FtyPnk1StkywXDEyMkne4/ZpYkwlS4RDTy2d6x2u0pC7m9M+ky4PC4jfePckD4wrC3NxTfj5gLDXp0Dn98qbW4WgEPPu+WQ1vScy1DAJXXlgmC6cAgLpVR5LnTPRkHVFoCfA7UiK5OPcDVtZIuXb4qVkAkVZAIFedOgXIqDwYPyhgnfop0eteg68ERFhJnwAvYuYOSjuh4eDry+YVVD8Lzy10/NQVRTKcML8NSvN+ct4db1iOwOCtg6GlzRlKnNz0yUhhBITQefo6qglc91R83/Lu8HYiZIAxV0yT","layer_level":1},{"id":"92e9ec85-4e70-43f9-b3f6-a8a8a3b331ea","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"RetrievalQAChain","description":"retrieval_qa_chain","prompt":"开发关于RetrievalQAChain的详细内容。深入解释RetrievalQAChain如何结合文档检索（Retrieval）和问答（QA）两个步骤，以回答基于特定知识库的问题。描述其内部工作流程：首先使用`retriever`从向量数据库中查找相关文档，然后将这些文档和原始问题一起传递给一个`combine_documents_chain`（通常是LLMChain）来生成最终答案。详细说明如何配置`retriever`和`combine_documents_chain`，以及如何选择合适的链类型（如`stuff`、`map_reduce`、`refine`、`map_rerank`）来处理检索到的文档。提供一个完整的端到端示例，从文档加载、向量化到执行问答。讨论其在构建知识库问答系统中的核心作用。","parent_id":"739017d2-068e-42c0-a018-28dc42bb17a2","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chains/retrieval_qa/base.py,libs/langchain/langchain_classic/chains/base.py","gmt_create":"2025-10-26T11:33:28.703668+08:00","gmt_modified":"2025-10-26T12:04:00.363631+08:00","raw_data":"WikiEncrypted:3166zDJNeEBGH/o+3+SHSs8cx7kC+SWyc0+XyhstcO92oSpFhkkxSGHI9YDVUaBDqrjJEpEamFGYRTyPyYCNiel6D70xtQzFqW/CPwxJKPr/rx9GzD00bPDRH8yMXu4S5e98v0J/FUNRJPMPlZRx5efCGD+CsTyGqKXjSZTUdKjEEpDJnjKmrsOOad8nWf+qVqwItrXd24Mq+dCMqFKVvhwJ/TN99ZdEsM67LgXrfaNbfoJXWwfSFbp50jf7I80elBr6jspkZn1AO25naT5D/hEFEIdB20aTX3bA8LBj6c2JzDcJdkWOA+2FW2F0SCqEhfj+jP6fSzO8xhb9h5Za5FpvqeuUkNVTX8ygBFckELS77R7mxGj230/JFhbrAohf7Ar/BhVN9ymiRH8F68l8HWw8QihVJOiyHh02FP2gs0laap62z6YeEBdcnymt78bJ7D6x3UbpwEOkGGYjBvAO+Fe8kDgn+hjFTGrg+iNlNgtOporJ0Trjqd2yhAjv9NOFHVtXgMU8nAlOcVZtawF9QsH4ohdUkDYOUg5A8zyB/YXCkrUuuA0noSc481C80HAis9w4XAaqjded3fATwxWcA52nGnEwsQz0fz9v8SGgmUSIXDZvlB5JIS+7hEZ6HTEzwgXUzLnJDWsEP/z5tmoI0TRicYqytS5MZVFZ/lwSZuOsSHq1W8ffvbeuyarmgPs3MrSy3N/nPSWhGhOnbuHIGtOcZUhqovhmTBsI+nUQWeYZdZhUkodK1EZqu8M4HBPqc3xc788t1/CNRKAJvKhempMw4vt4Wx/eG3DmiEFFrZK3Dgp0dMApP4mpgwvRwJTVOUHXw2Msb6JBKalmeLsVgiGyW3496VVTdBnS7QYjlQwo93hSa1M4zclposoV7RqYzXkPrrnlTl9Ko+x2a8x662fsFT/W3616uXowMGQ00WCG+lxzoGxc+I3Sn0AiMX+RNOdHoHu9k1S+CGTUn+rT2Q29AkFsbqbmcrxtcm3QCSNCD5PLuxbyIccIAtF81wpgU9Wndyyzm01WxsxBxKgHUwpElah9aj80o5B8E8c2hJB7JJcQPrOcW0Hfvq+13jhaHaf3ESTRoA0w9ErHlOzYo0vkfy4Gg6Ydb58nteMpO9P9Vi35OT5G3yRuNVvH7R4EuP3/Vd3UohkUIN4Z+KWEY96MCnGoi7ZCrumDq/0DASHOTDVjVE+OYAR2SXJR/XEp5zlwcea+ewK1a1x8Ct43QgG6pPylw3YiDRFJJvIsx0wpJB6bcUC4wwoTDp4EBSqFOvg6DegjLR6MjcaBfkQfN6uIuE0an5YZxjLk9OKrhIE+N2S0ow4qni+ZoM/TJIi5JPRRCEDKDsag49snsWc4VqiLlSueu8Jj0Y2TZfNfek333RAPHi8IJGBUzKtnQDhkwollcfF/VtYSH9EbPH090g==","layer_level":2},{"id":"90e2cd3d-f7e1-42d8-86c9-8e4dc95feda8","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"VertexAI Chat Model","description":"vertexai-chat-model","prompt":"开发关于LangChain中VertexAI Chat Model的详细内容。详细解释如何通过langchain.chat_models.VertexAI类与Google Cloud的Vertex AI平台上的大语言模型进行集成。涵盖初始化参数如model_name、temperature、max_output_tokens的配置，以及Google Cloud认证方式（如服务账户密钥）。提供实际代码示例，展示如何发送对话消息、处理响应和系统提示。文档应包括对Vertex AI上可用模型特性的介绍、成本考量、配额管理以及最佳实践。同时，讨论错误处理机制和超时设置等高级话题。","parent_id":"cb531d92-ebb5-440f-b083-fd900269d60f","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chat_models/vertexai.py,libs/langchain/langchain_classic/chat_models/base.py","gmt_create":"2025-10-26T11:33:29.986834+08:00","gmt_modified":"2025-10-26T12:04:13.603255+08:00","raw_data":"WikiEncrypted:i6iYqVc6dVK/MhxEol+dRg2DDexjN0ZjIP90nTT4sW4LUGiWMocCiU0rvrwyla8xcM9XR1/v0ya45B6qQKlyc4La9+PVkFaWrFjR8DZO/cx3bDfYdkgukZX8vWNRPx1z3LRUnTjo7DvwyXxS7eOAkx/GEPVx4CCa4f5uTMo8VCGLy4S5O1W+QPcqckKwGHbwbi8icLT95dEY0AvkIrRL1DULKXzW/SLpK0L3r29Hk4evOweBIrIsX6RKEhrNvZOCTfguURXnFJ/XzeJ+ctc67U6XNt9ZjDB3J4pouybaFHwPViog47Y+NY4SRNNGAGDMvRMo2IiA602YdUa6alyecs77R5y/2Jss/IzVOetjP7FY7g4/eLHG9zZsvyzEH16mQUKZR8qRudgDEqD6wmQ3cIN0GGEnlr7TT+Gbkj+znDG2PVD7A0CpbRfq0Sm5R+gNCNO+7knLX7M6IVeug8tKWiK+HMS5Fhl2YVCeTsNtHMdLKyBCW/BCG34R7RkX2AQKQkvNKFWnSWYG1PtfCL59BfMAtFAA2ltJJB8EL+2+xx1xZGWr//jrQuJXp9gyH+qmAswQM01u3CezUpupUBfhR0KOSGRApEkz6ev77pH0ytdLLvLTp6quFblqSB+yWhb7teOvAoFrA+H/YAygzHUkLMRydHykZa2Wifm8qpnqWvUVP5/iV9UOQy8doUuimRe2M72tnsoyMofPgDbCzcPkzlMOmeYR5+u4I8xZ9fbYS3BbeAV02gfNf7SIgHcIusF/4rXl+85Qdol3ELfWjxAPtssL914WtFHLPSNPSA+vrpeHdfaOPzkqo+bQKpVZaqLddRnh+c5omtp2uQhsu/h6HLIkobqVpqC4NXliD0yB9lKAx3cam7fw3MgvzJfAlz8KdI5kyP5OWqjsjMvC5ypIuq++4pu/2xyTjUk0Kqo3tPDjb5FVVXCtSgg2BUNruLyZ2wTvbTI8InITfx3PYXBrXjh0lSt4jQx+5jZY9j8xSUbULlmzspdLBrel8ssO3/EGVARxakf9QPUpKqBeGEXYXcBTt2eXPXuOs1g7h4epz2N+oqbqxfhZ9/3ELlgPge7gn0Qc2zkpn7FCdqErNRzsLkilMJ/kMt/3KLO/wds0INm+s34UJXRhGSOdV/WBLj/ChwDjQxsUs+EZl+eHDpcfZV8Wdax8Y8S51ABfVSKPJDzPD3IkRbBJgXU/zXBABKgmSxDkYxvEMrWW8EvYm2RnqCstpZS573fAauqyk1sLs+Q=","layer_level":2},{"id":"dc92fb7d-dd37-4463-bd39-ead97ef431f5","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"执行流程与状态管理","description":"agent_execution","prompt":"开发关于LangChain Agent执行流程的详细内容。深入解释Agent的迭代执行循环，包括如何解析LLM输出、执行Tool调用、处理观察结果并更新状态。详细描述AgentExecutor的作用，它是如何协调Agent和Tools的交互，并管理整个执行过程的。涵盖执行过程中的状态管理，如中间步骤的存储、错误恢复和超时处理。提供详细的流程图和代码追踪，展示一个完整的Agent执行周期。文档应包括如何自定义执行逻辑、监控执行状态以及优化执行性能。","parent_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/agent.py,libs/langchain/langchain_classic/agents/agent_iterator.py,libs/langchain/langchain_classic/agents/schema.py","gmt_create":"2025-10-26T11:33:31.886841+08:00","gmt_modified":"2025-10-26T12:06:11.492889+08:00","raw_data":"WikiEncrypted:+R68usAX28quA3KS9aZo9nP4kEgAOBLRwaBcylVxvnEKs3xU3pQOHExi6TfX0nBpGGPtWR/U+geVZyF2tB6kWs8tU9YNDLyOwM0ztGWBpVVf8RyDBbFkFcw39tmnxP4YDO+LQbLTYGgJp01qwYD0ppHz31o2uEVfO4/euWu97+Prm3qfS5Wqu75sKEwqU4pprOYOxbGiwAM9bcvBpoeFqDj1hNwRIiJbTK0OB7JnhO1P19DGJzl/RGfuoiT2067yUJxldCgplBa/OMvWPWonEakQj7h8LBVp5ByQQT46q8FQsPrLWur4C1gABpviX7klyxbJKMWG3StPyDSfMdlIORDB8qh9Deqt2njvVN0s//bdqtg29QTGWbkfuItdTlr32HZ9EfnNuJKjyOVRrV1rBJvW1i1VJH9km4Xw7QHk8jm09GcFXaN6oNoZIC4//kJ1VLf29bS9Y6CAxE3PX6jgZEna0zsJ0FG/JUVrQALJum2+Z3AntpfgvnTUFx5l1J8HUb1sKQciWSN+vREI97g3iIkTWYN8ggKeNzL/tf+hbegFyBsTUA6qD34OvbSPzGiqGBTiJhL7+FVSZw1bD/zP6Rx82gkwTt7tbTkp5Y2+qs7brx9H1i3iLB/Q4Hdf4jZ2P0SE8f8T80RbqJWczEoM2HswDMYXMKq/s2FsonGX76gOdYZwU7M0JTW+TRbiHfMwZh7c3HS+Zo+ypgQWTBuGd9MjC8EvHL7qr5ZNtf94mxgksZ9NTn9r5hVpFbFhGT3W7lWpoVeTsrLOz2s6TXX4Sz0/FQxCxsyckTdeV2M3I/c7jPf/l8JgYYFQo4Jq66CSqrRZo8gRq/DsA9dlORfnhoRXJaHVYTtYRk4eLUeedq5+dI9QElohcAGVTAD0Kx2oORhB6R8AZ/335sveaxFb8i+Ro78B6lE06n/vhRGbH7d+D7Qs92BmPYTXGXuQ/0No/QoA+vyfBFbPsIGm9sq4o90uiW4C2XrsIatGdbcONdHrMGQtYYIShhiwHoLZ8vNTxIsiCvIIpJnK3X/PlFEqFLUuJRn0e/qrJts8VB+1xvTOmp1vdtf2iKRRFyFO3wNVWXwtg0V0YnlXdElAIBlV43SfxVa5T4ui/gr9fnhGyL82mm7y+XVLaE0BgiRG5enFV2hQgdtCsd1YJNEbPcTD5RTeGEuwa7wkWx0qXh7lkAw3xnqwcwb6fb2F6aEnF6YtMB9M7vSkVSUtcXsk+7AeVgZ2J1KoBoChmYqZcyqMOo2PTxxrVwL3LuSa1tCPg8xh//O5954WLQm+GZgtL7b2IhnD3qp5DK7EnqEYfUyTBwg=","layer_level":2},{"id":"73f81e67-0b0f-40a0-b371-1332935aa4f7","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"SageMaker Embeddings","description":"sagemaker-embeddings","prompt":"开发关于SageMaker Embeddings的详细内容。深入解释如何使用LangChain与Amazon SageMaker集成，部署和调用自定义的嵌入模型。详细介绍如何配置SageMaker端点、设置IAM权限、管理模型版本以及处理大规模推理请求。提供实际代码示例，展示如何将预训练模型（如BERT）部署到SageMaker，并通过LangChain进行调用。文档应涵盖成本管理、自动伸缩配置、监控和日志记录等生产环境最佳实践。同时，讨论SageMaker Embeddings在需要完全控制模型生命周期和数据隐私的企业级应用中的优势。","parent_id":"a70dfb9d-0144-4270-8d72-8dee18f10257","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/sagemaker_endpoint.py,libs/core/langchain_core/embeddings/base.py","gmt_create":"2025-10-26T11:33:45.560668+08:00","gmt_modified":"2025-10-26T12:05:24.498509+08:00","raw_data":"WikiEncrypted:2mmXoXdB8fgXTJ5wayK/8eGItd9qdyzJf9dtYKStt7ozf8fOccfTNWXpAcO5jXonpXjj5oVaIZoUW2dgyaHnG40fOIdtVRzThWvHiVvXjdVPlvO140CIctfFv0yMmhxxZ/dGT955T4uOjnZUQWZLW9P4Zcz/cWNPordzpzexvwj9jiii2xFVz7ealLR5E4NUR8utVYlvRTSPZ6OoTEXnNn3dIrfGJ3oWNSLTEeK4mdddkOFvDlWgDtkFvmeg6LFuECXXs65Qte/e8Ary6jKkh09TA+BeHPmrIS0DBUrBdAKA+Yktpsf/DgIkhXrEmUEWZQ0Hr6oBJkphvxZBzi7ew6j1CrQUAHlDPt5A4S2Eiaq/4wROEpH3EwwDWmCQab2ZWpjfOGWRBO3HjOFCOaLaxoo/LH2ewH/Jbp26EJGJaikT7cc2dY4Xur9pPnICo5lH96Ks83Tv7Iwc5SC6IvBbNRL45g2SHDsZewYP8Wbb3hC2MPN6tdqhuEdRxUSYhcwcmNTY4SBpcal30OxVi5CpJbBcMvX5A3favPucXu/GDHqj+D2u4VCLGxCUypWnNwzInVrz0qbBDD29/RPaKAK/x8N8QNhahKZ4eBS78UPn8gENYIqcF0bnnaKUbZJHHEYJgMFwc7P85I6ZznrSpp8N6tKEB56A8tApUsfGgLarC+8kHfMwV68otdCgxtK1utNfSCrsMLWvhoB7buBWLUfGv0r+BjNUq1XSZFCQKedick4dRIEYo9Hsg0kisSgH8uWTmFJQSFyV2v75K6TJ/spgE5fO/YdwXMNA5U/ConcpuJ6ah+hvLt/N/XujdBNVQfOCHyYfvE3z9WJybQ1QnSC4agljgkAmGQFiSN7VYKgT577tcon2s5irdn1lrRcTFv2qdka1ccGO+PvTEKnUT+e7kASwDV1DxyWS2ahQDP5P/HP/PAWPgd+4qKJWWFxTez7DNihhIpI6ManZmlEtGeqwSWJ3ZETZ5T8E05mKG2iLjRhjn0l1ozIrn0dAtVznb53JbhWxgTx+LLBMdH3mPUzvWlDhDEwh6NUpZFYzBnJi0UPOzXRGN/xUNZnFind97CIroXvIevz0Qe/1MWnAbaV2xitACNTH/8qdLN6hKFfckO5mvq0sRhmSbsirvuRBIZp6+d14dnYsor/99n1GZmEaXmMH0xZTPeHMkkjNE3y2t3FUUqPekfNnov1mQEFJsLJxxmUWoGvRFDrYwkX49Z/ugs/Fm+jn2ix0bQCRF7nPMug=","layer_level":2},{"id":"37510523-6d87-4f4f-b6b7-df01f6601638","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Anthropic LLM","description":"llms-anthropic","prompt":"创建Anthropic LLM集成的详细文档。系统阐述如何集成和使用Anthropic的Claude系列模型（如claude-2, claude-instant-1等）。详细解释所有特定参数（max_tokens_to_sample, stop_sequences, metadata等）的用途和最佳配置。提供完整的认证流程说明，包括API密钥的安全存储和多环境配置管理。展示文本生成、长文本处理和复杂指令遵循的具体应用示例。重点介绍流式响应的处理方式，以及如何通过回调函数监控生成过程。讨论与OpenAI模型的性能对比和适用场景差异。","parent_id":"36c35786-2770-47e6-9a89-1e55a35ae360","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/llms/anthropic.py","gmt_create":"2025-10-26T11:33:47.079448+08:00","gmt_modified":"2025-10-26T12:06:13.970188+08:00","raw_data":"WikiEncrypted:+iJqp7i+B2deCeCQqkHc0jfbKtU27CSKn9hHpfhZMpLAIen86HL6G3TRZ9lmCDbkF6HsTEryidqpMc801t/Ik3KtGXkN45dau9nE7F2otAc18SnnfvWolhBgrayeS1HUI0ljh2ngw8ahyigvFr682dtv1fcmwvzZUltN8lRs07sXYLdlOQmvNMGf32SNmxIY2v9/jY+WJoqnuOaYBDmxnz+LgCO1EWFhFTWkA2rKK1D4vuak0YpN/l3v2uN2caZpYhcSQV+8mOtV3MyScZ0DsNz+FN+EIbfw3fS+8KmwkXj6YZtM5E8XGEyftMEHXySqyyXdXSA3VVT6QSN1Xqev74033CWm9Vfzq3JJQgSgEljzpFOp3dSy/jQLFKCa0Pkv9Mfg4GX110GIClFTCUypTyIP3tpXL4icJvV5OWOnr90mTqdtwMQUYBsFPmUwZnGbzINGWM07M5UpzVy+Xxmct9b/BncGXCkZhwAIvWbRVk5vmzwtrT22WWT6WQIC+mhtuStHh2nYc7EDSUqtvbnFx+IG6mxNWONVfkCEK2UUM3avjlIt7DB6HhLZxboyJHrpzDFRCUk64yCjRZ3iG8XBfvPzvswt8RSiPe5zrtZY5Ams5/di7cNg44vyKGf5Bf4ePKWTbxpd2OhibBVDsify2t4T90Mt7T0g5JAskQMhDuMwpiS4h2MFr6fWjLhBjaR022gPBCUgpNva6sGeg5uv2/EwXlhP46qfmEFa7BOMpfXTsV2AnHbxgFId0tsxdcqCUNoh4xH9X/OkTTTx7MXZZh7PnOfvbYqOw77hMki6SXBElURsv5UvyEx7k+X+qoF04xjt/7u/YQ2lykJJSX56f2wSdTkix2DWmx6z/c+jQl+MpZtCZH0Tj+OEGPfs+wk8ClCGfP90C8s3mp58vjkB65MheLUuwG19KOVZi3saqmAmw16j/Ai3J0vKST0SGwB19rN346QE1HjHgJqJKB/34xonl/LHHV9WEQ9XyqLQKYvanl1Mo4iTPGD0Ft8CzhrXsYvPFpLPEK40btRkzXjfzARhYNTfBscuncLQbySNcwWEMESFVNONyeABtaNpen+jwRi6wlxpJCgyZTalq5TiYA==","layer_level":2},{"id":"0a06588d-8c0c-4bc5-a1e0-59602dc9be2f","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"结构化数据加载器","description":"structured-data-loaders","prompt":"开发关于结构化数据加载器的详细内容。深入介绍如何从JSON、CSV、Excel、XML等结构化数据格式中提取和转换内容。解释JSONLoader如何处理嵌套JSON结构，CSVLoader如何配置分隔符和编码格式，以及ExcelLoader如何处理多工作表。提供配置选项说明，如字段选择、数据类型转换和分块策略。包含实际代码示例，展示如何将结构化数据转换为LangChain可用的Document对象，并与向量数据库集成。讨论大数据集的流式处理和内存优化策略。","parent_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/json_loader.py,libs/langchain/langchain_classic/document_loaders/csv_loader.py,libs/langchain/langchain_classic/document_loaders/excel.py,libs/langchain/langchain_classic/document_loaders/xml.py","gmt_create":"2025-10-26T11:33:47.27565+08:00","gmt_modified":"2025-10-26T12:06:30.922905+08:00","raw_data":"WikiEncrypted:LSudOIwrCMRMYcYqSExQFCjFVHAR46NDzZcWY2RApajPW/t251MRS0xEwUJSghtF0dwM9pk9be8lP7wkSxXAU70uArqz7XFk6GiGOEvAd5siTARaNuarwAvEoHK9nvkBPO5dJif3ZUVGV+kFYkgQX80lG5sbpullPZP0TamCTwxh1eiGmPhdEC1y2c4tkY4EqB5bH199HmURrUnw4b5ehQn2U9Zlvz809FfliYZf54wVqi5z8f50WAHRNMuBuU0qotITZJ8YRDt+r9Nu0gmL5zOoVSAk3t/seiSO/vIzogjhS822zVdWt8gx/iv11wpa5PSLfNFApY/qlWyyrTinHltyHihzsAsT+iUt7MgLaLnFDx8EVWMFav1HAefn30nCijtfsry2j55hV6vdCkovemHPMQTZ8A9niaSy+k+hvKsYx7i4LtjoE1j+9kl+0HS6FOuVS9G70gVzMfmKFS09YOptHMWgt2WlNXj1CWNZY8jfNMC1YwSlsqBeYF6iYLgblvlkDI8lMmuCf68I4TKuZU7OM7wJNeZtcaE8lTZp3sfXmnp/sGycFOrrn/mSHi0fexffjVdPYyjPRnw/z4+8n9zfW2SlIOMqiqbAV0RU9kPiXuDsPNok+a58vCgK2e5gL7JKCMssmzPZXicpzPUT7flbZ3MgnamPLcxsU5Hi7p7Px6D7oRDQ9LrRVX23AvMaZCCkEAr3pMdhXMc6zevy+uTAP/0fNtWm4kD0H+aXucKPomquPcJVhTP0Ts4VjIoUSBEvNNiqGFSAo3LS1I9l7lgScSSMDaNDD3iS5U3b+MbC3Lhu59vJ+EH7fbtnJb+7+CCas+992wkS0Rqvv+98Nb0WMYxEPzjf3MQl3ByXnKa3aNpwIjLcY1Bv965j8eZdnTz99EaPnrgB49Kdn7h13c6vBKdnpHAv0WoNo/8pgn+KBl89MdL8+UOFG93Fb76QWv8HE0+SSiZjKUedI1GcjqdTgVuhDA9eNVJHEK6VSSXzyqN8Wb2T6d9Ky36Feg6HcrHOQ6cgArb8o8Z27NEsjjnDDLnwSo5CfZi3qcJmuSpMDaSDeUgrosDf/YVXvIPENrqN4XziRVw6hkjyDgbzRky8wa9/LYg+Xut3wmgkUxby94n+XCVetlCOxyi99N29TI0/6bDxPmnIlZ6Nws8BeLAzEJVc5OjpYZGrjW6y95tw60FJNRHxir9//mrD285pQFrUJme07Y7aZ2mvhIODy9t36rvYjvqb9AqtlyxnQE7BWfpHgydiTHXQSRuMo+0MzfaeAOuu/WzLYavJMuKrXfoiMZtVuJUQJh2KViQGHWcXByTGJcKtUdykRLWwZM1ek3o1/Pl6OmpMmcfMSHdS0P//2zTKQtSf+AT7fQpOHZu8t15RmIywgV1yZ3oRMriM","layer_level":2},{"id":"645afb80-283c-4ada-9a5c-39f0b2c5b69f","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"VectorStore Memory","description":"memory-vectorstore","prompt":"开发关于VectorStore Memory的详细内容。介绍VectorStore Memory如何利用向量数据库存储和检索对话历史，实现基于内容的相关性搜索。详细解释ConversationVectorStoreMemory的工作机制，包括如何将对话消息嵌入为向量、如何执行相似性搜索以检索相关历史记录。提供配置示例，展示如何集成不同的向量数据库（如Chroma、Pinecone）。讨论其在处理大规模对话历史时的优势，以及在查询延迟和存储成本方面的考量。指导开发者如何优化检索策略以提高对话的相关性和连贯性。","parent_id":"950a5856-cb2b-4c27-8314-1f5789d0f152","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/memory/vectorstore.py,libs/langchain/langchain_classic/memory/base.py","gmt_create":"2025-10-26T11:33:57.447802+08:00","gmt_modified":"2025-10-26T12:07:41.053843+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RF6xcFFpYPYPxnbEjTvUnWOMhgBvxMyV4QFkdtD/12LcwGJRgRmnz2qQBpmcm7LFXaRxzbm3t7+fFNJAc+xI6GyKfGpzKVvVR9FPJPI5hq+MvFnZBbyuGVRwKsJv5S6gOLhE0TUa9yYhpMxnT4voBWjUFoe11SjmN6Ue3x/i1FXzuIjQaEgRVbSQrH6F3bplvoGdjC/bwkdQ6cL5tBAUVcxUp4+08DoaV4TYLustp/Hcz6SS7unXkX11IiTGOoRyROFaCYl5egvlUrb9DwebbtfrJ8Q23OPT0p5QnurpVxSJcnaqFCxIXBy5H0ZU6zbZrG33dwiL959GkV1CYqNtECYJ2FJj065BqGoOebjy4uQ80HIPHIm5AkJ6vuQTTVYvV7mihrEHTmq6IXA3AIO9MU397CeDv1AXtcTtQqMfm/uBQZZ0AnMEtYV0k7v6rOATeors6tZY8JHi/kXI37rTL9yYzGdLA2b2rdxYbT1zsT3zIfAz0JlbIy8DFex2CBLaoZ2amCu9SJ5ttiKiy80P43UCbFUfsOSOGO5J3DPjTWuUuaNBpdr2rxk7DFhHVBPzPVkNZwmgvfoq8bl/WhpEGbhVBTTxfuBgSDteWH5o22T94YkrcDEmLJ705eVMk+WUS+6t3iSB5NoSgDBjnOFNM1nRgtg+HkQBcukbDj5J95WWZyhiJ27vKxiEmodBI78nIW3+mmk9BKemPHzy3OyC+ADGOqSdGzgbqryoScktolNe+LbjYGaURlDp4XqomostuJg8hwx+G2qU1LWdIBdh2ZnYmoBj8cY0aIPc44GL4MEhIsOlznUMCUskH+0c/1Sca8Dw7TUN9UDJW76vFdZuf/JOBKooGLDVEF8fj2Jt/1mag5eBFpEhDNu2epmoxl3WyNvwuxZjzuRy7xfVCQ3iVuh7tgjhFgvLWuTIYi8DxtfRMpa4aS3trk4H6P3UduqGumLpkZoR3ku+3yjIqYKiSwpz11B/rbSmTenfBBCr/Wfcrgw5kJDgHrvqEGgsSSxqvAFSAUN3joHOpc+eJQIoYmMTfSZsG8mjBICaWPKmdB6+1Po2N/MzRyxVUaChTAl/b3eFUndzAXmXNRg3FUbbTXu3GvDpBLyfj8IvVoOHVgXIstMAKpEe7qg2nCOBBY2sI7D9mId0h49InEhW0fygQcK79iBildpCNyhBheq6iKNCdAOnct2grtUFfk77a5DWBE0qFwVipVkQfyvhnX3Nvo8N1AYa+akCkE04I4nXPzZL","layer_level":2},{"id":"222cf363-814c-4521-b28c-63754e8a56dd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Few-shot Learning","description":"few-shot-learning","prompt":"开发关于Few-shot Learning的详细内容。解释如何通过在Prompt中提供少量示例（demonstrations）来引导LLM学习任务模式，从而提升其在新输入上的表现。详细介绍`FewShotPromptTemplate`的使用方法，包括如何定义`example_prompt`和`examples`列表。提供实际代码示例，展示如何为分类、翻译或问答等任务构建有效的Few-shot Prompt。文档应涵盖`ExampleSelector`的概念，如`LengthBasedExampleSelector`和`SemanticSimilarityExampleSelector`，它们可以根据输入动态选择最相关的示例。同时，讨论示例选择的策略、示例数量对性能的影响以及潜在的上下文长度限制问题。","parent_id":"1248f9e5-5ec0-4bf5-b002-ef59fc4259b1","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/prompts/few_shot.py,libs/langchain/langchain_classic/prompts/example_selector/base.py","gmt_create":"2025-10-26T11:34:00.683968+08:00","gmt_modified":"2025-10-26T12:07:57.550594+08:00","raw_data":"WikiEncrypted:ksrAtcRJg2reEV3VKCewme6p8G3cPqsE74L596cyofOTs89z0UCSua/ScQLquswDBfkfFG60RovarHT6dkkID89m24coKVB4OxWwyyITWc+p+NFOh8hfDU6Eeq1hqm+LoBLEFubARJ+hZ0phQrOr9IQ8031z+0kY8OywpGWPJPFYZCH893giMXCtvQUanXMI2F3ZftzIPisr5CJKa194I89Y8OFUcGDoZuVpXyq6/uPZ0AHX5e6UwBJnMhHcs3ryrm7EcqHtoL2+dLPuvJVosstMiLgDDwydb12yZsF8Oz5RDXCuKY2/WiO9bId7ICSbUN+9YaEYSqQ1VVoc+YL0jaeo4Mo/QLbmKLR26KPtsyrHz1j8/O7OLp7ToTQ1DcTZ2XCjpjnLzgDKnVCIHVI6IwqvBs63I1Xx2AiM/8LP+M/RZLREvTUiWqtLVlH0LdrkUOnrd6MyskKw4h0UqM1P0C4U1o9HbtikHXUAUQEwYP8xMkZC/IdrUtMNLOTor8eb9Y8/wC7VZV0vpFlGz/gCK+WwJYlrhkKC6i46l0Ox/s19gBjLCf+QHf5UDxJLL3gYQ+oZP5tlUvxlMLaZ7EGMohXOgxz58sM7KY/0PGTIck4HHiwz92An6MZouxG+iKM2gNMGaWwe3KmsZideckH6q2JEQzv+nqNcQNXDYnGZFBqhn6n6Ns9P/sq9mOy8EcXTl8gxYLntE7lne6kFl4WCW0+MXPL6VkCQ22cR8lTvxXvPUawqd1m9acfUWP1F/HU+3HcThwrXhRDdIy7om6XHDp4FknUBXTocRzHLKPMqgXfwDIHd16i79bjavnyEQZo/Ge1LUL/JUIi6rjF7CV1cIMcYADsz+zsoIRv4UZC8dePMW3BJO81ZsBoMcbhAXhJ8t6u8UkIyRcnKb4SX6EGK+u9NwhkhN9amooYHdAqI0AEB7yPHPzJCueLHdHrkK8EbeEWGNtea1jNFswUW23MflNKWNBhT1MU08zS8AHEQpV6xPo3GDxSsdZUr2BWqLqLQc3my0h3+1rX0mGHtsT4eRZehBSy4xE8ycYKllQI5JoAA+uutjul+pj8gnVlOnscbitb5V3r1zkG2K/sM3X3JL71bbBRSjMRapUpnI2x0EiLqShoKCkolftftPCrMwZzSQmnKbF/QfpYnTbYJAP/gEI6w7uTjixMuobrEm1x3K8UJ/XMCs+5OwdOWK3gaJhKG9v7nS8kmRjbTAHoz/6n33dvhqMdg+Rny/XLl0VgP/S7irk2b+Y4YItDVdeStjMfywqQ0OoWgOHq7psVbktY2GJ8YvHLQCKd/I7122IB30bat8cNjU/7w5M1pyU2GXH1c2ZqKKJBYdd7sO4fzeVRyJzF/aGkCsdtrgGfhCudowxK7wqttTQlC90Dfo+fXpuawr9fEYLMZk65XOD4e8nieRg==","layer_level":2},{"id":"2ac7249e-e61d-4e6e-8626-415b85794cc0","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Regex Output Parser","description":"regex-output-parser","prompt":"开发关于Regex Output Parser的详细内容。说明RegexParser如何使用正则表达式从LLM生成的文本中提取特定模式的数据。详细介绍其使用场景，例如从非结构化文本中提取日期、电话号码、关键词或特定格式的代码块。提供具体的代码示例，展示如何编写和编译正则表达式模式，如何创建RegexParser实例，并处理可能的匹配失败或部分匹配情况。文档应强调其灵活性，同时也应指出其局限性，如对LLM输出格式的敏感性，并提供编写健壮正则表达式的最佳实践。","parent_id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/output_parsers/regex.py","gmt_create":"2025-10-26T11:34:01.393886+08:00","gmt_modified":"2025-10-26T12:07:59.864165+08:00","raw_data":"WikiEncrypted:TnOqzIqvCLgwEgnvRj23BAsi/TB9lAMjsGKhwwHpkOo8fzuaUPFT4HKhQE8kwS4PjSHGA+vwjYWiWoBfJMLj/yWqAKK5RsTEiq8UK6zNqvuseJKp7nT43t60S1sI9ahibqnl7ddwZg9gNwUqTJQEbrssMkcrOYjrl94465IaVI/j/SqWB0bT1lukaqQWTWv+Kr+9VEI804OxOjB4lu45CaAKmJ0xNXOnts1QTNE3TnYCwgi1y4pFOgqbzHfpOi3tvNb4mkKE57yKUZxPrz4IL77N6/T1HRujjuTh28szPrkCgnhKs+9Hy5g+NEDQyqmmWGtVGBfRNFT6ctnZ30iuRvhRJhkCGZuNMnZQnKbXDfYMx3lDC96Nglqf7nYttOvPVb/d24g3ZoeE9GSM0EKzgstxyykGeCP8cZWu+vyRpMssPGlJ/AtQh9GmiBjIkEIXOxiU9RrLReg6uY2iKfeIqLE3hYILvz03ObtfZ/444QJXe07NgZOMva5GS9sIqeImCPE58GUYUn+6jStp7xg+yGsIUSjAXdli0abv8TsgiyZt91LH76W5Owe8ZTOIyIvv8kMcZtZ4K341ugF+CtTEzDFCvlA6ki039h1Nz+eHLJSeWZ/li+aUWMajd/kM4TS4lAv8S4v0eQYTt2sn8+k0/mHn9A3bkpXofUgh2dRazx5tcfFzBLLY0w5CeMgYd0PDPihWMLE4Swk8Je/JKVwSmwUreqrFB7cQNcA4ag0+9/roXH0uUlf+pKTn7RHsgAuHyAciVxpkvtaWTXAkFQa/QQ68n2tvI+ndsAucpZOyx0c5YktR1bZxVPjG/iaCByrzeTHlz6UTzToQKOvWzNjhUE7ocyxaOL2+Gtyj19Gh2Dy2zX+P/7WyTIztjnQ990GLKbcFvuO/UNCgLxtVav7dDOzbMdpw92SYZoz2NKAQPnUjBN4ar0ADJ0ZCWxDBoTUQ7qqO+CXQ+PkYDE/MVIZCZicpx4UowcFOfdsQYLpRM3njB/ThMa46rkKHPUKRwEhoy99e8USy+BGx4R4M9GaQkVG1bGk83XcFsXvl1U4BLICtN+gb1ekEULJRB88VUk4AfG1d/0iFT47zQyBXsROPi6wpYhkVSGIdStYFexLyOUDexo6ZBO+ABTUSRxufma4ve47YNiObpS7PNSMH9Su5w2RXFa0UyVOvvpJOXZ3l08Y=","layer_level":2},{"id":"292a4241-68a9-43dd-b2c5-f63b36f444dd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"工具集成","description":"tools-integration","prompt":"开发关于工具集成的详细内容。详细说明如何将单个工具或工具集合注入到Agent中，使其能够根据用户请求选择并执行合适的工具。解释工具调度机制的工作原理，包括如何解析LLM生成的工具调用指令并映射到具体的工具执行函数。介绍Tool Calling API的使用方式，特别是在支持原生工具调用的模型（如OpenAI）中的应用。提供完整的端到端示例，展示从工具定义、Agent初始化到工具执行和结果返回的整个流程。同时，讨论工具调用的延迟、成本控制和失败回退策略。","parent_id":"42f7ace6-de00-4f90-8caa-97fc51015613","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/tools.py,libs/langchain/langchain_classic/agents/initialize.py","gmt_create":"2025-10-26T11:34:14.138198+08:00","gmt_modified":"2025-10-26T12:08:46.141352+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZzhyQn3po+ELga7K0jCsZFuAJQwmuzlxGnJe7pRjfeCFJ/paKBiQi6zdvBVX+m3Slg67KxSV4jh6OxKesAJVZPGseIKEF1R8DpyjNOyuBxEW+Z3cpya92Myg8hjLMVnOeiOdAh66LIgrhC7qltvWJ81a9j5WQaqDUMlM1xhmO7HXZjBwplfmZ9rjCl/GrLWsLFeMgUotru7NvU9789zym1cnEGudOvuGJxpiARyp9/gUxO69qEBrvS9m4xBnYdxAXFMgNwXiKaOJPcSmsJkr4V2YXawaBd07+TShr1P6Je1eCeCI3Ih1GFtsxyYQFy0+vLNnoeSYMUTy8Rnd3F82xeh4VF/w5/Rpw+feSZvsarvn7HZVMXaYkZ0R7fPeRkVc3UXrKH/oA8D/MQ/YcYfkpoQTRrrFhwj+wsCbQZ02KV4eRkt1de3M6D1ILtXSBOYGm2rmjdEtWZarAj503XYB0Q7lI23vA6LLQjxI/C96OESDYGFVtLA9CIii6mv9IRt9BgYcaUZ7u3jCo1YjJ7LSfL2NcZU4nVJjsW2T1CuiG4JQDGPsYs7C+ZSPnKNuzzH4W6LEfE21wUNDZiCWzcGOOfmcCjJnU+8taJ5KzRYx9SCdR2aHUhd74pidD1pIWscG7R3PrXZkY/spxE37j/4ijhrK0Umzppbgrsrwpcb8yXakeFmzXP76eDQrIl5yNEI5wyUVTIT11NgOPSO6lJm7EQIC2QILugJVdUnxLY5yPh16J6EDxIx+UJBeQ2pGbiv+mK6eXHs3B7iwW4pDdLdHx9zboXl1M3Rfyf2PJ+m5GBIiW+75mtyQju/3Fu94RkDANxDGDEmzp1kyUdmB3bxaWC7S5bwvEdXVs/3o9qWI9KtuRGgDsmgtRhtEExDlQ4vTyCHcB+A3xW6DrXT1L7hcDy9QoKF16U+GMxpYjVc0hWugB/7MFKQ8quKo/O46PqwPqKh/2juYUcoxG3ug6+KWFT+ZgmptRCESU8J0r7zSqN/HeqPt6NEHyi3Qo2xhkKOOM4QkaMCv6R3f1WFgL85jYXOvFDFiUuf1NH41ARdN7b4XQVFvbrjX8k7fXOeiP4e/ofxsOdnicn3jja96nvhg+92Oq75HCd1vvmiL6AUYXz1J0hLRmbfhSKomphgTCxeCtrHODp2PLUehGRDSamD9L53aKHxWk8FNQvp7AmXYiOkMq2T80Zl5Jr8BiDnbuoNKOwmngJVqI2tq4lMm9IH9lM+t73wP1eGfmx47M3YChd71M+yT7552xmmt7vtokmU9WKDMY3uR/XwY+5u6+OLpgyjgGW1fCoCpKvWUQjiCPMsFZpnbaDlRVeDKAnJCHxDJiww==","layer_level":2},{"id":"e84e7681-17b3-4cf1-9297-88c51ce3aef9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"混合检索器","description":"hybrid-retriever","prompt":"开发关于混合检索器的详细内容。解释其结合向量检索和关键词检索的优势，如何通过融合多种检索策略来提高结果的准确性和召回率。详细介绍不同的融合方法，如RRF（Reciprocal Rank Fusion）和加权评分。提供代码示例，展示如何配置和使用混合检索器，包括如何平衡不同检索器的权重和参数。讨论其在复杂查询和多样化数据集上的表现，以及如何根据具体需求进行调优。","parent_id":"37c063a1-2c65-4467-baa1-3de97aab5352","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/ensemble.py,libs/langchain/langchain_classic/retriever/pinecone_hybrid_search.py,libs/langchain/langchain_classic/retriever/weaviate_hybrid_search.py","gmt_create":"2025-10-26T11:34:14.965316+08:00","gmt_modified":"2025-10-26T12:08:50.62214+08:00","raw_data":"WikiEncrypted:L7OndHh2dwLmabLWQjqqMumnEeeL6jV8UKO9n296R+OZUiPJf64yEFSimTRSB+auFoLcBC4k0aq0ssOzE3RExQj3QWb0dK43s3BCdvZEEFM48ncQgRTnhRsXQIArDSDijPH326pi+jyjjwomdbqH+8pIgS2lC6M2LMjN1FAra966dtxR17mrTDQmNzn1kjTvgbJ7RJ86zWXjUCEav/aMaEkBdP20/12tHQ6SF0Tgv+SmWO/MQ62+MehobRFf7Vwwx1UqVlMV8e9l1QnmzJgEXzlFu5OC3VpdbYsUyOjiAAWSHdqoyHgQG30kqlV4buoJGVFVLW8Cgk9eokC2O1e4xVXk0mh4puVN3pukjTyDrF0VSlVbQL9j+HrMzhNaSjTMjmbXoanhyHcDChXFOYsHixBfusqdvncJ0M59tT7bxVRVtGsRbgQi2cIijQmigWXou19meR23Ke7mC9jyTQxb0HEEyYBC89CPZimDZEKy/6SiYNy9r8qj0E7xrJc531UHb0Mx2ieuBXQRSB4We8t3iYq5hfVYiY82Zp8CBOh7z++YDVzfnSRUP5IdJ8kjZK0cH6c4JqW+pgscKumSd7h1oGG6xTun4aKqhrPETmmjezY799YWjbVIEn7wcy+9P6Ro6shixlevtgkG8CbmAMMuIb5/jx+XWWByiaceGiOsZGbgaKc4TVv27gO3CttP1Kd5gVWvKsw8ua8hAiC+m4r5cuxaONymCwMfDkYic/IPPZJKDNYgmJ4DpV6hh4tbwTIPxZ1Fku5rX7Zv5AybywACIIx+s1U45XLsVV5M91P8RjIHxMFCMwdgU4P6ru6xVT8clQ50PikH7GKNbu3X9dc3YTbeaofkoU47vQfXeuZ/NLT3bWJIC8JLuafwn9qxB+PSF0BoWtN1kR+hwNHmSKcocsGWSuuXXdDsNTrvsYS+MIfeQSK0VsZ9Asg1NTmRmz5mR+7LhvNhhFABrQbz/Vhrkx0HaNN1Vb1Hz/CUnF+EYjAHddjvTfLpM4YLd/1shKWfbNwtJxDZaMApJGmTEy6MP2D2zC38BZfukJHZwKruRL5v6lq2VlJ2NUfr+rpYabiCpFVFshkSpmQOnvRNBJqvG37up+xHvBUpkx9KsguNo+ieUQN9Gn5JfJAdHHnhEZIXT5xh3+RDEQ6ccYus9RpvEuJAzPVWJSCT49BMJud3wGRmadu+3rcFg7eS5zlNTxLQB7/ydYB2iQwOSy5eUGvDew==","layer_level":2},{"id":"f900441f-4477-49f9-8e6c-c5f6cc9910f6","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Weaviate集成","description":"vectorstores-weaviate","prompt":"开发关于LangChain与Weaviate向量数据库集成的详细内容。深入解析Weaviate作为一个模块化、开源的知识图谱型向量数据库的独特优势，特别是其结合向量搜索与结构化查询的能力。详细说明如何通过LangChain的Weaviate类连接到Weaviate实例（本地或云端），定义数据模式（schema），执行向量的导入、检索和删除操作。提供具体的代码示例，展示如何利用Weaviate的GraphQL接口进行复杂的混合搜索，将语义相似性与精确的属性过滤相结合。文档需涵盖其模块化架构、可扩展性设计、数据一致性保证以及在构建复杂知识库应用中的最佳实践。","parent_id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/weaviate.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:34:17.683842+08:00","gmt_modified":"2025-10-26T12:09:09.530996+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyIRgaYCDXuZBbLwklwOkMgORvg5A4gNrx6P++D2Urbh9t6vleJrSc9JmXszmUKaTSnsI29PqDWhG7mARY+eN5VaZB6zsxBL+h32kdc/XN1trellb/OwzF3BPO9L38TY9qoQmKoG2WRqlK0OBT1TBfQwU3Kdw7doUXgCW2T91Qldx0xuOC337iIOpaOAA/l2pEq+LwKpKK+Gzo4FIc1ePJhBvq9wTgsq6BPM14EhrnMaigp2807Wx8snIhmOgdYqM+eVDY84sULJ3mjKzq7gjCeX/iJOxdfsf6o7fC6LEowtWiAhMEQhcVr4JrKpDJeR11uwEl8SvFOfuV6Km2ng8msVjsMDkdONUDDihrLu779zgenONYxZUNky94CFWR+Aq07Ve3pAX+TBiazboD8E8WkiKPEWADTJioxe6ZO7IAHra1Pm7KIC3Ug2HWe9jGtEFA+Rdqh9YzmvveEeu0OlnWu9xmKnscTlybeYS0T3pCN76yHnWpPNKEMSaABmceFKC3GrAeF5oIKAhVqPab15Sf2y7JGVvu+14R8I7TWpmbm3Sb1qUw180caE5em5oY9OadcpAm06bd+nY3ES06H2fxRuJtIBZ3EvWPkJno1RJZLoz/Zlm8qOSMYbRi0JCCkugsvFsaLzmcXC2bEDzXWnSXcff6bON5XAQ8H0qCS4rk/mvb6zwa40XRT0Yv7/TMB0rEF9ZCnNYamEL0hhN12HHD6zIZLzb/05z1YjI2vdqOUmTLqxQLia/Vv8iIi5xpHrFkYT5sZ43sAXvB/e/geucI989L7YFnIFG4zTooz1BNQqpJWUV1lWAKh71mpo7knEM4PRxHwvrC4QbVGEFlvfA13r2LQ7s6YzoDHpyzho2XMb+3s6A5bXo9FcqA2xarHcK/c2EQNnSTwJnhKZulRue/ZzBqLILlha8edMMyUFYYiUEkzIrFuyIkY1r6K58q9Oj06IuZHVPJjqJxYaqEC3KrMV9ArMNyZbPY7jcvJfC9F6mN+C/U52VpUdB1uO+kq2NlWc+aZsSSXuJ2WUSOH6U3mBGk6GgxjeztZCFWPcaFdjdguxL4IUVy1Nn5K0qzLSaHbcoQD+qT8qPdSQlu82tfGBkExPIhovuR7naL23AWmpk3zockkOQUjfld+3n5bQiRzsoIadMHqrhNJC+Sxf5Xl6hRyMOPhhG4aQ2/IW8ArfumPdxdNpOd1YW2tjhXzuO3GO7RX9cWYmf1oaj9gVrIxmVro5hEriw/+G0bh5110zvyum9HTogqw9jb3GXkwoQQCd5jD8wbxJ3v6utAhntiE/OLRFUPK5qAZKByPt4seZLSNqY9RsJjCwl0As7kkTWk9FHrd4W+FjU5FRFMSCoG9fZ62MwIPn+e27KZbsBpENA","layer_level":2},{"id":"23b06d30-22e1-4094-ab49-08747bc5444c","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"文件管理工具","description":"tools-builtin-file","prompt":"开发关于LangChain中文件管理工具的详细内容。重点描述该工具的功能，如读取文件内容、写入文件、列出目录、创建和删除文件等操作。详细说明其在Agent链中的集成方式，以及如何通过参数控制文件路径和操作类型。为该工具提供完整的代码示例，展示其在日志分析、配置文件读写等场景下的应用。同时，讨论使用文件管理工具的最佳实践、性能瓶颈、错误处理策略（如文件不存在、权限不足）以及在使用时需要注意的文件系统权限和安全问题。","parent_id":"33ffdce5-d35a-4ae0-ba2a-3a92b99e9dfd","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/file_management.py","gmt_create":"2025-10-26T11:34:27.779694+08:00","gmt_modified":"2025-10-26T12:21:31.107406+08:00","raw_data":"WikiEncrypted:AuR4gEt6SNghGgaHWHfZzhdt+JK4hYpb5DEyVWgUcO4vTmIIgmjAqhkgXe7o9vZ3xCR3oSHPBaU9VVtd7gai4DSzpQpm6eoaDjD1qWz0KwmygxDB/srzLlcrNyr9DHWeh5eV8H7FVn1+Ugk8NP9rPQLQEEn4eTBUutudN6QGWcAHKX/Vqbcg3Qd1D4mchQfodIGQFCncku+a0R5MCLbddlooQgjZnLTsNi51a4VBuooObGLlrHc028FeHvdPEKeaE3m2cdJ0BvNf/aK8t08ddP97B0ofPf9VD4MvIu2kT86aXABTMDOBQoavumU6MZPAMudQRuoqdy7+FQddcjUCB6FXoWIrroVhCYL75ZJmjh0ErNlZfVqpe0PpKbDag6oCNy8icFxtIG7VHS+xuiY1fThPuXBFDgL05GwNmMV/LPRI59u1SUBjuqZkcPmVbBLziuOTaDiYAeJUapUnG4IUNT5y+6BIulloXAtGciEHp8KnYsPr7ZBDDZHIScCx0jPs/dA0bs5x/QWM0+aJfc2iJTjL0tjCdqATaMesOqOnyEILBcBXwBJSxQd2ToWmqQpxjor0Ti6Au1cOaX0Lfule9DcK99BWn8/9jf+X9WElAB4zEyay9wMOog4uN1pe2Q4mN92O0YDfOjMfTOsCJsJUfkHT8kxRQHVX2n2RsluEiZTo6S5zJ4jLJabIuZ2xPtoa3ns6RISNHHVkeJNq2/Vn76V06yJHx0FqWPbfg2kF4SOrhdnIIOBQVDaE+B0lsOey0y1/5GDOVMFVA0oA2VmBYr72N16FoIB9QvsEXTAQLU10uiJnYAN/Lf42JbsttdFV3OhohsazmjnGeRYcdHoclbStkWqGdQ6s5R33Qvg2HCnwsCw8ONMebGoX9uGu2LvMZdqvKYv6sPNmEyYDo6JM5jhO/KydEQ7oAvCGtkOJcRvailUWSTkmq5WKgfjiIPYNsnJERDJFiO88gZzDg9yBeuGRTKuuoSgK+Igc7TSlC5NAfqxz8crz86Tyk8HihuTByKGCBwud01T9LnZeBES6JwvpePbp7sG1oUvZR2HpPkXgh6oJrfvZ13N8+/z9J04zQvsJyIesTiqX7Fazay0whsOH0RCU7AT/bafclvBNOmRobwddW7lNDaLYx9wrdvyiJvkae7us4n/76K6Yx0BisQ==","layer_level":3},{"id":"da4cc35d-4d21-4271-8092-aa5d12bafbe9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Structured Chat Agent","description":"structured_chat_agent","prompt":"开发关于Structured Chat Agent的详细内容。深入解释其设计目标，即处理需要结构化输入和输出的对话场景。详细描述其如何利用预定义的模式（schema）或工具描述来引导对话，确保输出的格式化和一致性。说明其内部机制，包括如何解析用户输入、匹配到预定义的意图或工具、生成结构化的响应。提供具体的代码示例，展示如何定义工具集、配置Structured Chat Agent以及处理结构化对话流。文档应包括其在构建客服机器人、表单填写助手和需要严格数据格式交互的应用中的最佳实践和配置选项。","parent_id":"baf186da-7347-4a0c-a819-e4c5f5225530","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/structured_chat/base.py","gmt_create":"2025-10-26T11:34:29.245592+08:00","gmt_modified":"2025-10-26T12:21:08.990821+08:00","raw_data":"WikiEncrypted:LSudOIwrCMRMYcYqSExQFCMBBF54G+VjiwEVlhvli3DOCkDIrSSTxVRQkY1LF4e4oQrLFvUs79oclopoUSL3oIGz659gI0tUp3hNnzTB4zmD2IaZGRRf74pnqbugwpdQx/ANCgkBkI/BXyciS158i7TVxETWotIerpyPH2SYbaS0YvwfCfmc9pOkZ+D8lr1lb3BLgxrvaFn2lfFis8a1NYzqPTpONRPzIhC/irQqKgGKrMVx7LYKVNF6L04Q9jHSkpBUmjkGpqXmUouNSY99H2q0lZin2LJ1GH8D5DWxKVSxvFUYNEDa9Bga2gcqYtOTpZJomb/4kOY4R5v7tsDHUjIxXMvRTlm/FgYXXVrNgxRoYmRPLvNvr3TBRtiNEXXDCwJwprE+U8nX6eB8nB2fnBefYMs5nWPxa3snm5YrAck8unbjh6ycEE2pMJ6KFEWX51nNY80BNoSabEAHK/xKfkjmjsuc+Z4X4oY3QQvGPy275d6GISfbYYw2biB2QGmkutNTVNGr3/PmztYH0Qw6odVoOskcrKmwNvE8nlifsfTYymwZRbNRchUxRxc1jRH8xYXl05k3hYKja/CsUhPrKG1Xr3VxtKswCDPB5drpVn6SrSYlJkUysr58wxGQFXdZw68LJd/4ijUL6SRLmAjc2c/+6cIWMq7xxClnssJFPST9UPx+rjjX9KonT+QwNf6rHh5/jcY6dLlif+ZU4nRyO77bKtyfyGCeD8Sdg/31GqaDCS/lfDrkReWtWXNaN2QtsdGehGQ/kOAJM6XIW3/8yPWSx4ZV22JViscTeAdo6nJAvJ2hlYDpzIGq0faGVA31H+cfMxYM7W4BVb9mv6sonjIYZ9KOvHjNuKk3uzhwqAVdfTVTRjQigFz1qkHEentd3EAprRdqjFnvgufEBuBbEoo3rus+WlOduAsZ/CCP5W57aUuHph2bAhqgzZTa5CKu/FZL5AmCOmmhKK+OWmpR8Tglltf7bCYngZAiNpTgjFjBq95i0Jf4S3quTfVitypk8IxjwTWu2gxVYQU6YFGCHz2X9AoEQcI9dD8kODEH9eIQchqwpKDPc6Xoq9ooa01MoJtD/keE3wOckqzz9RiPfZ585dfQfuDSgW1J1PuEr4y2YLkN+Araf5yokMrIaj0M6d48yWfhVP9GKVQvSEdxxeZfyBi866ckMgzTGXp/aprIdg3zBTRUkgT1xrwUdGXXFzqi6U1r54zHiN3ef44RRYgamv2gdqGI2v/6lG/9MWnqtqG6Y+R8okTuO/ywNwVT3lSb0SsNh5BmVjxXmturoBQlOddJUwAWUT/iDwNay9w=","layer_level":3},{"id":"2df32ad3-d4ed-4516-b147-e3d3aece8f71","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"预构建工具","description":"prebuilt_tools","prompt":"系统性地介绍LangChain提供的预构建工具集及其使用方法。详细分类并描述各类内置工具的功能，包括搜索工具（如DuckDuckGo、Google）、计算工具、数据库工具、代码执行工具等。说明如何通过load_tools函数按名称加载特定工具，以及如何配置工具参数。提供组合使用多个预构建工具的示例，展示它们在复杂任务中的协同工作方式。文档应包含工具的依赖关系、配置选项和使用限制。","parent_id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/__init__.py,libs/langchain/langchain_classic/agents/load_tools.py","gmt_create":"2025-10-26T11:34:30.183721+08:00","gmt_modified":"2025-10-26T12:21:33.832818+08:00","raw_data":"WikiEncrypted:jLY7O9/92rh5IHe0BJ2e0C5OCLlLhwoZWLqdugqpDnfNLZqa0QDU7qfzQ1GBP4wpuNKsGUMduugH5Fl7OAxO1Rnuedx6Hxlubh5APg6UYh1++fv0FHJt1PFdZux8SHhgVYq/0bLwxpq16sdvsw8rz2pXNQsjsO+BBVXkmUaAexBg+A3sk49M5zSlXM6Tj05U8FGjlZD0tVWPoVq+v0B4AhiH4ePvtADM16OGtJt1KaMJxT6OUa4AMJAFCruRtUBIJZ3qnOqqxJk85/hr12X084JQViNiOaeiQxXqM38/1jjXpzk8d80ybqr3Dad4nHfV9F0YvvZm79hOTOURRQKkeVuiOtng7IwGLoiV7GuNrj9MMR1vQ1mDH3IoWDLmuy2hj9BJ+/bezNhWqmldeHscxu5xb+ioEBcvQavIYTd5KPzZLH8EEpziXFMXkZdsyJOLFVeSuA0/tyz7LzOEr2dxbQVB9I3c9mUMozyd43Ii44gyHsyzLei41Quqc6JA3R06p/CG4ke3dp3Deovki7uN129Wg5hItS6t6FH8jzPVla2zGwGkJV1hNNeTSe508FLyb5WADGdzG4Gn2zLanfgc8hMNicDQrmQg3iNLrZxtMsj04pYmB7AThp/JceZaZReYoiT98tsuptNBKFY3cpxwIgsaBlOTryNugbYHE4KofJF8RgFbBN0Cm4UKE/w+aUGmvO+fx+fQlatlJgv9ye47vb8ObSDLygXuaRu+6+pojkn8eAcxjJzGXmei8RB4MRxvGVkLfy5O3oZlSndXHzJ81xkIRRG33JrwWHKrF0eniPhfb+rhS91qfDGY0FR+y47vOnYnTsrkDesdeaUHCijxeZdX+6dseM4ftqdXUJhj+hBfnGW0z4b7+FzbrsW+yWT02mYZYcUf17+8XDl3ocg/Ez3Nx5sI/pHyeTPGijW+zU+VKxDjNXOLPQ0G/QmZcMEmE8BGmOi6E0pt2oKOGoMgQlrUieklaArJtDTI0+jGohNBuijrLkjCOZAW/oarwFrt6Ozc6EngSzf2MHRJjfma+xN16FDnOl92AO4eb4dzI9mmthepkOB/ydm5eSc403kwGN8eHTXtbJ6jtV3CExO6gGbMobDWCH5rrgQcB+IInH8=","layer_level":3},{"id":"972efa65-4bf3-4014-8977-174e1e348606","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Weaviate 混合搜索","description":"weaviate-hybrid","prompt":"创建关于Weaviate混合搜索集成的详细文档。阐述Weaviate如何原生支持语义搜索与关键词搜索的融合，介绍其GraphQL查询语法中hybrid字段的使用方法。通过实际代码示例展示如何构建混合查询、调节alpha参数以平衡语义与关键词权重，并优化检索结果的相关性。","parent_id":"e84e7681-17b3-4cf1-9297-88c51ce3aef9","order":2,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/weaviate_hybrid_search.py","gmt_create":"2025-10-26T11:34:38.554496+08:00","gmt_modified":"2025-10-26T12:22:07.764118+08:00","raw_data":"WikiEncrypted:hDJYrxvkIofGrbHIznQqZBvQbfuDAiojmPN5dyiPlbZJRorRvyj5vSkOFTlmyx6K/jCSWDUgj6BWtncw4XDSOU4x21tYM0YYK21vxP1YosyNoLzNLVZ9a5wb98gaIY/4zLfH+3Q6QNj5P2flIAIXjy0bHk2cFry5LXYCXRmaGHzuCxahuNbMBBF9FXWvV61gwM9iXeQb0KE0BUcOSLd+02vgwXr8xCeeEy4IVbiP345pkeoWImDiulrMOXeUCF5n68z0Krz8eM1KV0C30AzQDIDSVwTEPwnvam2NKPl8XozbKmwgDzOOhPRqFyr0Xy1mVEJoBEPEgCPSKfC3BCHpIacy1ws9Uz+1zIh8k2UTsqugGMxGGZeKqRWTjgk6lT87nfprUBf7BQ6N0yX4sEdpfh3ZQ6p+xVqWEydJLANPCAL6txqKzC9/v2uvrADVL6CRLHyQyKVRtHDx0/HoDlkawziJ9H4RTZ3g1Ihr8L2SNeUuuprobVu4bz71/NEgBzHKJ9CpkAB5oKOoY4cc3AKAocFW+ZH95EOUT/GO/M4rxyTTi0YI1XbhEZdte6+l0qWSzjdI0je6khyqNVmeIFdyGa3Ubx9pIJPW2IlvpBzNqr10HhDk6o7u1OfU2jlgrqEuw5OfSxLZvJNbQjV5FEPRhyBbm9BMucSkhKO2EpaMVzPdXTmxtHsmWt+14s3O1qUxNp9SgptV1e3amnIwZcyFlZgfc6eLUffllRrW/XlTINk7Q/C6Vbq/6PXxDmtjY+ZzdKTH/2vpEykMCUerQ80PIDfc4lNxTGcyUaQkOpFYv8RXfRxxZYFJH2vMk/XuOnBN","layer_level":3},{"id":"24b9e872-4460-49ae-b5f1-3cde00f077ea","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"检索优化策略","description":"retrieval-optimization","prompt":"开发关于向量检索器性能优化的详细内容。深入探讨相似度度量算法（如余弦相似度、欧几里得距离）的选择和调优，以及搜索参数（如top-k、相似度阈值）对检索质量和性能的影响。介绍混合检索策略，包括向量搜索与关键词搜索的融合方法。提供优化建议，如索引预热、结果缓存和异步查询处理。说明如何监控检索延迟、准确率和资源消耗，并根据监控数据进行持续优化。","parent_id":"752f4c84-c0ae-4f5d-b794-1f2819a06976","order":2,"progress_status":"completed","dependent_files":"libs/core/langchain_core/retrievers/base.py,libs/langchain/langchain_classic/retriever/vectorstore.py,libs/langchain/langchain_classic/vectorstores/utils.py","gmt_create":"2025-10-26T11:34:39.140063+08:00","gmt_modified":"2025-10-26T12:23:01.248088+08:00","raw_data":"WikiEncrypted:3166zDJNeEBGH/o+3+SHSmdx2BY1YYTm4hYYZ18h0d+xjlfAWm1ISdIQ6iHEGQd6/RIVzEq7jeqZ3x9A+jWvwEYNPSulNCjqbmOIQqcyPtIC+hNOwAfDGffihG0Mu0HihUL0gITBPKWzM9lx12QkkJVEP+Bl5CRt48gNE8V/d9ud7nQ8FVzOmP0u4kwa2djpUAzOuN668H/2dTi2MwSv+oMooKFylI+M7q3H1xDhnz+HnpvIb/y0pP+xq4/6OA7fiVsLXbsjpYtHxyJ+Cqd8dJUCdHQSzBW7yd7a7RkYsIvARCFQ/zTkIyNFZPmm+BsAiiWQN6XKMy1iwC5O7/OwGKXcUoIiH/ine0+Sv8Q5r2/USp0U1BDCYVKha7vqhUibJjvj/0VPqV4MUont3MHV5cV2fCOy7tVIuA/ejmSGmCertG1j03qWUN81w7+2irAglbdKFmvDLshOvYg8maL/sGzzMYMhVZSNKMx90zpImnhBpE+ioq1wDYjF4XafaQ+89tST3YSVTSnJhJd+zS3g6GhWvLL/a5vGMCYvg9yQAaRWt9sK5tNF+BuCoh7y7gizMxdSMcRvibIBFKxgrROwR6Kgl/+DWwaHOGS2r/LJ84QKt+R5A9YxC97yZ3yyqeSLj40Fk7VDEnTKSzS0nNH2L+h2mSsF4YvJGpBrE7nM0luSGYruCyzdDD2uwTMMJbNX3Zv8eNd/xO6Q4CUZsetnqnwEa8JoGSae3e/A/kMYcA/g7SG5K6BQ7KUtNljnfVmMMbEz5U3X8y/T/Ke1+kRJ8N+nple9jKJ41zpv67paJ99GTfe8zpv0sP51sPMFDgkDtlTyp5d7uTEWzBdtk93iIsQUVCIn+skMgEMnfwqogcHwthGgOfHmLEviKxeaP53ESxn3rSP1LzP3NSSR+gVbWwMMURquyDXXPvGkia29o/zGCZRlZvJqClR4iev7RI47uyR07NDdmRXUJTdZV4T1GjJsg1Y86E740Y2IiKS/uRWHu/Jd1RANJv52g8eac5WBseJ2Vg0tluvkrAmeJGZkjoWPMGSnz3afwliaafxvAx4L8OTBzMggXBBWtTJGD51OG02zJpsGmZHCoZ7yr95soo/Z+OgNg5wT79x4EK7L4v0stFtCSjQwG9EbLLIOEAakaRIBQsrwagRptDNp3+51QccqGfE9ZMYp61qcgxqJ0zQ=","layer_level":3},{"id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"第三方集成","description":"third-party-integrations","prompt":"开发关于LangChain第三方集成的详细内容。系统地介绍每个集成，从Anthropic、OpenAI到Ollama和MistralAI等。对于每个集成，解释其目的、支持的功能（如聊天模型、嵌入模型）以及如何在应用程序中配置和使用。提供具体的代码示例，展示如何实例化集成的模型并将其集成到LangChain的可运行组件中。讨论每个集成的独特优势和潜在的使用场景。解释这些集成如何遵循langchain_core中定义的统一接口，从而实现无缝的模型互操作性。为开发者提供选择合适集成的指导，并涵盖认证和配置的最佳实践。","order":3,"progress_status":"completed","dependent_files":"libs/partners/anthropic/__init__.py,libs/partners/chroma/__init__.py,libs/partners/openai/__init__.py,libs/partners/ollama/__init__.py,libs/partners/mistralai/__init__.py,libs/partners/fireworks/__init__.py","gmt_create":"2025-10-26T11:32:22.23433+08:00","gmt_modified":"2025-10-26T11:37:19.594223+08:00","raw_data":"WikiEncrypted:WxCGFGSl9zR6IDeUdkqKNACFcGLyx5HNn0UQzHtkOJX+GuYaJpPmtEDsZBcINwl27w28IxPFtTccOfR0/fmmLeg+ImzCtI3/+xOfelDArLne2q6njPm4blOU409kSVMzApvWPX+pwgTD2/r2uDJcnZfbAbp1E2qSKasZVyYS88qj+0PXuvAknSVSTjmJ2l2DktLznjGWSn20dkersP7JbXVS9FCd/AiYtssLV2vV6syEmo2SayhIW3W7V5PedM2eBLWuKbb9oYWNtPbFNt0DwEKSJCkRaQ4s8ngl+T7L4kiqWsbaUVVJbWzmi7tmWz9WdVq5es1Qi84lXarevoWlueJfUoBF06Teq23OvBBOGEqmLM7V3Q6n4Gp9D8XMwIen9izGhgfLnwCBqDRp9rBRMTK9IxBnvfyaCh5aCs4rI8brkEr99XGu8d6Di9cO90zO7ANlqnOrtXPyQUDLKr6deiKJJUpTK24+NZWxx6xnMy8oNyzAi/hIfKEgJm8SCVf9QLxd0Q8jvRkAseKP1y/KnlytZ9GDZbNfF31mKMCjKyTUY2yXj+DUg+1z59crGEhpDUD5SqRuVvGIXvnb/CpCPIppTkOHdJX8uXNEOTuaHrBmPSZP5lD2njfXysqa/Typrs8V5H3V295ec4nNdambhPaPISDvAx68XzolbReTf9BFnJ6Rp168yN/jYgYNCyJbVpUVPAUGHswUnz/1p98T9ZCgGKbowBKMsLb0aYiE8LAxCx+6a+VyY8Q+fmqSvHX4PaZV1Vao5CvSK2mC3DueP3zjwEhSwUGlG2Jt1aBiB0UZYBYFr2nmaaGETPVoKhgTx2VzMr94OSZGBikISEDS1ngUR6QJ+lVJGKfoYG9Ed/bMji0Vy2/YQIS2DQ8MBTXzPwwgp8PMYeLoyD3ID5kmGLudPW847mpjl380tmWRB50RC8NhTd1i6VHv88IFNiLttuyHj92ghp2qNvMptaAsfbFWRNJqBgCa00/+rJciMw0PURbsj9tU63C9LrCfr4AZdezi77zOx1j2j0QI+ymXiGWqvky9Pr+u+M3+Lw+FcKRF1i192u4Oy1anI9OlgR8mY8LxfiC0W0amv/VcT6gtz8ZZradcUQe7IRKdoZuKNCHSji/vME/RH+YuXl+Kr6b15K1O7rw031sX3JZneQUwFf82PgNyI7MFdF21jM+2W5M9W5+V+DjKlx97iaYOPJlZW9xtUuypTCL5KhM+X4oLOIS5rXFXpipDeUrDpKpWmLHFcfPHI7flnNnP3/1pgOfcXbzbkEAV1V8BC2z7S+KEzj8WsG33cHR7mXdYDBH7kCt1TJFOr/aamR6ThDzHhLje/DcceazejBS9YVMPoYz0N7+YdOY6vq/r9U8vy/rqh0AUD/ADACYFa3i/EZy4vB2FX1GID4hYVs6h4iyZ69OiuuEzPIcgQ2uhB2HU9XlSmNS1BPBi1vMgpO5ijzZU1uTX927a1su2ylyzieGtOvBNew=="},{"id":"38f39743-3a60-43e5-b9ff-f5aaca2a3a38","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"模型集成 (Models)","description":"models","prompt":"开发模型集成(Model Integration)的详细内容。深入解释BaseLanguageModel抽象基类的设计，它是所有语言模型的统一接口。详细阐述BaseChatModel和BaseLLM的具体实现差异，包括消息格式、流式响应和工具调用等特性。介绍模型配置选项，如temperature, max_tokens, top_p等参数的含义和调优建议。通过代码示例展示如何初始化不同提供商的模型（如OpenAI、Anthropic），以及如何处理认证和API密钥管理。解释模型降级、故障转移和负载均衡等高级容错机制。讨论模型性能基准测试和成本优化策略。","parent_id":"e477836f-1151-41d8-a55b-bfc3b7c24117","order":3,"progress_status":"completed","dependent_files":"libs/core/langchain_core/language_models/chat_models.py,libs/core/langchain_core/language_models/llms.py,libs/core/langchain_core/language_models/base.py","gmt_create":"2025-10-26T11:32:39.558302+08:00","gmt_modified":"2025-10-26T11:44:57.595431+08:00","raw_data":"WikiEncrypted:bcjkcAe0RFiHL2SPRK7/unuNzoLPCL/lss3rpbus3JMS0eS0kDjUwMxXKukOf6NhcLWWJIKkVosw7Cn62gTQT4cwJ0WB6GSZwzxnw9cUv3Vl1uYCgF7IFNaie4s9MCtz84D0LHLCJhy466nyNU5/8fYvf4ZmM1aBDkrzqkC1tJmFXMrhq13W9KsOlZ+lf5HxIFHRKHBcU7Kr5NAGahehrz/njdDwRELcdssxME93iiMyeWUpQOrMIFpZDBeWZq+Xw+OGB3xeahARRMSgDgEckslCHfoEk8cHlQD970frvWFGSPym5YSBU364pHJiDeycRP8fI5EezLGMJxacyBNu8HGXMYgDFUmwKwS5HoVvvPVzHrjzw0D+yWway5DFRep1uF9aVL3Oyo7Uhp0v5spznRjaaFFoMZcWxnAAeco+pDWza/tzCZMB5g9q8RKTaR39a5/mwovkxyJ+tc/mQ6qvGIa6OjCWfTugqmXgWYb4rf241y+U7GZFO6g8TTXWf4me4S2jxAOamcZOZtca6yfA0n72W/mLVLHek2WTUJtHto1tOjWd6XdndMJfTjyiLEx8EkP3jsZo95UbJGNVBdh6c4Ox9U2RqN0SlAqQsJ4gd+V20wAmW2u16xI7HcTFZCWzKgwysCJ2bkWeL9YXK6gYy85AdvxaWIHjyxL8uv8eGMSVomoGHgP+AP239j+WHS6+4V/tlw5ZLpP+q22g+XYDLQEcfMeBRtA3DX4QFrzxPXcyLhf4sV3sU0zGSeMIbktnNYUt+Zu2naHTB6DGtyz2/5MfiAwJR8s8Y8H5VYGGy2dCeIhrHDwfxAthAZHBWw+EFbQmKzraoNqqrYbQRFk7ZrRcPhc+SBObMs+YRA3CVspAB/DCB5wfLiFWlTvJRGlVLVBlAoPiFd4b+QsFVI2K9fslAcjSC84SSeAyW5Arj2eZHvgNXtAQU6RnVdI+j5ODTeVXATJQQjgKpzB4o1AXqOueWhV52G87x8YIvLAl4vDX5kdpaNSgtVKFYuERVogAJDKGZiewv51WKNQ2O02VEgaxKWYj9tEgJ1mJiTVOHQRlad4Wkq8SvB7kNQQhEfsE5oWEi/YK6ih6sn/bnGv4/DiIDVLoZSjybVvIlMa1e3hAS47eQLMBPhF8pgfXVVmes68QPy7vuaDjRzAqk3vAnpym1vCKF70E18OhAAMbpYqPAk694b8hiGRIqWccDZ4LHWUMKPxpii/cWHryaEoRVuH7HQFFlGpTwH9cH5bSYhIYLEZIx9JE1wOtvJoK58OcTlgjgfANrsTG1v13gD1+6M2bSotSQqawN+E5qm4cVcnYF5CjlxeHqPzLrcQjk0HtYjyai7t/3FO7h63IDCCA+g==","layer_level":1},{"id":"f3bc13ed-c2be-49ce-abe6-2017089c3df9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Ollama 集成","description":"ollama-integration","prompt":"开发关于LangChain与Ollama集成的详细内容。解释该集成的目的，即为开发者提供一个与本地运行的Ollama服务进行交互的桥梁，从而能够使用各种开源大语言模型（如Llama 3, Mistral等）而无需依赖云API。详细描述其支持的功能，包括本地聊天模型（ChatOllama）和嵌入模型（OllamaEmbeddings）的实现。提供具体的代码示例，展示如何启动Ollama服务、拉取模型，以及如何在LangChain中配置和使用`ChatOllama`。讨论其优势，如数据隐私性、离线可用性和对多种模型的广泛支持。解释该集成如何通过HTTP客户端与Ollama的API通信，并实现`langchain_core`的相应接口。涵盖模型选择、参数调整（如temperature, num_ctx）和在资源受限环境下的部署考虑。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","order":3,"progress_status":"completed","dependent_files":"libs/partners/ollama/langchain_ollama/__init__.py,libs/partners/ollama/langchain_ollama/chat_models.py,libs/partners/ollama/langchain_ollama/embeddings.py","gmt_create":"2025-10-26T11:32:50.904543+08:00","gmt_modified":"2025-10-26T11:45:05.380689+08:00","raw_data":"WikiEncrypted:3fpUl82dy9XV3wmT209p/YMbnESEBSrqxSQLfI2o5Ku8IlZRCaYZmjYaTxJF0TMnsIxVS/e05SyQMwDa9nYJXPGcNTXehn0gzIaSsfpmEETPfWAgp4UCc2YenQNsohBt4tcp5a15FWcm4j5OtNB4HMaOCZzp9BiHtGkyMvTQJPyS+Gv/HLrIP5AcNqpLbeOD54IASO4zon7K3RddwFsU8FzU5p/ilzUIsKmNnAXyI90AhEdunxgNWTUCdTOKsV9AKPvJD4vI+ZcP3w2SGSB7Jg3vWv7tZyMEa/UKdG2k2O05QEUxKbKnwtZD916nyGZXmTJViz3LuXsAPuezPWjqXY/waTSQDRL/ylXzGwiTRqxiFLOA3KPICguOvkI5tiqSNZCkBuEkjyd/Jt17+20Jo13VcB0ZzwjfxtC5gzParnALwIbnHYYonaNr5J2PrFYS586GkpUjSBQ5i3e8pUu0TKefP0yldgiv4Ttl4IA+OxuYe50xPc0Ms2zdhsCz8jYoq+6tcj7CO/rMYVSjEP0ay5pyKCxC8MfdMiLjxQfcPehiVt+spQgQToPmH/mXA8UvRoGkfdJIMCvj2jcs2cvgQnqWg2y5fGuL+rc+y1r3l2d5fmS2fxmvv7mybsPBTaCCqDqhFjTGsR1Y0YaAt+Qai2GMMSLAPSDZTfLOe24+yjNumuEIGhZBo11KZMH/ASMVKbzyELLHJ9gRFNkLlSFH663ccfA1aqc4YtzwvU0YzrRwbrg+6YehbOmjSrtm/0txbw2UD/Cy6FcZUhEohW7pbpAHo2XQHKEuYqH5ctI7igoEzFl9unD6TykkiM0vDtvPx6wnyG/6UP8I31PCpzGJp9Bbmx3cpAVVp3GgB0TNm7M/ItRDOs0jkd82J2T4zspktZ9nEDvdR8ClslryD701wvSuUgp0BGbwlCX+Hocf9tZ+5mFsWBX4ok05xTjOaOU6A+wZZZs8F2U98PN+oNxbxgBgcgYUnqyL2O/eWlZjj4tKUoG0wC+vg9Qy6u7vzL5jUKX/VC6c79y/2aqEbS4gQqZ2pBOjGXNY61ISmsha9RW7YAXmnFUQQ5fTX5F2VmXWGua0DZt+6geiZPUoiArtYKJCaClqEWDF3MeQndQX5kq0Tlxh7XRBauL+ADeD/rjIRuw9Id6WZj9jtdrE1iyIMcU7YLBbQkxVmoZeECkm2xgO5Q6+pxxAxbcxtnQFhQ8H/6x1pXIv7CXfXlWs2gTkUwYCJ8yjSzMpjktm6jVY3uizzLnmNn2hhNa976u0Px7hmqDtYg5DQAqprW1lJnO7AiiwpYmDN6uMeIlQ060vXhE7OjpEcqXi7e1xVHlGi5Kk9o0kC5GUfcBqTlNKmAnQw9hUyBtk1fZyJ30zsipDGlvl7nrZTCe4gA0KawR5PZ9BbB6z8EVHkl4B7+HymT65PfIvkmXg9mXZqoe5omQdj6OU0K5YRD9tLKcjiML01ipb3sOJlZ3QJzhHU+V/cn8wZ6Dok4/0f7fwvWI+lFrUaOOJ8be/IkAR2fT4Ft1M0ZRRpBQz9KWpNdN4Mhp3tivxgvxpamNAwJpOHHGtVAbRlQr3mjQQkJ+bOb7IgnFYQfiJZVwNNeKlHD2adrKmC8H1roe5+NfZbEPk0v+8KUrshBSd3XR8msiqacnZFyTDGd5k","layer_level":1},{"id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Document Loaders","description":"document-loaders","prompt":"开发关于LangChain Document Loaders的详细内容。全面介绍Document Loaders如何从200多种不同的数据源（如PDF、网页、JSON、数据库）中提取和加载文本内容。解释其核心架构，包括如何处理不同格式的文件、解析元数据以及分割大文档。详细介绍常用Loader的使用方法，如PyPDFLoader、WebBaseLoader、JSONLoader等，并提供配置选项和参数说明。提供实际代码示例，展示如何加载和预处理各种类型的文档。文档应涵盖错误处理、性能优化以及如何扩展以支持新的数据源。同时，讨论与Text Splitters的集成，以实现更有效的文本处理。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/__init__.py,libs/langchain/langchain_classic/document_loaders/base.py,libs/langchain/langchain_classic/document_loaders/pdf.py,libs/langchain/langchain_classic/document_loaders/web_base.py,libs/langchain/langchain_classic/document_loaders/json_loader.py","gmt_create":"2025-10-26T11:33:10.897996+08:00","gmt_modified":"2025-10-26T11:44:45.25756+08:00","raw_data":"WikiEncrypted:UrGmrKxrZ1JTrlkVwQ+kaReQkhLArZJr3SyZ4a0kDE+TGsM/3TSELtLciytutfFgUcTDx+z/G/muwjBiJc1fPnYpN0pJB2isBg1BccHNZ0nJA1xFPH4DZITWjYJPwJ6HRV4C+P0N4oH5LUcIldUZphzKXYv5UwTP1yKzl/NoPaj4uCheuIfXAoUPUd84dgEHiu/OWHrPpCQAlF2SZN+EdYNKdF6zjrmwY00FBacIbc74di7uPZWo56P1pSBjnyevmqfpBAqTjVnZkSsDHvGh+awexb5aWf/FRW50p5hMeJ1NtCdJcRbYATfoqlJlxJpIlnGHrDQrigPzWYUBFjT0zaMj+2TcPfjk2AMik8Lx02A1924SJNYf3B6L/gxOEviJFRPcPSjCHHzrvofLDOcP1dnKsZw/0xJz6or59STJbr0Rg8O8aERnDY02T/ImkuxnMd33ZIMALiGL9VexbnPPznV2zjBGZPSZLIYiT5XfM5v4OdViKo0BODyOh+9Zi64dmqiPMql1hvqH4FCgE5WtupVfH+gTq4034xAuiUCHJoLS3a0kmJiX4eEgfLmyYRRl1smSccQUBpGlSNOPDfWzL2Py/yUz3yAYNlMSLmqmTU4ttm7qQ9PELMxj7g9CQJQgBSsMxZcZ4Z3m4cHu/jRgCvc41c+z5zV8YloshXfDJr/Uf+XMZj9DUdJ0pw5POddHujzSKspUdeUqYk5eKmdtORyfJiOuvYGyIWRKBmz2VmEze1KS4YG3tVI8C8pFc/YqqveacZBdwvbKU38vYmAmPqZWLz6yq4UAAiSK9giF8qzhojgOda/2+2NnJ/o9R2G6jYITEb6NWtfA8CB4/NkT5lW3YiocDVuQvbh5lNP+j/Sd6HWdZ1W89ke+xrIhG6rM4M9ntfcG/J/3B43egVlfrBLcX125g1bZndo19polxNJhI9RYsJrClqMrTSYdIA2UvLJ8EF73c7pbMzGMh+TtILnhKr4ExQNATEerQ0SQUj9JgPOSM8EQhDTcWJhSYDf5P8TeEr1FlZSBqoHr6aEpm7vyHp9YIhc2yXzTrBtm+D6tCKzCaeQnIY+AiGeH8fPwrIn7ZwC+cQx1WpfwI6fNnOzd94kUFKy3ritnf/sbhcUcoSomh/2pqZSueI/w8IZRkhGme4+UpIIK1k+ABgfKOjLP5h08WfvACP+lpy4uRJMd3inSa95OQs5Mtsj+ZiW3odbs1iDG5DU7UuxmgRMkXATK//cGFDxbDo8S0o8uERnZwVzvCenBu6mHfOJEzJm3o6OSUU3Y7suiSvkLtw0LfT1Tg185HYCw59WrpmPmwi4RtN77TJG400BrP3S9/oE1QVDlRStOjg6C6wCiAmwV+NppA/Mp6JrpJ5dPXz6YqwvuodqKssanrIEv92R3cHT4pg73mQbnNGYeE8BXGpE4bdMLsDJ2R8viJ3sgYtW778OP7Fuc7f89zgWlbcT3PpZGQDjP3XAtrwA3L5Eq7T5Iitv5GqrOfqbZGToC9+Gh06JUNLCgAk8jY8Idpe70WGnLFpKVVwqmY9FiRX6Trjf3EYN666faRjEYplbX5LHDyS61KRuW11U2pZ7BytOhfCLTZhelc/jX5jBrkgDcouiTyw==","layer_level":1},{"id":"925057a9-3ae8-482f-863d-9fcfca4412c1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"其他Chains","description":"其他_chains","prompt":"开发关于LangChain中其他重要Chains的详细内容。概述除LLMChain、SequentialChain和RetrievalQAChain之外的多种专用Chains。例如，`ConversationChain`用于管理对话历史，`QAGenerationChain`用于自动生成问答对，`SQLDatabaseChain`用于将自然语言问题转换为SQL查询并执行。为每种Chain提供简明的定义、典型应用场景和一个简短的代码示例。解释这些Chains如何利用LangChain的核心组件（如LLM、内存、工具）来解决特定问题。此文档旨在为开发者提供一个全面的Chains功能概览，以便根据需求选择合适的工具。","parent_id":"739017d2-068e-42c0-a018-28dc42bb17a2","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chains/conversation/base.py,libs/langchain/langchain_classic/chains/qa_generation/base.py,libs/langchain/langchain_classic/chains/sql_database/query.py","gmt_create":"2025-10-26T11:33:28.704387+08:00","gmt_modified":"2025-10-26T12:10:24.911384+08:00","raw_data":"WikiEncrypted:l1XAmclMQdwQNZVBmnY+vuG4fDPRwZQbOOWc2V1YQ10+5CaGtnfXwj0aPlRtgXtDEv08OGly/2oJWrcJoS1QRXpFPZnBfSydQpQ4Q77d0B7RDXVcGgxd2QmrDi232vjisNsHiwiGu+RbI62iRZ/DY1IL7IDrSvy3T8Hr1rZrvQ80A7raKwdiD7U0NOg6Zr2Ge3dZqA33e96rRw/oXmPEBYLmUG9PO31VyDJP4bg3zdmTsmye12HpE9fEcqm0x9Em0hme0xa1mwCNf8N1naTlI+G3AmKKs2Gck7K22iiY4qXHk5VPq5TqmIS8OnCk7wfYFfSy20Vjwi8xrXpmwc6zy+a4q7fCAui+Eyl7rBh+RSOhiicYoabPWvOvqiPuVj3wn2dW11MN5ceLGj3x7BKWeZLy79hYgxxInBeZd4ek7kM+VyevosiESTjAL4xsAsnc1ISW2Irz14W+skJPZdZfTrIN6UwbenF6AhwQyl9XwHPugPthp73G9y9KwgjUkXcK3BIhH4mjErIZvlzU81SJuJzRX2SpH2L5xgQMV6/udktCBZCEqj2X1xYRAngfrK4oCvdm1Bpp/Ccsc3i3t17pein3hTEdNo/vWWnr9lu9F+ORxw7EYfcnRRWxSI/GQ+tZi+3ow0Tqu+xYsydKrhc+Uy1xhGqxsWkc1J0knXp90RYA/XPtiwwdTm82TDz3NHXLZHQhEtc8Xccb7WELm/4lqaQO0V3Xypogxp2bmWfFdo93qetQKpmvNc091djfLRf1IfRIac/Dtsf+X9/bHh8vQrArgwbq/tRfCceFXF22emdJaWBP62HWH5TzA4iDw9FdRfmjKjP8koD3k/Az5xwgYH6egFjTp4tME9mbaLyeZF8U9qtpmgaP1cuGhPbmybkS3blzOBRIqaPpTPGBTtD5nufJjZcxDWGd+n2vV4BfwdkO4ASp3/7H5XbBrajU6kh5HEBAMivpo6BaVyOwbvSWp88pZOHuE2UKrIUfCHm7W/U9YUPbinkIBDY+uSKPdOrxl9DpTmeRjy1yeHiACKurwRWaqj4qJotD4fQ53s3+68/CtUh04BWq587LysoWkilF2mW7sqBxe//AAnXHgjmcSc+A8xIgFIu0ppwrEUFDSRsTZMlx2C3fSpDcIzLiNimm3nw7iuhTCb2QnAL3GRBV1QkAUJlMRMiHMnutiwLFlaAqryLwo85GmUrxYYpJ8XCNXOs0kD7X45xo4lwk/89JrvyAAZjrCbFhZ3qR0q6yWhhlqMzwyFbJOPJ1LEM0HRB+WYLJEs8nuBOWpAtjcDdbW2SFEHEls8ReJi/iN1q3DlP6wD8VHfBM6ViIuU1VtZGlGqFMkYqOUlNP38VtQCX/yxEYVRrXk8dm/+ooSQzEru8=","layer_level":2},{"id":"17648e9f-a8f6-4cbc-a387-14dba29778a6","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"基础聊天模型接口","description":"base-chat-model","prompt":"开发关于LangChain基础聊天模型接口的详细内容。详细解释BaseChatModel抽象基类的设计和实现，它是所有具体聊天模型（如OpenAI、Anthropic、VertexAI）的共同父类。涵盖其核心方法如_call、_generate的定义，以及消息对象（BaseMessage）的处理机制。文档应包括接口的设计原则、继承关系、扩展方式，以及如何创建自定义聊天模型。提供实际代码示例，展示如何实现一个符合BaseChatModel接口的自定义模型。同时，讨论接口的版本兼容性和未来演进方向。","parent_id":"cb531d92-ebb5-440f-b083-fd900269d60f","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/chat_models/base.py,libs/core/langchain_core/language_models/chat_models.py","gmt_create":"2025-10-26T11:33:29.987516+08:00","gmt_modified":"2025-10-26T12:10:40.944705+08:00","raw_data":"WikiEncrypted:vaFilUJAkvPF6f2+FU+cecoqR9BLFdcYbRRTYo4Am041ZL07vgpsZeRntvCzIXTBc3wF01OQQkjDsTbIy3qbCFROSQx0RBRAAYWpZt6ogiFuPEFSXx4q1hMzKGDcDad1cvGiRBMlGQnY/kzJQ8i35YnRgboFCwZqIepbM4NZAbAGM008lVm/fCX3VHU3cl2ms0IX303WsnLU1+Tdrvg6Ova+uxbMYWgh3Zciyahd8IX0o9lhbrNm9kBPQRwLuLlFxYnAEaBV02vTxcOA83lEx0DK4ouhMqirHSjhX+UmlzSqXhlHpfvk3/CnPg0zdN1EOa/Thfdw7/1iTRTPCZx1i68g2gTZgEw6IQX57JNfbLgz6v6w14jc6g5I8xj8NTIBuEkTP/Zd5RmVPt7HxvnLif2LGakCVGP+aGwXWj7lz6KU1t1AZ8AXisdxEjpicknl48xuP5cmLpejGcwZUbE9VhBAiQoraUG6Pir4JlTnqAu1QKijpyW9Akssqc+k/C3RP0mjVw+G/Yr8pdRTi65VyfJMHqjc+W/1em57Tr6SQIkCO9Ztnks1KWzL2xGOf9ejktsuH6EsyjMq5aXn7mnenHTC6xMj0k6E0c9HFO1zVZEAL2VV7apimDu+vT+II48+hujDiGhjO8T1JmaeXWBsJjC++CpEl3QDewqniq+hIMd9LLvQlljrUMiyVD6QEJ1+z8Y/McJth4KUp/3+ARz5OAI10xQLmIgP1YwUzsIvQiVx9YoiKDX2oCcbORe3qZLAXmqDsY31VVhMQDnIC0Sh0IDFqjHx/RuxNeSQ8SH4oPOBsP2mdy2zTcn5Rvz+Ezrf1kpWRUs0i+u2pXy3KYFpPA1DehiPdXscy77qLkOgIXLndxbUFWPnyIrAIfyOk50brgnKAFm1QAllcEEeZ3ZNFYiOUJpkKE3MIiDmBmI7H7OFTNatWIOX6gNghDH20MFvg4j9GzscwsJvOfo7yidG69fvaNAyLWelN529tZuRIN+M1aMy9yT8BC8ZQK/8HBAKULYzmDc4z015XPoSQQONFkrDIo0EyPtdqccaX//dwGUMQtdyl35GvsvZRSUkqvZzxAcYS7j6ivhb9e7xM7ZVodME/R6UBBbHXAlxKbiHDjZ0xsnd7V4yxE2OOLQnbFy5mQEtjHIw2YthiiYymRify4QCl2XbH9f5SocEFVElV1fURtfeHAvH973lXK4TAuk9a1DFASQA7Ti8i/IfCLGj3w==","layer_level":2},{"id":"e069483d-3ca5-4770-9c8f-148c6015f8fd","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"提示工程","description":"prompt_engineering","prompt":"开发关于LangChain Agents提示工程的详细内容。深入解释Prompt在Agent行为中的核心作用，包括如何设计有效的系统提示来引导Agent的推理和决策。详细描述不同Agent类型所使用的Prompt模板结构，如ReAct的‘思考-行动-观察’模板。涵盖如何通过Prompt Engineering来约束Agent的行为、提高工具选择的准确性以及防止无效循环。提供修改和自定义Prompt的实践指南，包括如何添加领域知识、定义输出格式和集成Few-shot示例。文档应包含最佳实践和常见陷阱。","parent_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/agent.py,libs/langchain/langchain_classic/agents/prompt.py,libs/langchain/langchain_classic/agents/react/wiki_prompt.py","gmt_create":"2025-10-26T11:33:31.887711+08:00","gmt_modified":"2025-10-26T12:10:30.923998+08:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxB2pGRXtTn6lL3fnlpG1ByZIkbXWde1DOy8VAjnYteiQfSdDeMlrpIqd9p3hX5yqRgpdoeV3djeGP3aPiA4k712BR8OpCmVd3PT017co3U9xjuonb0I8Lm2hy/trM3VkmB4gpKfde1fPg21LjpBQolWzyKDC5IMGjN1uStBxqkf/ioPA1OvJ72hM8IEcWaR0RjFLaBA7m9pA4eqo8SsXZwuJMriEWJHnY0qVKyLLlr6iPFGHzN4qDJX7CUJ3zz3RHdht7FnFS1QtdcYM97bi8sY3HFRYJc3Tfq/m2W1pW8Y6WfGVx7IKOtwwGpuE8QwJDbgTGAyTTOMw0hGhD7UdtT9qmGXd38W69g8w7DZ+zmaubusxF925/ZpRgOuCif1I4Z0/IOEhA/9zBTp1/kpG8uqdFh08ujSHp144nzMja/QXqu/Aa60cdLpfA2z40ngEb3eN9qS5LZcJBuZ9qivOKH6Cr2fFBz3+PAfZ/se6kOv5HjjDn5hsQmk2bLCZjfttTcvcaVFIo3yRT10Pr2P4FIZkZ6+AYB+cd+/pW8jhmCF/mXbEf7MC3RK5Ril5EIxBXQqG7/o87yrlUN7GoVR1ATgZWSk0NmfLTjtzFoBAjmGEwslgT1D35Pbnl7BsRZ8QMhlAH4YXFfdyXL8u8uGVdS7aqwxmhalEIFpSGsMngRf5BFES0kyVFyNZssljzgv0WHs4UC4YhibdP/WFjr7kTVOqjUl0+AsNkrnKXpPsNCpQvPl4+AsuULeFGKb0ne9wJ7iylTNpG+MXw6s7hrn4Z1kmVci+ybdxDdeJURqkKV8O4llK9BsBuZV7ME+aRKGydzhkbw5NYU1o/W4MBXSL2S0uoGiKPkyWVuTX26crug2N6iYV26u5wJ4+7H6SpphPxW7+LUSn/z5kwb2Iv6+RWAi4s0/OK4Pqg5ItlnSyUqZkotPDpQtZk9i6LQvNb63jfpq9h3YBTlPIrO4H0xFu3hKpUAPXpVGDBgJpBZx+0UDQdy1J50a/KhRb/7imRPkYlVedP0iKDp/Gg0yr95lqRx/rPthX5mgi6B+f9pA/bwhZBYV+8gLnAmgLH3mzmFDIo0FCRP391jibK11n0WcptFIprY/rJnXkPk9dIiEKVBVXA3n97x/nJs+k2cD9sN0rFM5+EcEsBCqyeyzI4X7AZ5URHmAvb3pKExoCZ9cYJ/3rrb52wM9gVQO3PowNf52SkQ+vBz+XHTxcKbN14mjMyfZ27XDT2NyBwS10f0VXfFrrsi2Q9FuKPD6dR9jCdT/vmQ==","layer_level":2},{"id":"afc5780c-e8f5-49d5-9154-07b19874b0d2","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Embeddings 基础接口","description":"embeddings-base","prompt":"开发关于Embeddings基础接口的详细内容。深入解释LangChain中Embeddings抽象基类的设计原理和核心方法（如embed_documents和embed_query）。详细介绍如何实现自定义的Embeddings类以集成新的嵌入服务或本地模型。提供实际代码示例，展示如何扩展基础接口、处理异常和日志记录，以及确保与LangChain生态系统其他组件（如向量存储）的兼容性。文档应涵盖接口的线程安全性、异步支持以及性能监控集成点，为开发者提供构建和集成自定义嵌入解决方案的完整指南。","parent_id":"a70dfb9d-0144-4270-8d72-8dee18f10257","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/base.py,libs/core/langchain_core/embeddings/embeddings.py","gmt_create":"2025-10-26T11:33:45.561341+08:00","gmt_modified":"2025-10-26T12:11:36.250615+08:00","raw_data":"WikiEncrypted:mlnMCj+10fwfWTIeGKTzgoH0kZ3tF6/inSXR+l6qCerAL55mhM4iQkExmqhSejampDIdUr8ebHUFVGRD4e3PoNfjl98m2cJeEPHYh/eZNOhBjTWCGd+KC/Vf1Btzbct2Ic8MDYgDbLQ7iWAB8yVhuWFaTudiA1X7IWxWPYwbZE+tbGzkhKvSF8d0fl3+1FLgLzJV+lKFpyfeCH28TtqyJJ0TbFq78zdhXy6I25ruhRPqF1CIZB9j+8tSeNkZg7lbFvBFaTj7iqMKHRaBoAq4Xj2OPSiF3cOU3DAD81x00r+Qzw1R1G1Dsujzw9ZMMggx3gStCm88DFhMUFM9J0jvosTPpDykviC4nNGhbc5sjS5XuGQQHcZGq238vF6NYVE+Bjtr8w8drgeQ/cDJosm9m0+bMIiIhkQbHaNHBXJ4M0Stmzaw24lpSBRK3m7lOxis4Qk7v000XTnTEEUNWKDAbDDOiLgYppm/u9OmWaAofeKkgfroeESWS1fPQazIelDUJswGsKBFCrQk+mp8xWn25jydXyxSz7hMpSPiE5YQIBuagYw2KP2iQloacs/kn3H6N4aMA+SkoFeaomXm77vhCnD8A52NuDwns4ze2g/f870m1U8PQf8a8GBeX76KpjvHrqyQK5mtYEdh6GTrrScJ6SoCUzEHlDenSytTheQMFD/WnJ+/N+gS+wbfkObiBD/sOhY+aUbFAch8/PiZml/xmG1UIB3wAH+FQxsn3NMRwrU1RrVbTvmqkSsquOmOlA4AqHvVMNZqO2x335k+RtRI05yX+S8mRD8uKJQBqDeuIRBfMZ4+yiBJY0niI01N29R47kcWsG1Q5ki6tKPuxFTexAhbtKNSqlxhaPEb+fpO9VFrnTIy/dzK2gjHbGoHrnBFlXMouX1qPUyzTMrOHTvtvAWPCqBo3arU2+mn7/d9QHFLwuOQn69BZ+gx1ZyLSyEm196dfEHSjyflle3kHZcLtHckuyKNHb0pYJkk2ZOAWV/wWOdhQxeUxAFVyJXRDlxJQu8Yl+/ufpekQPnwdQbnsOnatE6OW7+VGtYsirE1ZG+JGglHd9HVnNNHA/L/QDAWZuWAlwYUjiHA9XUwz/qqpgeT0Bdp8Al3G2iAJxYxnbKQNaBHfxcsTd7i2PIU64/ZODhbo8I9Nh8guoaSRpgiZhaypZTv2LjYDX9JFmckqSICQ8v7NM5Lwn04K/e9Q4Ql","layer_level":2},{"id":"70eb1963-dafa-4dbc-a6d0-019fc007f4be","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Hugging Face Hub LLM","description":"llms-huggingface","prompt":"开发Hugging Face Hub LLM集成的详细文档。全面介绍如何通过Hugging Face Hub访问和使用各种开源语言模型。详细说明模型标识符的命名规范、任务类型（text-generation, text2text-generation等）的选择依据，以及推理端点的配置方法。提供API令牌管理、自定义推理参数（temperature, max_new_tokens等）设置的完整指南。展示如何调用远程部署的模型以及处理批量推理请求。深入探讨与本地Hugging Face Transformers库的集成差异，以及在延迟、成本和隐私方面的权衡考量。","parent_id":"36c35786-2770-47e6-9a89-1e55a35ae360","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/llms/huggingface_hub.py","gmt_create":"2025-10-26T11:33:47.080138+08:00","gmt_modified":"2025-10-26T12:12:26.453461+08:00","raw_data":"WikiEncrypted:sSA+Mvj6afTyAyTq12rXzU+eYGXC1FZvYoqhAbd26J4cxFzefVoZbcyKoX9KpKvHQRpV/TMdyhi/fGdpsCxddLoAVQF8WLPhvHdfxbrBZ7LQ8SWmdtiDnzPZSVnsz23lzhvRAcX0gUh4O7bkUVVQD+2+m4iKcj7beXbagI9A9pplJoT4TJe18kC1wmWRGnSA+nOpi25hJzlaoQzJI8yYk2lcA6Pzw1PojQjk00hQkgzBJEWTD6xlSu+ANNFB4Zuwfpb/FtcSxgqMmXQ6241rhVkQp/721IXgb/dtfvf7bKDAXJ45CfF1X27/IuTZBFkFtzBHGOvZEYNTN9Byo61NAf3UjzWPpfblOLSfGCPWQo3V0UYkpxNAmneB2foRJ6Z+1nvsWgV0YIXQvyf3+0tsDPlx1TgoRJtcCUZ9jHIGx2NH9pszz7cWbx8cVPgykYJvhg207CKVaXx7EFmh6AEJ4ry4tUbu9wYE0BzW3EfURuKlAoBW7ndaqrgkuVicik1SOJxhoCPX8o4XoCPEnva47k7Zvwx3aj3RHR9ZP9omaiYu6So9A6/Q3mMJ2sD5Cc3G8i77zuQA65Ayrea4Je3ySIXLYhf/JEMAyG8IzDyut8z+248DwqDAyBNOtPj0ZZLy/elozuNhxtlAMn9BSfn4p5LzKlcxKoqSEDgvXqAVEm+BXrb6cFtSa9Ru5dJkoeHMS6c/VUpc9qEqwE3nt33Km1r/rfS3ZHFEp+L21/D5NtFyIZIHSpBxcljIu+2lVgVBuncq8G/Qvi7oorT3bOGptIouYFjMXHhhg7Ah2gITr0XyoK6LpnIz0i/arCd5hZpN2AkA1gOVpXFKzzwR7dhzVs7ok+L/gIJAazDVLqGtG7o6wdPUoRqZ28W9wZzzvttNahtWoFduhCzTiqTfnMaB/pXvhiKUlDBthUXpJ8++9DkXJDvF4d4WDgtaUr4xqVBVin4m7VTBL8Cs61OebC8LLK1mTqTdzlcMQOhNpjqxPghWHNfo/RIP2fMLk0jI8hL0ySOMISc3V5rwjy5jE2PMAwfHXrBEMN8NiDPeTKp0quAHWHvLVE6e0T9QHRQkavH5CNBUxvqdEEf0FOuGRPVLmCx3KRVZaa0F/1jEkfId/pxE3BpwrA+1lBbuoqT/ML/T","layer_level":2},{"id":"1df300eb-f97c-4dc5-9ed7-39f5a63121c6","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"数据库加载器","description":"database-loaders","prompt":"开发关于数据库加载器的详细内容。全面介绍如何从BigQuery、Snowflake、关系型数据库和MongoDB等不同数据库系统中提取数据。解释SQLDatabaseLoader如何执行查询并将结果转换为文档，以及NoSQL数据库加载器如何处理文档型数据。提供配置选项说明，如连接参数、查询优化和增量加载策略。包含实际代码示例，展示如何安全地连接数据库、执行复杂查询并处理大规模数据集。讨论连接池管理、权限控制和数据隐私保护措施。","parent_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/bigquery.py,libs/langchain/langchain_classic/document_loaders/snowflake_loader.py,libs/langchain/langchain_classic/document_loaders/sql_database.py,libs/langchain/langchain_classic/document_loaders/mongodb.py","gmt_create":"2025-10-26T11:33:47.276436+08:00","gmt_modified":"2025-10-26T12:11:54.765695+08:00","raw_data":"WikiEncrypted:veTYwq2y4io5qXerCTrkkHDSmG7jT+QXx/qebiLy8S9IijmUPQGygLBgb/Dttj4w31VgymNy+UJw7/3NIVm7tnNUf5pCM3za2Kk1WMzIoKrYQXDBSJPNt4Yjb9WHVXFm0ei2ltsFsiicKh5g18qzWRuqr3+pKdlZ0cEtX9VV5Rc2AbTUpkVak6Q+81ODf6gboCBVONrOw6Qi1gDg2tKnpP10q/xC3SqUkuagGoHbTo+bBUU0OMb2TN+DFEpBl3p9FGq0q/t0RxQVD7RbkrYi9l3baV53o3N0YLlXh7/dm2wjd8a5qo7JrwXxzONeb1PiZTNOPol4eUyEqnIgd51jqUKiPxPQpxkloF6zVyLu0HHsDcT8ALTJvFutNiduF3wCNHeV/YlQa0qvANmZYBH7AWVQvJzB7kFhaUr/ZKDSSbQ0tu6lzSxDxFpmrvcMzdjfOxdGRr7A96jF0gekENetO3MGuKmCqkzGiZMZKZQdFywJ5XxYpOtObXGkJJTrpIdzd+bK6X3Ms1niYfrSpwl95uOT22kwHZr5dW3eu4apLoQsazXS01bz7RYpHRerdEXXdooRiVwz6kZpu2aOYJnylRVCRHL1rIOpEi8VS1ShodfWsjB1hAx2EbLWBXodVuMIFf8+GLz77zbciFOCVjzh1e8/N5at4t/mYGYulMv65CO+R8TPRprpj0uC3RBvSm5DvdogBFgwndBe/b4UbTUPVsozE+tvijzEuN0jm4n+OLxJbEysKMIOvM+riajdIW6FME9EP4zzdWHvCl3PuYYXDteRkL0LDBd/vOaTQt1HZ/34kMrMUYbdidCodBOpG5AX/6YLGcDefBxUEC6WQRu68phhfKuH4wC26nDimi3pnzNeUbl7iKsrR+NBEmSFNUGxbrGVTPyT5lOnqJoH8zw1jBjKlZ6OKYsLZ8qrAa72FMwwDn91Bwp4/n4TUPyp6rMyvAzicaLx+Sl99hAwzt/gC5gqxOtvsik3t9GhqL7BhBFGPrI9M71fWAltgMQ1BupBFYCJcqm9skUHSIa3+NSO7LiAecFiC4z+fIj3WchWAewVXeZX6ggT1Z5QFt4jeBYxJZXnjo7stfB4igqVnkHj5f/ba4CPs97z55a352NZKdCbV+oDcL9Yk6SiYiVOk+p1esnm8voMCnVkkYrjmhF8Cf/oUneW7y+6PzaoAcGSlbnRDFpOkTBRmPGbC2MQF7fogCn1e4gZBZx/sJxyJ/MuStyd7Wo7S3vYPcQwzE1U4tKn5hdUB6DzIhmUwBO/YudcAMmZeL3afQr+vRrlqCyVX0P1yZHGzIWDHIe9lIaC278EE7TouquDwIySYb4CxJd/71trYvp1fvgUak5qZ1io5DDTUTxiigsKAHr1b8zqPIk=","layer_level":2},{"id":"8a91bead-2193-4ee7-a9b3-b50b08cffc90","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Base Output Parser","description":"base-output-parser","prompt":"开发关于Base Output Parser的详细内容。作为所有具体Output Parser的抽象基类，解释BaseOutputParser的接口和核心方法（如`parse`和`get_format_instructions`）。详细介绍如何通过继承BaseOutputParser来创建自定义的解析器，以满足特定的、框架未内置的解析需求。提供一个完整的代码示例，展示如何实现一个自定义的解析器，重写`parse`方法来处理特定的文本模式，并实现`get_format_instructions`方法以生成指导LLM的格式说明。文档应涵盖自定义Parser的开发流程、集成方式以及在复杂工作流中的应用。","parent_id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/output_parsers/base.py","gmt_create":"2025-10-26T11:34:01.394488+08:00","gmt_modified":"2025-10-26T12:12:40.610141+08:00","raw_data":"WikiEncrypted:119caxD6gInTSEAd6qkOVtbuTj9iZV9z+NLVZlv/7LlbRbp3loIipPjugiYXcOL6j3iaNDw7d0JHnIVULXnWLPegdhLCjs2J8JDtoJIp6JslETr9YIw/SCzMB+iR8t5YGMlLbetYqM/Kvl8RXidbACK2V0aCl9rE3fkgldMeelRUoL3GOhZzmVtY3GP1ehQWiwie+zS5xdpmqqBk3/h6XHbQWG8y0Sz276Kbb+vFvCc23kJO8O7nDQefS7g/EBrC/dANcGW8mFvvhw8VxPmTNzgnECotupr6deYyw2Nms2sUt9f5madqNfCZ82adk/vrvVa8IE6rqFoufTE71b2+c9LCNvwPdzL7X26Xq1R2qsLcdx50L9zL4Ienont33/76mwMCqT4VmFgwzR93hNqS0oyTugW0PV8aypQ/sVwSy+swHewDuDoVzCDrSfbPrleRx+KQn92G5alyJvzwFHyFIfy0am/njGDUhOdOuI9RSKnmrHvt/9zyiGY01MMi0oGuWcwzZ5bXaMoanLZ0RQqDHCz27xDl2NgfnjuYqWuFkZDS0q60TfSBOFxvJOFAwzo8dwtzHyAaKpnW5gA97p562sog6iYiEn1810RZ4oVQWed5iqV1dQQXh2yF1ijkhTYUjC8PrH/fmv4wmVWVnUCVyRp9lwYA1oOYFjP7HPqCXcY/HPmE0JfiY7AEecTxK2Br2S6S++RwaKV7pzjofE2pkF9vS16mou4MbNb2f+8RpMprxQfUtYU2Z0nRjVOokub+Zew7R8P+04DHJ/xxdMb4t2cWrDkVkmFFeXJW/rGajxH+u28YfXNgDO2oX8UlKhFReLGMk5053lP5nn7k/jMHFXIa9LUBSq+y1xj7206a4/WAZTd0Z6h/6JKPondiFB/HwRJm42PcF0hfTDRZXVIKfe9OUYQet9WjTgD0u6U/ABy1NdEJV/KPGQHJeOHjpm+gtSbDSHiA8WPaTPMBYdsdtHDmRYOTavsR2vnDvZgX5sA3fanKyo8G3fbgpEXSuKGcBYfseSwkmM28cLnS/WZdjRttS9yiOxIhVR0i8EQk6yNBGl+ocTdoz7hnlNkWmeHnu5YfI+SpOjEoiJEcWS7MSQmuzoLixiw6+IWlqJQkG1AckZwS1wH5X0hGqJmYjpCuei1Yblx1pimAGUqRBJgOqaWII667KCWMJsOaxwUg3BgFTtz0PEx5743hRppe/Wzu4Y4nJa2qTSC2Q+LR/tbkq3VuBMdy8UqIKHMD+q+FGOA=","layer_level":2},{"id":"f49da6ad-9a41-4fc6-9122-a1a6c5f35a24","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"上下文压缩检索器","description":"contextual-compression","prompt":"开发关于上下文压缩检索器的详细内容。解释其如何通过大语言模型对初始检索结果进行重排序和压缩，以提取最相关的信息片段。详细介绍其工作流程，包括初始检索、上下文重排序和最终结果生成。提供代码示例，展示如何配置和使用上下文压缩检索器，包括选择合适的重排序模型和调整压缩参数。讨论其在处理长文档和复杂查询时的优势，以及如何平衡计算成本和检索质量。","parent_id":"37c063a1-2c65-4467-baa1-3de97aab5352","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/contextual_compression.py,libs/langchain/langchain_classic/retriever/document_compressors/__init__.py","gmt_create":"2025-10-26T11:34:14.965988+08:00","gmt_modified":"2025-10-26T12:13:28.273279+08:00","raw_data":"WikiEncrypted:qiOE1k1TA+YNTXi1/8EeGjUom4Ud3kDsyIkkQpaXkfZC5K61+dZyIXh8HX3ibrENwyhuOQ6Yfix7ops2Nx5tydRSmuTukQXK4/H7pPg05kzK3Vwg/TQ4PLKueTPFjOCKvOntZhg/6gikZmMV+JXAAw9zY2WYYqRlggwvi/qYVKj6x9rvNsAzzxESJDx0C1XqLfPQCpQpPjL8PHrPvA3YOPHAtdWHbRbPRpuVXEMyNPSHzXFuhQ7BmY+ejvSrS5jG3aRZbcA0bldOarjUjEVe0VpQCNPL30O7pwUSl1XbOqGvccMvQrWaKqv9OI/z9HUNMorK96R3E71e3axQwsR8v84xz4+jnNpu5kzdR1MZXG3AZfM7nWTu6E6TbjKPZ1obiNY3/FnyZhJjBRntKgaaAOZE+UHlb0CBNjecz64sad3hvZpY79rQSwxFFlM7BufCkVXeX/a1xx+8/uKnPFmXzDNeMlsaAq3LwqOL5dVFkWKyexuVoA99aNKYIAipm2YW/PupCCpcIYA8GfZeu5QezLRpFv1ZpU8Z+XtVFsYIL/tbOFmGIrYL/4GGQGyLussD5BcgbSVaWTD1sdKkrCnWHmElXEGPEQXnCy+zVEl/J/aZKLjQEUeco83CngeUxt0planXV0UyxzL91yZ/6UfwTrA1J8RctbiUrobSSQYYkze4S2R+CIEH4cUINBBnkQjEttLDcowIvqPvjt2NjFNyjdJk1FhQy7jsj+hG4LzutDR1Dds0ngGIu4KkJIipHWiqscogH9eSA6HhXa/0pdBbZJ/Weg5JvpZ5FTGZnrQiC1lDPq4mMWvfxZA+THGfi6Pt1qCk31cVv5XOpQQ5BBK2WUsgZv/z0bQUKNel7OjCZpFps2WcdcQoyKwtAovFqW2jkl4ow96T58Qtb4/omdIl1+fVBIlW4wn21RYgC3f9VkGvdqBYc2UttTdCijq99YWtLrQpvkd5jMf95m7uXkBlAezlB6kkkk4TfOWUpZT++d2UfHRHukP+pIqykcozeWpISzL2+yyCeb/I5oSlzXEXYEg8IbqcWOwt6CxnyzA3Ae+ekOI9tuzy2EoK/tp1A21tikiHhPHWwjSM0nIv8PB3WYUquXeerzhZwJlbNodUVwJsnJs2qb9X7jOE01RMxfKVqENn64v5TxUbEWEw4pqBKhISb2l9QQctPxPMRORXmc/IZ5/a+4SoodWCBOKvzcEWuXIodoTVdt1N/exAwpckgg==","layer_level":2},{"id":"df1c6888-1986-489c-b529-b7dd3c6ccc00","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"基础接口与自定义","description":"vectorstores-base","prompt":"开发关于LangChain Vectorstores基础接口与自定义实现的详细内容。深入剖析`VectorStore`抽象基类的设计，详细解释其核心方法如`add_texts`、`similarity_search`、`delete`等的契约和预期行为。指导开发者如何继承此基类，为新的或私有的向量数据库创建自定义的LangChain适配器。提供一个完整的代码示例，展示如何实现一个简单的内存向量存储或连接到一个未被官方支持的数据库。文档应强调接口的统一性如何简化应用开发，并讨论在实现自定义存储时需要考虑的性能、错误处理和异步支持等关键问题。","parent_id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/base.py,libs/langchain/langchain_classic/vectorstores/__init__.py","gmt_create":"2025-10-26T11:34:17.684481+08:00","gmt_modified":"2025-10-26T12:13:58.810347+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyDRNp0h9coQRretVc4mKiM1JPWXXQ9f4bGMI4xZcnvUZn6BpH6bgDL65gcdQcbuohgLlyFULEHo4kIkLhQhDvJYujOx/1NWQ6yO4wM4+IdliyQ0xa9M7ObxEY6NOwBXTDn5fJZI4c0Pf/5dnMTpxiSooCwUGtqjG6One0GQMlm7mXpHrYASU8U3+zrgGSFp3gwrS8IQ+ffMxT/mLucSZC+3EKg7wJ3HLIFV+Hs5KpQ5CVPc6Gy6WjaCpdtuKugCZQe8F86d8ZfsXC2L9aW7LMlQjKJNPKQycs7owT3E0OGVEgLOj0yHzBdCWsjvtS/w8fdhKfOz9pglBhYh6Vvqlkh7yQJpvnaVvC8ibQ7rvJaHTJmfy3Qcb7+C/vMAdiKMFFUdCENkU5VJqlI5wtj+i+79TKCEaQOKKBblYL/34kBN2jxZYE2mSc4iiKyj/yC/6vGQPwTWpsaQOmFmcbf5GLpWwfZbUIJP1IyWkxvUtBVUFVLM3y24iHzkfShI38ibAkBcXvihJeLlJwyTQQUkCPuXAuk8lNy3e5TcY6LKlMzmECC+6Lw2994VlPHicednit80+E6sUxRikcUQuFoan1oeV8tJoTZ5pPv4lWk0TR4o5VW8l7VWthYDCdG5dnBbNj7cata24VWZVXMm8CfvScy4j2dV3dC4MpmljyUCNvxoME7uDckXcQd/DV7cpymRVoB9HQKNcvc+hkeO4j06mn6uxS3a4vTMdMCM3Ht7H4AxBvOQiWDdn4S28pUdALu440XtxsqzKOtvHNDh+yfC1ymboP/U1OggDUoosCM/+j3GkxpQHwhvvEn+fAOf+w0eTFwq7CdWeYVFMLjXXO205siTjhVdq6aCKiXqMtr2lAXxCXCH1/vdqGKpB/64gPGCRtVt2ZqunR9r1qZt/Rz8sXHiSriRJuBgPbUaCc4zLLvoFG2xhl6zzXmkQmAvXL4oj5Js4dQumSgBs6WHxk52K/7mGUQtewE5eyOJAZF2sEoaY7wU8vRWEAiOuvwskmYB9PAjABzx+WQ2p1z9uvyrgqnvN0ReR5gopJn0rFvvv/HIRN6cQ3DrjYEtzAfMTTmTKvAr05ENSyeG0DPOgRxjKB48XFAT2SkE8LN8J3d1JJBZQqOsy1riQy6X95Ev23BRyWGXwmBHUAsmTIdHPGzO8pifroUu1/MEUf+eiu82pjEY/GTTyDtSHGBHR9sWQlSLn9u1C3Q1BffdlwnMdsUXFHTpHzCZvsCVknsLg/30vl8gGSt+AYc5YvnNPnfssErdXnoRbXWIZqQ50m2TxG9vX7YbJKicCxGnkIbDVDyxu3yoe3eoOxSuVambDKgO94Jay6Q==","layer_level":2},{"id":"4d188051-9946-4c4a-b1b1-49b064a4e9f4","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"OpenAI Functions Agent","description":"openai_functions_agent","prompt":"开发关于OpenAI Functions Agent的详细内容。深入解释其如何利用OpenAI API的函数调用（function calling）能力，使大语言模型能够与外部工具和API进行交互。详细描述其工作流程：模型如何根据上下文决定调用哪个函数、生成符合函数签名的参数、执行函数调用并将结果返回给模型以生成最终响应。提供具体的代码示例，展示如何定义函数描述（function schema）、初始化OpenAI Functions Agent、处理函数调用的执行和错误。文档应涵盖其在构建智能助手、自动化工作流和集成第三方服务方面的强大功能，以及相关的成本、延迟和错误处理策略。","parent_id":"baf186da-7347-4a0c-a819-e4c5f5225530","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/openai_functions_agent/base.py","gmt_create":"2025-10-26T11:34:29.246495+08:00","gmt_modified":"2025-10-26T12:22:40.990082+08:00","raw_data":"WikiEncrypted:1t2xk0x0toCJGX555w2hvBW3O5CDj5Uu4W6iBEKQMaqU0FqWDVy56gtw9SpYt0a4jfFnOXWWkbnKy5v0Rg1ZCTH3tLSHZfY/BOsPhRXehw2BhRdqleQxgJQ3M2lNyRJmqtBDRLooG+HBcPi+nQkLkw8FKOx3ohn8ENSNxMmxEqQIoVw7llX6nd6wKc/3PMpgNzLCeGCGvp4huddLYBaiLwXWpraFeae9NGGfgMJxJX1W/6eytUxgTgpZfMNFQoGGtG1C2Ca/KZpkjP4CmaxCoZhW85AlKCE6JtaSxfsFYwrE17GVs93nL2uXoY0kNPqD0DmeXmKTQBXL4vOB45IVCujPs1d1DRofE9sL0Q1sU4pqoCzMpDdVbRfeHakdqwpAofnMwDNAXTO2NYUjdQ9FNKaq4EByDWll0PueGHq2N+MDFhw2PtvMjkw7M1NvtMfygzJr8hc0VKqmOr8x5ijdu7QHWgozAtHXyhq/UOg3GdLjG63nYpYmB5C4GDe/CnTN49AGE4JwDVcZ2nHpK5CqsvHq96govU6FFVdkBfheKMh810ZOxv41ardTf8YKKrvHN6RSmMc+exsgX7kxqCI31JoCSVENNxI7efgcB23RRiMJEpDy1jm2fGErwlvwFtIolDO0f7a0KW6nTcnNL/OsS5fX4DFeJDvbJjB/nTxuKWjz53ytmYOflCtno5ObXMBP++tyhud8+lX3w0SA4xR9rO7/C45jxTGnbiGqIYmvXx3gq7nV58GG5nk817YcpolF7G7qvLl4kCJcadxPaQyM0+kPjrMJ2d8eaKh6sxELM7RiAtL6JZ9qUp/0dLXZWztenqgvgy+qKKVjVOr1SPEeK6rha7SoJhppCteg/UMl8d3k6I78U0uw4a6tKe7f11tRaAPvOBzjucJrsgPjfwBwdgUmAsLjnDpPR57fg9suuXjC2Mhr15ZvTZlIXJR8+ycuftgJIKw8zcSdtE2osC5ElyqIBunIXaIJ4+Umb7L60xdW5t9tR82o0yASA5eeLld/VSBUKNa5b1PKFSZj8RLbeqUF5iQzcb29bXu3bspSzGO1U3o4qZTLbm6r5oovDtoY9wuXreNwKxRbPdLEOJ5LpWf0gOGhbIBPBIJZKTjLpsLj/TeKiUDVnI3j+IKAMWFcBL0tbLUHRvYETp3fqayXxgnUsQsgY+O4VL927qucxFbglfqwBl56LkpUm6xuTPTUZzOstaEe5WM6uU7rG6kNeXtxAU+Y6Zsf9/sQN7JuC5lI/NS/0KUinDFxATAIp5wt2Caj39yLroPGip3jy5F05sGJ7WYOldea8xbRMgjQ/E8mDeAEWpND/XJQof8X1C0O1PgcmQTqrsJkVyzOLz84qLu5wbIx52MPPZ8mVrTd/aP5KEDYm0jsBI7fKY2Su4Yy","layer_level":3},{"id":"892d4202-e6cd-4923-893e-fea64fa14e57","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"工具执行机制","description":"tool_execution_mechanism","prompt":"深入剖析LangChain中工具执行的底层机制。详细解释Agent如何解析LLM输出、识别工具调用意图、提取参数并执行相应工具。描述工具调用的调度流程，包括同步执行、异步并发执行和批处理模式。说明执行上下文的管理、状态跟踪和结果聚合机制。涵盖错误传播、重试策略和超时处理的实现细节。通过执行流程图和代码追踪展示完整的工具调用生命周期。","parent_id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","order":3,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/tools.py,libs/langchain/langchain_classic/agents/agent.py,libs/core/langchain_core/runnables/base.py","gmt_create":"2025-10-26T11:34:30.18444+08:00","gmt_modified":"2025-10-26T12:24:07.482853+08:00","raw_data":"WikiEncrypted:EAYQD0IgHs906QemzR3vshlt5smqULEPeNvgjkNBk/oKnIflsVuQ0ayCUECXmG6OWxk6bRM/YnpDBfSejy3X2btAeZqXUEgIZm56rX2Cg2OcgPLoB5VoRufNTjSndFC5MGxU8k3UI1JDVXxaMgqvNGiX1PJXv/8d/As3GAyKHe2GrJu07ki91cfGb54aAMYWPIqUpwPDVmFePv9vY9p4nelmm1urCU/sO/X+ACYeGttrTAPAV1jzouowsBFi+phayVcDaFmUTS1wK7dBhvnjEFHk2hAPoKTu/TCvg3eKGejhrHKTUIeL4Mv/kfmCUSji6siuE8kvxUVU5mzHXbriJANOggLhfZyN/JfWdU8K6MhADf402+lWkUeYNh+Op9EFfSnvE7fA+CZqKxIq1g12BjrtiCwk0Gp/5q9qc8KrGePoE/ZbccequvyB6hEYahCmgeEi8XuAvIhBFJz04U8nEcFC4Mfd/JyUXIOBJSSphXg73s2eipLltVsWznO/e9ZCioMNPZAPw48IRrBxLtxYUKLkYbWLsXk4Sf7XCpl7zqpYd8kQs+8nZVqm1BkKn9Bs+ktkuRJrjMuA/5flm4SXaaN1unwW3eZauvWuWi4ZaJhw5Enof8GTCiYhalkduRTne73qrhN+FQILmSj1EE9g81CYplMcfGNHIYHGcAQTEepcvgeidb+TAJyh2DQDlAXRF5snQZmroT7jVYrqR5EUeCl4i7E0eXI2DwYw6wTjwBY6LXAUMfWL1/lYFY2NLYfW/rYG4uH2sslAnEl++rqa2mB9MT+AhZHTBxCkwDMWSeepZXah45AGkaxJmWjwvLQqS7trDH39w/mlXcRhyrAcYBmb7Kl7BKyygkQUPh9iaDLGRuirsFP61VBxT39kZsNSgjF+/n3+TOXKfjt84s9+V7BEqnHXfpK+9CKjeu3K/S86eTgHa5RihKpsiu58v1N8fBWJOXTHEMO9f2p1F5+Vvkl+JLb9DAgQux/grokRso/GQ+lBLSBdcBupz1YjgV6lPl0xKTxMlLiDG4Tq2OHCyF+Nqi/HnY1/Rt4yM/1fdGWzriY8gz9k4Kx4wscsR0JfjX0rXcwI2Kzf9bb4Xw5iPuUaqcvZPMorMz8oSCe7KcM=","layer_level":3},{"id":"a0a3d4c2-a838-4254-9a06-1cbf7277dbab","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"文本处理","description":"text-processing","prompt":"创建关于LangChain文本分割工具的全面内容。解释在将大型文档输入LLM之前将其分割成较小块的必要性。详细介绍提供的各种文本分割器，如CharacterTextSplitter、RecursiveCharacterTextSplitter、HTMLTextSplitter和MarkdownTextSplitter。解释每个分割器的工作原理、适用场景和关键参数（如chunk_size和chunk_overlap）。提供来自代码库的实际示例，展示如何使用这些分割器处理不同格式的文本。讨论选择正确的分割策略对检索增强生成（RAG）应用性能的影响。涵盖高级主题，如如何创建自定义分割器以满足特定需求。","order":4,"progress_status":"completed","dependent_files":"libs/text-splitters/langchain_text_splitters/__init__.py,libs/text-splitters/langchain_text_splitters/character.py,libs/text-splitters/langchain_text_splitters/html.py,libs/text-splitters/langchain_text_splitters/markdown.py","gmt_create":"2025-10-26T11:32:22.235458+08:00","gmt_modified":"2025-10-26T11:37:40.668615+08:00","raw_data":"WikiEncrypted:OaKalwwf1v+r15RVxX4Da00mh3eX0ay7zfcB5bpFvxomv6kpdSickTyoQI88sXwEaYaObXWatmxNwKYU+79dNidamgGg2tvfwN062PggNW6UBZe0ZHJHJgTd5XYGz3S58DNQcZAJw8sn1luV8UCsKOdHOR+QgreqHNO8YapRbthP7gelieGVjTqckqrcQBwAvKm0IWAq6Y+WPehENs/+MEaUE7eZ793rYE48fUq3TGNO3ILF9xaSkLnKreAib0EEB7Ix2XP/A9hqvRtiUFcNONznCO4JTnLejkhj///wNNQ2PweCjkB5xlh2QZ+U6jglSNar/8ioZuXMFcEuD9s2oSrJSldfr9o6K5MszOOG65woEwPqKhOZ7tFQZjEck1qw4+lEqIZ+l34lUGwxctkBKQ10XaxAD1FICox4mxm1SgzO8YXcoP576wQGb1zGki1V+wV4U23JaRSBmelEkrvy1s7cA2XQVT6YDpAulIS428BySit2zwFvxLFAsbMHooOM41J+Zkc3e3YtZfnqFCxL/jKh3TuscMrM0/GyfuASoYnwwrvRgFEme1YQfHU1+MZoSvSfhimA63IK+JJi5BAr0Z3GqV7woyqway+GxvScsWFzHNSEEGG3ijT2IwPLD0g8/gJI740cUGNrg1+BDV2dzk8OrMOCvqOw5X0CylpYk+ciBK0YG+OJiiLNd7Ul+qhanyvCbhFkVOppL9h098SYSwEjOVkj9vuIqsYhNgCuazzmIpDcky5yOu6ho0d59f8Ximh1eIOMN9Un9zkmgToyB/A8Ubt8yyn9E76mSG34QmQv707YmIp2KyjdKV9tEU/2d/aNpydAsnnhZDY67IPvRZb/Ssr7E7XuX4fhd4Z7oAJ/lVrBgy1Jjw9+Ybo3Gj2p1SFZJujenYTO1iLVRiqvx1Y1+VmCVR/8TYgXI2NHgnnPfkP9+FXLwlLqkMKlj4FOD6bMihP/JKo8qNMRfm9O80UC3SOKz9lu/GiyIV5vwjJSlxcSmpXXNErLNXIw06saQA1GLtZXF5duOpVu0JH8wIcqob6Dfj6k8pHyrVMRpG6xK8HIupGd/CvPvUg2s5qT2iZmSirZXcBnNMKNsCfNmtWP2o82vEfRd5TmPoi9wZOqy+FeSjrSMJoUIm36XK6cfZG7ht+utmMt0V62YMcsLOq0mAhgcA/aSpr/+U0DJScSl9wuaukW/1oFPDLSJBkajABp7epcyVzmqYGeco0Nu/8J2Qa1edvJ3eoq0SaP1p9QcGz/sVRcPIH98H2xMl4rxzDgHpgmav/W9VZgz60fIRCIT0DzdDXwiGqiqhFn3XwtF5ncc8d1BB+tbzcdEpGdGTX76c6QKTfr9JbGnd2qileXz/E/k0LRbniVtUxWHqH9idyr8ZBcW3AASOOIZdV7plG61iQcmlNHggR1ulvb9e/0s9LTRbpcZkDdlclR2ZpDStccTe6SRNGz+jdche78"},{"id":"74fa34da-8c49-4cbb-92c7-0651175b6e44","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"MistralAI 集成","description":"mistralai-integration","prompt":"开发关于LangChain与MistralAI集成的详细内容。解释该集成的目的，即为开发者提供对Mistral AI公司发布的高性能、高效能大语言模型（如Mistral, Mixtral）的便捷访问。详细描述其支持的功能，包括基于Mistral API的聊天模型（ChatMistralAI）和嵌入模型（MistralAIEmbeddings）的实现。提供具体的代码示例，展示如何获取API密钥，配置`ChatMistralAI`实例，并将其用于生成文本或作为智能代理的核心。讨论Mistral模型的特点，如其在较小参数量下表现出的卓越性能，以及在成本效益方面的优势。解释该集成如何封装Mistral的REST API，并遵循`langchain_core`的抽象，确保与LangChain框架的其他部分无缝协作。涵盖模型版本选择和API使用限制。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","order":4,"progress_status":"completed","dependent_files":"libs/partners/mistralai/langchain_mistralai/__init__.py,libs/partners/mistralai/langchain_mistralai/chat_models.py,libs/partners/mistralai/langchain_mistralai/embeddings.py","gmt_create":"2025-10-26T11:32:50.905305+08:00","gmt_modified":"2025-10-26T11:46:15.600575+08:00","raw_data":"WikiEncrypted:oQVzyUDPsv/OMQYnPxU9JIFVsfbRDfqO0oQjda1XjRmLMVkYbE2tJFwJdCyNvgE/jOcjKJFVh101T19onFUQlU9ntjsXT4S537feRwU4vL3dxz2haGe4hvQRPayQiff9jDIJMnMXDfqBOkHAGEK0Rnkh/dXd+EcrerVuUssr9v/7Xppk66v6dhi7rDoKwopIsq+6vIQ1sABhZ5S9bd2dFt9h5hzSobWGPPUPJ7cztkkOAx1BLeOuxd+6sXzxoP/4KRLsG2HkEMl5ze7XeWRdS6tmUMygh3xFfWhOtbR7DUdcB3O3yzratZi7yHkd5Hoxb/s2rCynsaa4+/Y0+OHU7fj5ZtuW9gZ5wpnSpfBVYNEaLpKVhXh/I+c07afOXHigJEP1tDrdcydex5VutSBaufNN7bGJ/NHi23owDyT9j+MK62JYJICZe5rmoOXNyuKq6LBVM4pt5A65TiSL0dg+H4o8y8idNZ6IWwu7yNPn/7s1m3cmz28HAJC4lvucp5NJltCAltmUTf32k6SwnCeILpJT3vbImPifBR2UBYv8mM1GA8nHLGnUrwyoOAvw8JSMDE7hmlOjrOeT6hFnUVWOPrlV1Q1XNfnEBOfG0YnnH0oQR63qcSaezr5hvR28St5F+rw24/XGTWXix7S8l/y0MP31PbwkRkjJWRiLdOvVHHnEKMo0aJjjXXabE0YpuIzSp01Sse/M1tPYxSsHIW+BCaZtfdvaS2dod1Oki88S72q6SKTmwWOfNNgsyIFNjq/UjFmk6g2TebzYW0oBwXBADLsHxAj2VugenCj5UgEFyl4VxcpVdQZUk+DwhKU5BjkEHLcBjaLk0/2yWxMJ8ecHbijHLFdGnTxRcmYH8EWEf4mKmEub4BZIuH+bo6e980uuhr7MBAqMkkYYUfDIiy13cA9XCQf/0sdkh8hOlJWmn+BSLE7Bg8zGcZJDTILRCRJA938D+0GS2kb1FOxkg+blF8ZOywxYOpf+kIXMke3UsmGLdFFdNjJacsUGD1qYbae+kP4lbiAg7D3lj6q739Fqnnj5DcmCo2po5YRjF5ZwaAU/dLS+Tf6CoF16lmypS6DJMqdxfEx1uCya0YiZU8FIwE/MlwWswRjQy/q5ZfThz9HmST/bUDMztvWaUFxsJEq107VJtNQUSh05yG5iEVj6Ml9Y1TJtTjOPrgT3O4VOU4u3yc+ixI5QoiGxhVOQx5xr4YIj6XTUHI1WB+lJT0fJtk4D3wNxPlNu29TT14H8AE3xfrV2e4D+jxrg6VDALIFDozKoJRUFfWCZ529ReqwGyNPm+hfrF7bKgeM5y2aM3hb9GAUuJAqKM8G15Nit1StbbckqlZ9HoqHU4TpSCcGM7UwumlBi+HiXfhyxwPiv2nj+XRrRzw5vCkn77QnxXMxrXfuCE1DWcMHzIcTSqKY4tlGR1GS8EFF/QssrFdUKMNEQ+iHqUq6zA0OQlN7yG5qdxEMBbQOM6v3aSv5hB2Oohu9GTkT4pbJRZTV8LEtLs+XGDXt2PDMTOVXKJySFFqaJ5EBlDDJP5xQWl5PRp5uyOlMIQSEEmTzHlbREoIZf+RaqszLqUvas6FCDpCItegSyik7lF5QDtYEcO4uzc52XstsbE1CMYQwKJPvtL0YOEbqMvxydgC210k+HtrWtLjrWBVc5BgyjQ/uiMdHkkhJz4Q==","layer_level":1},{"id":"a70dfb9d-0144-4270-8d72-8dee18f10257","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Embeddings","description":"embeddings","prompt":"开发关于LangChain Embeddings的详细内容。深入解释Embeddings如何将文本转换为高维向量表示，以便进行语义搜索和相似度计算。介绍其核心原理，包括向量化过程、向量空间模型以及余弦相似度等度量方法。涵盖如何配置和使用各种Embedding Models（如OpenAI、Hugging Face、SageMaker），包括API密钥管理、模型选择和批处理优化。提供实际代码示例，展示如何生成文本嵌入、计算相似度以及在实际应用中使用嵌入向量。文档应包括对不同Embedding Models的性能和准确性比较，以及如何选择合适的模型。同时，讨论成本、延迟和可扩展性等生产环境考量。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":4,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/embeddings/__init__.py,libs/langchain/langchain_classic/embeddings/base.py,libs/langchain/langchain_classic/embeddings/openai.py,libs/langchain/langchain_classic/embeddings/huggingface.py,libs/langchain/langchain_classic/embeddings/sagemaker_endpoint.py","gmt_create":"2025-10-26T11:33:10.89879+08:00","gmt_modified":"2025-10-26T11:46:00.506311+08:00","raw_data":"WikiEncrypted:mlnMCj+10fwfWTIeGKTzgvr8AaKVFKC63gDAja5lQ80xTD97BIsqkE6k6NeGjqsOsH0eleiL4shiROlGowEVcR9Ab8U1+v29dD9V6rkS646h8aVzXiiCpr+4loCbxfUEczBDwIOYK9z+qBJ+9gvRiK8iJfx64I8Xj8Ic3M6CTJ0crp5OjFkYcfg1P026KYCVNl9taXBYoA7NaG/hLGk9wYgvokQHDvVSrFL45vmsQCHNG92d5y2VLNj9J8AcJZAtzJ/HZ1/pPuZu5fUvhDlcQIMkNvsVnTK+rCYE1HxJnqgNEPVYe8+/WguD7X3Q9X6Zjv5q59kYixly0+FfWtPTSPOr/Fj/BE4lbuKheheg315Lm+Yr+VK1EXkacjwTRLfC8zlzWHg4S4PsUGyMeOoolgpWQctSGx57uTWxrxuSzuz6HrukgoN3ETU67Vmtc3JPKOcjUkrilc8ii651ZEE4fdP0O2jJGJ2ZIey2XYYrJCwyXsrX+YX3ScyK79TDZWSesYkPxmhcjE7vKVvrZG5NCtBbToZ0omFiAp6zwIQY0YVD/QNWg0ByaJT1/EYRogseOo9l33GikXg0rVE7LNe0xnFQ/IrxBBcMVl2/06ZC07vEn6cbR53GzirGXuLqZ/ZHlJnkAoX8cC9ySTyYDGpr5Y3dN/ntPO//CUrIQB31sNLSoe9WymcHYJVOTXiBN4bqwp/J4e5V3Yx1ZllCwBq9obMgQCCoVJJVsG9c19BSNDxRJVFgpDIn37CPfNIcb5L78A0Usue7H6Gn+OTrP5+BykKvJSxC76f/HJUFknLT0PKi3L9AHouyt0LxO0INvgs8IA9+c5/Igo6+9GWdEyuMn/8buV8F2e2+/eNLxDsDm8/Emrzvb66KJyV2olHvWlMwB7DJFBYTGWX6dltqTgv5Qiecus7rpkwqfHSrbFdKoKVmaE/VHglv0s5Wdu43uGCfLKvjx5UFUnK+Dc4mIg3PIPV9rt1zHA3N93OUG6icEgCX2yxWESXZttxwRz0ai61Z5QsMF0KAhezpS7okzSYOs8zbobn9+YWEtKWrnB/5/P8lJyjimM+llqMa3doKZCYWBDo220Hnv9Lpgm6mgoL+8XNXJQ/KCpYlZO1F1LQyUAVMN9sUGKRbpRnP4ImxpxrNJWeasslWt6IiULp2VL/cce6EW6kx/OARGfF48Q158JZunOTUO9RRHp56fydBfdBbFpZrdATqVURyJbnxl4KjJV4FYTLiqf+KqXlKtmC+JN3aiHZekk6/8s3Xc+xZ/DwjXYgcsebCPiNug/D8h7uF8on/cbg1lGoFPCLAtEOERFr/+0GbdlSXzh2JwYXjmj4ry0agdtwA6aAMTYA7fr7rFl5MdOVMDcsDSRODl0V4+EKcu6j1KlbgrzxGO5osM1mL3hKJguVfu8fWalQkFqyMja2Kv0l05Nkfxl0hphanOWSTCjZ47bxq30LZBunlnOCZFbMy5VHXPnXy2WxfHrvoY3s6PzEwc2/ZInuOX+hTsYK6qujYQIf3uC32P1RDiWG6cCdoQdt7BnhI64COig37J9zsueK0MqAO7ZGm/tWtVSaN5A4+VqH98AakuLNB3W1w4pJRjakNCcoWA4jejLt/1w==","layer_level":1},{"id":"d8276ae2-32bb-4ccc-8bc6-fe5f48b46aa5","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"记忆管理","description":"memory_management","prompt":"开发关于LangChain Agents记忆管理的详细内容。深入解释Memory组件如何为Agent提供长期和短期记忆能力，使其能够进行多轮对话和上下文感知的任务执行。详细描述如何将Memory（如ConversationBufferMemory、SummaryMemory）集成到Agent中，以及Memory如何影响Agent的决策过程。提供具体的代码示例，展示如何配置和使用不同类型的Memory。文档应包括Memory的序列化、持久化以及在复杂任务中管理大量上下文的最佳实践。","parent_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","order":4,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/agents/agent.py,libs/langchain/langchain_classic/memory/__init__.py","gmt_create":"2025-10-26T11:33:31.88881+08:00","gmt_modified":"2025-10-26T12:14:07.186702+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/ROpXDdVWxekbRT/bYIuNldPNIYLtM8rP9Qjz8+pbDvDIOSdk5ibgiub2vTDfL1liyaV4eiZsK2HfopUc4Zy+Q5n23BNKb0Kl/de5mX8AAhWp+TlU4Xvs4m6b6l6ufX1Wf9xyrgkBlbIFxzL/W7zKgkz6kw9CbW3juJWdqAjLeHGnb+LAY5OKQl3HLZVhYpPMSeE95HRfzaF7a+J58KeepfcCWhnVj3cEowrGBLJ0Ft2BEZDTyvJaT8VZFu20NPgV3ZRCbqSvYE7hH7558snkftjzDwekLQkS6qM8FH3rQsfligR9AK8bBDxQpleFdglXVZSifS464Qc29OWFRIf1SkMP19h64H+pLr8F7Bgln0sn4S91b68VnvpwInqNZazGoi3yACEt7DZo9bH8m45vMPxqFc+ig12jDMVXH9fFmbV1nfy+27smiLqaaDAfDgsl1OF0vVdXGF2eA8Fhrp2CEZwbcNv3qjElU8bKtsm+ZbBCPUeM6CXx8KkQfOrL9wGEnhR57YPwmdosJwo/i1Z3pV7DF/3c7CmYHmf5fc4Ydhb/IpfPYWH3cA5zimyrw6hi6wNpbbaXerSZ2NRCDUNPX2fFNJOMibcU3G/esLforAxytb+jMEk6Yb306BQ38fofgmCPM7+Gg55o5978rTnmIEnQRR4EuGh2pi1JsMUmsNcfjx2xjtgNalMdD/s+RcdL+wc+L0Y+j8WUV1jLlNV0EFRWN+V6UqSuX6eioPOtoofn+sakqFpcbk89fdnSDcKFzXwb66Zv6aOReZIcEBUoRnAoYX4wUn+PPVrpO4KpD+zzARcO/5glguqsn2yYISz20pFJR4fCKY8TnKK80DeaA35PDHQrLgkiAJ3oM+JIruRcRujZQaDDyOytO7HX4/0AjOTmdcvDWbaLCqnIP6vfJh3qyYKLFbL4Tcna8aPdnOOFPP1Q7tnfKSP2Nh2eVcsQ9Ldh/qL6QN10/iRxiyIFp3+FOcmdGa/eA2Ce5DmOFEdGU50eAc+sw3f3YGzcCjUSsXVu+IzIxa2iyNfp18YNUh13upyNnjvtDSjyMET3jxoiioAAdauT7odXutsQJpxqNJ9HVu55TY1RZHM4G12hlz/J+/YYrzSU/d8oydkyH8krEykeOmqGXOry0yotS8AiUw==","layer_level":2},{"id":"6e29107d-0002-434a-bc7e-2179c1784f6d","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"云存储加载器","description":"cloud-storage-loaders","prompt":"开发关于云存储加载器的详细内容。深入介绍如何从Azure Blob Storage、Google Cloud Storage、Amazon S3和腾讯云COS等云存储服务中批量加载文件。解释如何配置认证凭据、处理存储桶权限和遍历目录结构。提供配置选项说明，如文件过滤、并发下载和元数据提取。包含实际代码示例，展示如何从云存储中加载多种文件类型并进行统一处理。讨论大规模文件处理的性能优化、成本控制和错误恢复机制。","parent_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","order":4,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/document_loaders/azure_blob_storage_container.py,libs/langchain/langchain_classic/document_loaders/gcs_directory.py,libs/langchain/langchain_classic/document_loaders/s3_directory.py,libs/langchain/langchain_classic/document_loaders/tencent_cos_directory.py","gmt_create":"2025-10-26T11:33:47.276969+08:00","gmt_modified":"2025-10-26T12:14:31.114706+08:00","raw_data":"WikiEncrypted:42GucIVlAI9L6q+fifwcxaUF1Dsy0v/jj9LUmKk/qExa8tXKAvgXrV+S+r73/EaU4F60HKhA9xtVt0uJ/qRasJFlt9dVYaLQkgtTukBC9GMmPNgqerUgdtbfBoWfHQlNLJYmlsvW5jOk62bxsl6HaB8Z3ynC0upKAidODn60cFIVC8lBGFj4yjCPCJfHDkuk/kXn0TCE8DyK0h9JmpNEbqHpZp12OYV3itDc+CbhQ+NyHB7cYgnxopuqznkMQ+FaiH6HjW0LIeXzs7l9ec9n01Z5+c2ECT7iimapin2vCJHfOPi7f1uv3+xkThb+t/RfxxKV6gOO2x9v5DOqGYpT9a35XBy34MnBeC9pPTeg3d6+GO+M0pj8CxQBpq59u9qy/YQCXnwNM7iZSLt8VfTfq2gnOlo8KfY8ZybzxZk+GMNKelH5iIfC/uSodmSNl3XQ6mY363n2SXN78dyogZrd5sQbwGAWbLYtJ4ojGIXrY/DXoxwL5qwdeuNJESEB+lulzJlc4wM9HiZ1XLc6WEX5w9UTKBMOIA6Ydb7ZJQxr1X/wd64zt5WMhoHMwzqLwMel/uPtwWIhIov/QG046+zzqwYqHgGgUVJ4PnBJpA8YtUuBnGGcfoo1ZGEEzYhmanDeNGzM0NtGbps6tqRLuS82n87kU3JdQOygcXxsn/ctZAEHcG2HJAfb3S+4uxQ2p2UNyS3TZ85G4btGudb1OjTmLnVGGOqoqL9q5Tfwi+7+lRrfjxvq0ZmEpC7s7qi5vJssiSkKwlhUpfG4oU3ck2gqO4cHrVpL/rOdZmMXCpQsGWkp9mnjBUgmsnm7tKOSIKqmvRjB8PyGkAlRyGzj30CbPlDnFYfnOaFrD/+QgJk8Vn1+Lgy3Jo4Xfm63Yrijc9Syi2oeKnpwOcCwImU9fca9bJ7EQVmnE7qV5Jcru9se6KNGpZL3ISELAKWgBiPWxbNpW4r/+uQjIkKbT8DQRp+JVk30qnHPsKKxp4tRHmXZyonaTJxaMaEafIMTYoGA78yDa6LJqRjoCw2d8/hTrGwb56vrzQ3XqJztmVhoMIBcl6Pk9itdtT87mI8x9r4QkpeWw5BXUdHqUTZPK5s7/9aq0kRHKn8OSmee21n5yLzyHDm1uV+h+ADjD8sDGKsxrXMs0R0zZr49AHLOgL/W3D2Ec1ry+z6EG50oFqbf27EtpegfSZsgglcWD4c/d9K1xsi545sAJezO5CNAOC0o0UoIvSikVd91cjHGZ4erd707mSj2E89z7WADMJVxRDFLsQDoMv8jzowrrHOQasgMYOb793uT35weCmioDFEI5bwZ2SbsrKMQ0A66o3KHorWR32sCrdUPzgsI4NsfxArFdFQcsdGYAKj4IHXgwt8QpWzl40io5M1YaC0Yi8VBvb+F+Z9o","layer_level":2},{"id":"7fca28cf-db6d-408b-ba2a-a3988c334ea1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"多查询检索器","description":"multi-query-retriever","prompt":"开发关于多查询检索器的详细内容。解释其如何通过生成多个相关查询来扩展原始查询，从而提高检索的召回率。详细介绍其工作原理，包括查询扩展、多样化生成和结果合并。提供代码示例，展示如何配置和使用多查询检索器，包括如何控制生成查询的数量和多样性。讨论其在模糊查询和信息探索场景下的优势，以及如何避免生成无关或冗余的查询。","parent_id":"37c063a1-2c65-4467-baa1-3de97aab5352","order":4,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/multi_query.py","gmt_create":"2025-10-26T11:34:14.966452+08:00","gmt_modified":"2025-10-26T12:15:03.65929+08:00","raw_data":"WikiEncrypted:Zt230nV3k3ww0eU+N8tTkpXkYpTK+ptquirzFFB9OiDmip0SRNCj1Fgv70Bz61PM8/LqlQZtt0NbggRGf5LU6QW+wfnlR8LxACWyuyNSphn/XxQ+ZdH/u9sTf+E5OJ3xHQq/1OvyoGs+k//DIM3xLpKvol4VenOgQjdIWwSB0ydZsZKToR2iqXvc1XESqLxLW7TYZhjJ95dJnyMG9hupFK6mnZPAfxd7XE9uhyoDNVBM9MRLiEtFZUyxfYpNKUiiOmrH2MHos31t84nQfC3xnGujLkHBGDnJw8BUEKI8HkbldLHbIX2GcbI041j3KVTaH5C+9TNeDEleZS01eYtvQKZmoTN/N9Zm02ZcpvyXH0ierEALxqaeF/WkQjL4FkdR8RdIXSEJQbMX/nfRkA28RSIylzpximf/g9EL2Es6W5NxmqloGk1KTwPnz7zT37B5wnYRC9f+oE6XgIZUF9V8gl7Q45rccgIz6PyHrK/SbtezFyoQbacDpiDc+S5EpN8Ka1Bv+VicQWDTQx+XBHqxxHXj77XTlqynvj5Y+ogbDGmzcFhX9nags+6seIxT10tewL/YtbZ7C/kwicBWoO7ebg9edv4fvre4YKAbOuPmPTJv0tEm2YWqun7OYzkyYNvPP5EztB4IQvIF4pCijDxlQU0TgkvKDSq1tuoEoXg3vJDpezowlBXY53jbeaam59Rqn1aA02IbPvsmxAdMscybd3DOnqD0DNqD1G/f8V7Hb3FRa0QEWGJrPoyvbqpUz1rWHW9IKrqJXu59ygSM3V+QEuxJ9ifRv160kwD3P9dCkZGSFtbRmpoeV/K0DTt0R55zh8tdSZXkE+ucjX5vrhbMRZygX/LrQCK4tn6mRko9YWXKmc5oBWkMRu523ZljSmPZiEND56Y08EuqXj+uI085Zkhi778qSYn8uaqveVel0P30RDE32tKa9ewiPO9tbbVXTbxpwCrwwg8+7LV1x/Aj2e+88NpnOuZRvn4FaO1RrsMubXPeQd1q4tMbW7bXVzHgQfm+E9Eo3s9GehDfFGB1oOql8/Plj6eM/xCJOFYvY/o=","layer_level":2},{"id":"827f8e73-e58a-4be3-a51a-31df46ab64d7","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"API参考","description":"api-reference","prompt":"为LangChain的核心API创建详尽的参考文档。为langchain_core和langchain_classic包中的每个公共模块、类和函数生成文档。对于每个API元素，详细记录其功能、所有参数（包括类型、默认值和含义）、返回值和可能引发的异常。提供简洁的代码片段，展示每个API的典型用法。确保文档与源代码保持同步，并使用一致的术语。特别关注核心抽象基类（如Runnable、BaseChatModel）和常用工具类。为第三方集成的API（如langchain_openai）提供专门的参考部分。文档应作为开发者查找特定功能实现细节的权威资源。","order":5,"progress_status":"completed","dependent_files":"libs/core/langchain_core/__init__.py,libs/langchain/langchain_classic/__init__.py,libs/partners/anthropic/langchain_anthropic/__init__.py,libs/partners/openai/langchain_openai/__init__.py","gmt_create":"2025-10-26T11:32:22.236276+08:00","gmt_modified":"2025-10-26T11:38:33.719158+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPkUytUlTK+XtmhJqDmkbtEHTLhZ0QMGGdP5hS85opveHBwa/Ku5TTMeDk7WFmJ6CLEmLcHE017885pnrzfaMSC8jOeplvml2nPdM8ukbtu+0Jsxz8Tn8yWIf181F7SIFQYBVslR2WeYJDNkOH7dk8eZDknHB3WhHhPQTeNy0ola2iCEXO3YReMoaPXR0/V17a54Q3tt2+69bNliql4fSW+xNzRx4AEu7kdlR7uVGWz7YdAhwqxvbZQbbcOOM63fENdZTjPL+JNjBjd4zCKmuw1VyL8Hke9EpJ/i0fm+oCEF7J/mL7CUzccXKi6CID/Qpqh6cb8cX9wWWWHytN+EJOmZUV3WEVY+Yrv81ipARohUk5jiTzx4oW4v9EM6OXp0l3gi34TDfVanMqCZcJy94oztvBzET11x2QNK7y3yWWuQx3DHrnTRDHQ79iTkQBkxpeX0BxANEPcsiodLlUOt3mAWW0iH1KoqnyS+B7xEJ7J5S0tPpIKgE2+lqcrqf1sjIxlaOtNh+qJJm8VsIrKIDX2Qnn30v+hXekBxNSVcRIPPugQOGkWWoCtVDIg6hj8pcwLlIcpA25C+aBmMv6uBdnZ6jW1pePoF0HVhwsX34ktWnCZpu9No7o/XcNvXWDYVKc3axTcrrJT2qbh3bb5S66VwsllP0lafBfn76NC/5aJUgwV+lB7fb3X4DsvUmMhQIP1YW5HN040u1PIqXqdiSHrQZFYhI27U2vVJjPXQsKpm1s+Hz+LDSPppyMMwB1cFrvmLVQr4kcGQHGzfih0DYJjjMS6Ba5YhbVynkkWlsxiaDhmE8xf5AAvG7qGwpYIkvlkoejcpzZ/7/v3pys8RGyhcs6VSxJhj/43VawA/uE4YIj7s/4IRDGpo4QewutK6cboXzrvG4NBva3nqJjg+YGg15V93DW2a2ziqeAqnr/jPFvUn98ww42CIvDSK+v+ivlwnSpiui0azfkzbj0nWM/wkgB7W5CfzF2U0EicU8TxaUo3Lw925XoE2u6kVWhJpQNvzR6Lluz9qdt6HzjihZomFdTFknv82lM7wI+pfEYOwMfQRb5EGw8Lawzcu/ZYC5xXOZPy8974ISC45spxgAjufVK8AuxQLjwPORdyIzUPgKoS5/gKcYOd7vqlZOnrLBczLW2YfzkioetksfOAXj8Dmsr0WfpD5Zj+TzomGpOtiYm52ywqcH1hrh7WbwMr9GDs38itbMKqrKlsU1C943v9FgeAwffZRLrpkcQeh02B1gcE74xOWOsH0ftvwxg6UIvM8CwwOGpQ1hDwTIalWIrSvc3YLP6BLEPJNITHFQfI5bc+m7MDBOolvT+vX0rMNsHWvPa/6mRkxhYiwfqspU8nya86XtkEHVydEWM04O4JtYg=="},{"id":"332ff39f-07f4-432f-888e-c957082c5601","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Fireworks 集成","description":"fireworks-integration","prompt":"开发关于LangChain与Fireworks集成的详细内容。解释该集成的目的，即为开发者提供一个访问Fireworks.ai平台托管的开源大语言模型的接口，该平台以高性能和低延迟著称。详细描述其支持的功能，包括对Fireworks上各种模型的聊天模型（ChatFireworks）和嵌入模型（FireworksEmbeddings）的支持。提供具体的代码示例，展示如何使用API密钥连接到Fireworks服务，选择特定的模型端点，并将`ChatFireworks`实例集成到LangChain应用中。讨论其优势，如对最新开源模型的快速支持、可扩展的基础设施和优化的推理引擎。解释该集成如何作为`langchain_core`接口的实现，并与平台的API进行交互。涵盖性能调优、成本控制和利用平台特定功能（如模型微调）的指南。","parent_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","order":5,"progress_status":"completed","dependent_files":"libs/partners/fireworks/langchain_fireworks/__init__.py,libs/partners/fireworks/langchain_fireworks/chat_models.py,libs/partners/fireworks/langchain_fireworks/embeddings.py","gmt_create":"2025-10-26T11:32:50.905917+08:00","gmt_modified":"2025-10-26T11:46:13.008409+08:00","raw_data":"WikiEncrypted:2CIszCACQvHDEyrRfJw2nK05N5wJWmlnHbo6DRzbaY2Aj3JMjeIf8SIsgwwuvx2VPvTaH4C9rOR+tfkUhfA1NLE7zOF8vgBqvuZ+djXVq97yc7//aTuOKsqAm5nhrPF56DB3k2vPmcpW67T28hRBRYWvenjsVNMomeKDYFjFyXPXfiTcgxMKwEvBQtoMIxiuk3HiNVnu2/+muog3GJy7CAh2G5vOaj+1MJTYBXvffCi6eWpkVk6hkkV56jpO+YMvTfpwQQHCjpbZ7bbokTDGwCq3r2xziUqEbTWE6sRhZofjRaN3W848/rD9NBSl9UOKJS1vOYZURis5BoA20uyIz+nzXSwXhYh7v1JBFcccDyI3FHY+F0f2IbpPF8kUE00+KtdXVoOHj3XOENhio4tC/mjHvtVCuNPWeUnI9qeJlOYFsZprwILz4OoAONiUvubtagqYZEUWZnMM8+q28AWH2c5o8yX+uaqd2KctuUTR9B77KEa2rWewhY9FybxEM77fQ7g+ZruX2RK2oLl6VufrhYTSb940mNQd3Kf5JtE0vQW3+vPHVuhHPVDAikQ11N0R6ivJAN26QSCOUE7TU0eNDtkm2YSml34j/EAGP8cq9u5i//YJSKMwAvfoC1OjW3qvSNOflC/29ExH7eIUPhdcicPZ5FNLRBsgRk3/dGeGIY6BvpaAHnoANsP2zZmZnFFVj53T19mdbZEW9XnzB9RlCrtbdXNBmFLceRpvrugyNrFC3spOSmsH/Rh3iIWtNV3Rdx4YewStZS9adT1fvC0UnP5TO8531HkkSIpObXGhT4i3vx/y583MQCEYRefyXGBHYXhlNlRJRoBj5f1oN4l7HhQv55OY7egS6/7e359XGKqBIZFPLClYBe04R0HMabGdmWKSdqhsCp3E4DFRG+3nymQuOAtT+poXJ5IIhSEYwWFzCE/RfFQkRSx7UPnxfGVVP5A+ekbBeg+T10HdAuu0G2dRcguFjPlOTBidnUULty/MpSRNkN1Mtc74Lt17tJ6FnJ35jIOx5zdmBE6h03KIKRM970S92fdGmopKvL73sEgzmVxGAVI/4BBYD0QYOm4Hz0jxN4uI9fyUztaSouR8mURtjcwlKfLtR+yQoA8UhmcJCqSuqEolKNDt7J/issETsxaNJKGQOvrAHOFo/HaS5ePEmgYF6+/8H1SmWxxhwaiQXqSbCr06e0s7lDqVRrX52IwG+dO4YSG17xVi2A98tuN/LVXdzC9cVofLmIKIibbrlxFiUJJvNpm7DOgoJ6Z3n9PzdO5ov2T8CydWsGG7O1a0ICk1EyHARnp+dtVoxrs3Yx/ZE1Td38AVmKAubEoX215gvMeSQN1F+MRxx1d+K0l8nB/6DvK5XKmx4NG0HQHbOvamRyQ4zT93jDLRHC/xAk2Chy163CFH+tOVy0Xbiw8QkK3jcDvYuDW2z0nnWKjU0y87+qcjZoO3DnEKHVDJQ2obXjsaqjNaCnfoR6K3HC1ZCZOWYoT8ADI0gO/greJVm6fh7f2nkyO0Erb2HWQSEwHIAK5Oo4JC8X3ouTvZkbuxcJSJxTddpLYOHgB9iVGG1GdoI95ipGqg1WTmtZVp5bweUSWlxJL/s5DIrNeXYm64bmH8kmRNadujk4nxhYpQTr2rqVeIJJCzn5IFsMp5k2Y8YA/VrLud3o0oFcEAqaovwJamsUCX9AboyoyA7vH3NFKgBEdUwpSx+UVeUFnL","layer_level":1},{"id":"36c35786-2770-47e6-9a89-1e55a35ae360","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"LLMs","description":"llms","prompt":"开发关于LangChain LLMs的详细内容。全面阐述LLMs如何作为语言生成的核心引擎，驱动各种AI应用。解释其与Chat Models的区别和联系，以及在不同场景下的适用性。详细介绍如何配置和调用各种LLM服务（如OpenAI、Anthropic、Hugging Face Hub），包括模型参数（temperature, max_tokens等）的调整和优化。提供实际代码示例，展示如何进行文本生成、补全和摘要等任务。文档应涵盖流式输出、异步调用、错误处理和重试机制等高级功能。同时，讨论成本控制、速率限制和模型版本管理等生产部署问题。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":5,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/llms/__init__.py,libs/langchain/langchain_classic/llms/base.py,libs/langchain/langchain_classic/llms/openai.py,libs/langchain/langchain_classic/llms/anthropic.py,libs/langchain/langchain_classic/llms/huggingface_hub.py","gmt_create":"2025-10-26T11:33:10.899629+08:00","gmt_modified":"2025-10-26T11:48:05.102128+08:00","raw_data":"WikiEncrypted:KRcifcritIzROibLfE/SYOeaUXky4v34vAppOy5EEnrmvRAITrdFKS0eOxeKor8546s67Iv9kyJnUVWlDJ+JqlSQmEklcBkCsFVo48ilIfrLdV9TdPKCL6ebHKvUwk/wwIoyh8erqzKKE2I9H19mEqhpCTaXZtNxCRAVilbGKxR2tAb+AEI3C/nxb0BDmHZhpN1XM06z9/t4x4VrSAJ0YmoVPC1e7wrcMgwAO/6PldXAx28Q8syEuhWhmauzLIZiYnBUoWBwghv/ocx3I1UZYAUW8TFiVfJZB0/qYPzF1L1cbguDVeIRRfC3hppaU1NA0yZQ1m1xk9cpo8jWwzexwpcc7ZB3yZMc3jL4Fu069TY9rLD0QVpx6L5R/wEHKYJ8S2+1bxAIc8+YX3bcZj7CqSRY747KHuH1oNbojDS8xUh0+u056xljJFL/6VXu+XXQDYAWRbx1t9jelh9ZZAwXDBLJtsWufAdOTH/gEVbxDOV31oqUy5xd1n5sAJCv6AIc8rZepwcs0aSjkMhFZbpTY1ddC0zjp3uD/3bZAu2paMQD9IwNzwjMzMOhaR1y4/opFg3Qh1cbmsFTRHm30GOZ0XMQZ//ILQR8+BSsm7ckUY7styK5Ytlb2mDaViAKPbWGXJ+R1oDioVB9JTRWVRvAO2u3GmZwnp+tsMOqi4ShHOgBnM8CYmc/tmwMi3zhut7S4zSmiqgVsYm4r+ag8bXjsYTQzmClNLIiBf8FkV0dqV7CB1ekdIbwJKqwOO7uvd+G0pOgGgCt2r/EkdTQeQPdQr+RoImRy9UMK8SjDOrTmSyw9cTljaK5KDW1ZHJEt3q1NDA/idCtIvRxafGa9xHtAcPzyvcDtzhrhXDquYVblmeqPRXuy+OEq48+rpPTNMcdfDNJb3vbOOewS1hRSm8ff2ZFNzbVELz0dev/v4J/xBELy/nN+9DXW7FrxU7wHzLKaUaHkkzU8ssYWb21lTPFryVZVMvah/J5PwRtXeF3SqST971q/tGlBQhaWqmS/c+8zClPKtIqBo11sUNMrad/BHqnhA+h2XJ7jmnNg1V5X/rrD7Y0DM5GKvcNu/aY+vAvyIq5LaTqguv1wdg8kpUwS3VlHCMq0JKc/ZPbBdUhMXgRw0mDDgM0j2ddUw0+rU9y7oQOqveJaA0r9XqH0BmWquyTw/GeHnv/Eg8JrBlgroE/KqVpaxDDS9RYVwqzCL+/Re0VoK1miumkgW7hVWLq0zwYlQ1Fc0Au3tie+pNG4msss7ano7v3h0jO/nXqXpWKn3RGFmgpvOmvJ0rMe517TlZQsj9wcxNZFhFTDfKH1RGRfRWna0i96rD9s6im3wggGEVzM7KUQmVZyCmZzYFwuCBqTUNqgdXwG9m2bixEBpTrBq90juL7bSbystKVzqD27uQDDj2IvE5krmksj79Um1UA2ewTHXR7/Rtq5ZMlYvn6/sCtMp6pz6TZ7f59xjpz","layer_level":1},{"id":"537ccb06-2a98-4a1d-8dac-7fe9b5a4844c","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"快速开始","description":"getting-started","prompt":"创建一个面向初学者的快速开始指南。提供一个分步教程，引导用户从零开始构建他们的第一个LangChain应用。首先指导用户如何通过pip安装langchain包。然后，提供一个最简单的代码示例，展示如何加载一个聊天模型（例如使用Ollama或OpenAI），创建一个提示模板，并生成一个回复。逐步增加复杂性，例如引入一个Retriever从文档中获取信息，然后使用一个Chain将检索和生成步骤链接起来。最后，构建一个简单的Agent，它能使用工具（如搜索）来回答问题。确保所有代码示例都是完整、可运行的，并包含详细的注释。提供故障排除提示，帮助用户解决常见的安装和配置问题。","order":6,"progress_status":"completed","dependent_files":"README.md,libs/cli/langchain_cli/integration_template/pyproject.toml,libs/langchain/langchain_classic/project_template/pyproject.toml","gmt_create":"2025-10-26T11:32:22.236867+08:00","gmt_modified":"2025-10-26T11:38:31.812646+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWju83LC7H/jAM8CEAvWT8huE5OClmQiIfNYNxHQ9s7RRS0qKOV1Xow/Q40Lf5w81YusIonMV7+lIYfOAlbhbtzjID1H4fcDDs5GtqiDrU7dMz2s4yzX3ZGovHHWGV2MvRgl4OTQExuBZ5l9PM7WpDzTxTO7ZhuBe9gtamvlGH2eBxWEdVJDsVBHs8qWEmpJKAbDMMEjLVuFqVd4gv12iolMOc9AIWaDHCuz32k+nF9y+W9RPba+KnRbST5ZZkuA3uWOUG2xp9K3SzUIro4CLBmF2jx85JT7YqvEXYJGSYrks6U2TdvlRXEafyUm1mvEH4ks74APKSrBDp+PcpPZdUiEV7whNW9ywmqSJsA46mZbNKBR+g3aWaPVp3FkFr3QBqBPMpQxhr8EMbYqEFnS3ny6m/t7vOxoXNbqjmk/CsrFZUX5ZOqANp9IODEa2XCaWY21/AgzPHoadJZ9IO4PibKPxxeBX3c4wea34HkzVp+ITnlIf7kCQGK0ls0cJ4+PWiJzYbi9WYTdlE4Sgn/I5Q0dEWWypF5CogSaLftPNRhAglmD5Et+wYzA3TC97LqL49A6zFcrhK1Z0pbx5rcTz7kdYeLYLfCFSKrBrWyCWtt9Pnw94zZjTxf501ojCXHjzHZFyrk4vdtad6aRg/BbqE2QdDd9ZPWrn5QdQinTq2PJrixT4KwEBGzPYRzJdnVDoF3u1DmE+Mc0PHgpTUVZUoJ0r4qicnRkwv0gFRaMZfuqtX7KLiU8+9yEtGnLixwR0/Vq0RqEtHXHAxGy/IgidaawqR6gCWn2B8h9ucVjJ3fkuxqU8kF5nmXjG5lx4kFJfmSeiN1l7ZkLYsTju93H441qP2OinKoCyTvWZaNyL+OdzINEtQaq0r7aRUcuKm0RWtwKL/jVhtm4mS+82jXsPr2bpZrO14msW6WmoMO1YVrazbe5NSBzQOAY7RoXObe14EmS/+XOhinQO5FgZH9AxwHY07PpMM3hlp2S85Yr4Ju3wdpyLRTmjgsqxBk//Md+7yV+HnSS3rTB0h5Mm2ZbDBO6XE2o63X3302TW0rKPuxwtsOR3ccbzpmlwC0nCRldWTrJFDuw3CHVSQoC9cTGEDaKrxCfAPZji1+O4uKoXkh2xNnM7gMFSD6mGCgXUp3fSJuOeKuLu0bSSkBRykPO8fTpkihDD/x4PHY5j3rgi5yaK6MT7dtYBUBHCzoksmOiqz+S+L5ZnmRy/Dx6gEx1PsQFEbSnXDmFXLekizOo1gB0ywej7DhORzOM/QQIRD9osSlIoXWLAbLpel6CobofKl2Qs3X3SZFFYzIkzoR1uOGa0sBsMxTjsiJ32Da+Kk83vE80OklXh3Jhx464ZS15WIBkMN6CW9crHh+I4ONPljRIVkaxnnm9irTLyimw3CUwQ1SWzSUACleVNH6w38vSHn0Kp"},{"id":"950a5856-cb2b-4c27-8314-1f5789d0f152","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Memory","description":"memory","prompt":"开发关于LangChain Memory的详细内容。深入解释Memory组件如何为对话应用维护上下文信息，使LLM能够进行连贯的多轮对话。介绍不同类型的Memory，如Buffer Memory（存储最近的对话）、Summary Memory（生成对话摘要）和VectorStore Memory（基于向量检索相关历史）。详细说明每种Memory的实现原理、适用场景和配置方法。提供实际代码示例，展示如何在Chain或Agent中集成Memory组件。文档应涵盖Memory的持久化、性能优化以及如何与外部存储系统（如Redis、PostgreSQL）集成。同时，讨论内存管理、上下文长度限制和隐私保护等关键问题。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":6,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/memory/__init__.py,libs/langchain/langchain_classic/memory/base.py,libs/langchain/langchain_classic/memory/buffer.py,libs/langchain/langchain_classic/memory/summary.py,libs/langchain/langchain_classic/memory/vectorstore.py","gmt_create":"2025-10-26T11:33:10.90027+08:00","gmt_modified":"2025-10-26T11:47:34.05797+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RF/gTolXsc0yJYh8MfPGFN1HpJBBGmcfV+0qjQcpe1i5c3ljLlK6gQCV3mloghXMi29/y51m+Ul3EQ+ETEThYmHyRG21bmpMtO9smv4HyKzJThGLnBQ51RADI03k+dpsqzNJZoKE3/0pRaWNWhc4DFZXjLtnnn4T25rEp/uFkAUfaD3jC2PC/Yj6lz+/uheUhuIMZEGml6mg6fPPvUtUYGwg8bd/oKfftrvGy65D8+y/aP1pTMrBDMb61HdjW+oliK0ObuQ2vJyGTrM+ISuLAPury5cuSOOjEmFtAwVGWtz/DsuAaX/IqN0CrjsNhOfrHA/HS8u5vSS32msj/s5nhlcUUdfJpY9F3YKh4yEII0TXQJaHG893GOpvF+o7OzHhMicq4T84WKxrS5zdIcR/ZKUMQZVHC7TeHdL2JuvVJzyniEgaWCyCjTB3hEqEWoyE+Tfniemji0TR7isRYvulVPdk77dpBvGjvI3uHhYobQzr3b1hCmrkWFx+lXIaNr+x+8NabtSJdN+i+qP9bkeCHkRlmsjNYx3iod+JUxZzrcCGeqWJd2JUKmAlN1RJLeXO4YzdPowDGj6Gz4LGrpbnUa3KuunViZUnYITPDVOh+LL8qtUHeBWxnBeXAi5eI7EleYgyQGJHsuDJyjZCna4fWrb509Qiv5ne2z7REBMD+aKF3RwXiqBu8D3XZ+FLrsfyJrLCAjSA1X+cNj2kUsrHvQnJMnstada76H8ko7REyowL2kEj4FP1jvzE5Y9zGbYbMkrk3/kmOc7axY76F1ncbg5D5edGxvvGSpoy/xMY2O/39gQztduIiG2NJ1jPZki074tFqBSwrQRN4SxiqDgjeL8wSIWw4sJp5Cnl76/GEyQyocY6coZDTmfLlXjzE2lxn8dKb/VL3H5Yxu8GZ21Mc++8VUEYH6PKBpYyU8xaeoXtFGKsSr7+UTmHMAaFbT7cOy25iheq1evKAgIm+cOFcNImxrHiC2xrYkNieVGzlT1sj7mjzKyxuj9/x41EZ3XpS1OhfAn29Nn2xcTFUE50QMyp2/2TQUhF9/pGGndYuLkooZ7aLvcn4ddiwNBJ38bWmaAJlLARkjwYQyDfbdUgjJqto/nvQVBbNgWUuh4pllz6WxBeUf/J5RFqnf3akXg0M2CbtN0HfNvHVTgw+xg0aGRvDUbt3w3AKX3uQYF8Q7//FwTDnT6iq5A+qx4NwnV/jn6gwj2zX+QSOTshNv/BjYo4n3xLzsVN0HINT6Umz514tvLpWRHzwW9Ca5pCYErgZmxS5dyuYTQOn7G711p9SA+h4qHh89+27IecE9FaJoQcjmnt78TjhNo+yDeUG0CcK83I/TZdnUo1Mk3CKo+lO87VziS5Lwe1bzvMdUcks6i/bvgDKPhJ7q1cscgxsgopswR0md83SKtNIs7ocEJyDyeYormir33zgoDhPMUL9A+TKTSIeXbFK0CLfdu3mDGEO+0EfhRyztimlfaUzferM6S9VUq9dtVtt0qPvlIj/Uxt","layer_level":1},{"id":"c9901b38-942f-4e03-9d56-4222fc1632e7","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"最佳实践","description":"best-practices","prompt":"开发LangChain应用开发的最佳实践指南。涵盖性能优化，例如如何有效地使用缓存（langchain_core.caches）来减少重复的LLM调用开销。讨论错误处理和重试策略，利用tenacity等库来构建健壮的应用。强调使用Callbacks进行调试和监控的重要性，以及如何配置Tracers将数据发送到LangSmith进行分析。提供关于提示工程的建议，包括如何设计清晰、无歧义的提示。讨论安全最佳实践，如安全地管理API密钥和防止提示注入攻击。介绍配置管理，说明如何使用环境变量和配置文件。最后，提供从旧版本迁移的指导，引用MIGRATE.md中的关键点。","order":7,"progress_status":"completed","dependent_files":"MIGRATE.md,libs/core/langchain_core/callbacks/manager.py,libs/core/langchain_core/runnables/config.py","gmt_create":"2025-10-26T11:32:22.237498+08:00","gmt_modified":"2025-10-26T11:39:36.558577+08:00","raw_data":"WikiEncrypted:qR01IwWN4h+w0LFr9v0A+/aXDEkkIzwJCzQlNWtKG35OabQBctBfg/rs34wbjAjdtTQM/jnbzWHQnNKGsyDuPvhjkktNuoQP15ew0/KVPCu4BDMmCRENFYR7EBZTv6HXWCdruvOduiIB1VmA7Il9JcNP3hMRmGzkJWmqTk9YTE+2wxwt000rDnUL1/WkMEX9Pr1e+Y7d3/lkhmLQVq1S9Nent45jbryhxSb4xEniypPqjfe94/cLAhMSzi6ZzHqM+/687NJYjT+IQ9luX9xiQWzWcpoN8nVa0n8DM4yKF7mVdUOWIjcraQQIVsnocQ6uwnC3+0ZYnkT7R/C6u1OJdQsuWcL57VK0a69kq24hTLKBduhHmUmqGFRDLSR27W8r8r9jMN2mAokNtGPHa9R3/wjQWP4CN+nnU6/DnagurvSpnzu01pQvJEm3KQ9++HE712Z08GMqlpBFUz0DwBk/96ESOThAM/Xc7Qhm9QuQxr4uxlEJyBK2U1GJm0dNkoWAJVWmB9uF0JkrQWwOs2a7LTrA/bcBD4exyBR04bYDnR9Pzj0oPF3DSX7zp99ViPpKkO+qzaL1sZWRLT4bfbZr1cEolspRhzxM1QlqdvwcaDThWsz8mYNp2+CojJGZOKdJBOM0yQn17ZeDdUMGgiw5gGNdoFZ6QVqWo2XVyIAsvAVSlFETgRMuTir/KXOdO6skgdN4kYnooRNjY8pkXelEqiRkMWmtCb4h7NmcWSTsStHTCxnKyy0AYLj3FfmIy4lHN2qYRoqX3ucBfMhmkBLZwj+cnA/fLFJAtCbtc6GlZTgKvVfTWJmHMeCh383Hv0rSL9/EWa4Yq8d2+Ho2DNCdfdDK0bePjs6RDtPRuNr8YRpLKx2meNC/P/ec4GyNsIv3+zoGwkjusnNvGzleWTHL0KAK8MsBgBltR8Y4MbjctVBSAvwCxhxN828zzKBuYG29EhzB2C5CJH7CWIDfcN1eSZKem9Z62TRGQFe+NCBPOE7XGVwsf7lt7aeFKuIXtF229JfqZ2wTmFanTxxq+OFxQa29NkBa9pWVnMc+EfSmbnqJDg9D4aUQKTbZFO6DORJfDSINbwP12lcEkX2HYtXJzK709PQmiD6wOCtO0Ax20/yvYROxV24ObPPTAVo7sWf0L0D9kcRn8pb4ZrcJXkqfF3W8kG24YeQEq9hHAyUhHq93N2Gl8GQzhEO4EPiUjVUDs/L5i8gtmo2/7z0SkWYhOeauk6u2Sh4TlYFlRl7PPGkXkCoHjqN3zuuCjC+bk9WHCzi7f8cAhze783dHyKN5pRCJQvMN1zCVOjB5wasfik9cS5heVn9kNkDMqT5r9+odYUwaq5hUBWAdtp5+LizURrZB7X/83z7phd6lRZtH7Ps="},{"id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Output Parsers","description":"output-parsers","prompt":"开发关于LangChain Output Parsers的详细内容。全面介绍Output Parsers如何将LLM生成的非结构化文本转换为结构化数据（如JSON、Pydantic模型、正则表达式匹配结果）。解释其核心作用，即确保LLM输出的可靠性和可预测性，便于后续程序处理。详细介绍各种Parser的使用方法，如JsonOutputParser、PydanticOutputParser和RegexParser，并提供配置选项和错误处理机制。提供实际代码示例，展示如何定义输出格式、解析响应以及处理解析失败的情况。文档应涵盖与Prompt Engineering的协同使用，以引导LLM生成易于解析的输出。同时，讨论自定义Parser的开发方法和最佳实践。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":7,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/output_parsers/__init__.py,libs/langchain/langchain_classic/output_parsers/base.py,libs/langchain/langchain_classic/output_parsers/json.py,libs/langchain/langchain_classic/output_parsers/pydantic.py,libs/langchain/langchain_classic/output_parsers/regex.py","gmt_create":"2025-10-26T11:33:10.900855+08:00","gmt_modified":"2025-10-26T11:48:13.294171+08:00","raw_data":"WikiEncrypted:JHT/ZMDMQzjuqWpHdPZ6UkAOFEJnsXbn+YAnt9eLHT8E/gSgzFDiYYPRdAQlpBzz643GD3hmTaDh+4jQ3OVmF5FMLyXf6EZUYovKXE/ZdHeKCGfj56qYAtB7jBg0VK7MOJ9O2fX9BBAu/sgn4SHlEFA6jYZl3+TdLqeHTbfhGdf58l5Vv4kRiWb524uGjM6uH05/KXKPMn8He8FiU7woPo0OHRf3SBc6riU+qNXObby4n6C4p9nbsVJb0/D5kGC1oqrn8zayonlhKTjYCh6hupKWHqM1RnIXjj0B9F6o5UKB4MPkPL36YSPEuT14el5nXh3g2tX/zdlSkBkU/L+6cRZ/yzwdy44U7QDKO2YJkaamZCR7p37XQvn589caJPHGCtXFOTAWypzQABQ1vUfe2CzCBIbbm9LIpkphubn10fHVoVm91hPHlJNgUFJFER6+8v9LhBqZ0B++I+z7iyRmq11cmIDl30Ol7MXZoHGYtJXAQQ+roknwn1oNDgeZ0SNRllyqM3r7jmExavMZzq7sW2xx0HBDU8fVDl3QE7rGyPFpBIUHj5q2bBkjf2zmwp9XRfyj1NyPBbKjTP/GpcpIn32ipDehpir3x/Jua/pNF3QlHyczgmRNHREleSCRGOapUifvc/yNBuNY9Sj/kfW3nGN5pqkC4IiSQQCi6qOd9+cIauWp5IdhTG7/FhNI5MuT4A4bTgUSMxgzbRiZJ8tAGztKDxN342+nuZMlOWlyPzFomny94Omtngx2pRChCSuL7XryiMVslMg20Dm9eCAS+ZgBW/psQjWMjO/OWHaeLVncv9D9SBY+dSw/vqrbYImfhEw+YfB3JyoiU32tpa6gAAgFAt9nk/rKu0BLnRA2QnTq9BXAD6oElnQlamnobULU0LWXvK0inTqx/c7+q5s3Ox5oOsavlQfp/u1nLfqAhb5J78/hy72hvOzZSBoE+AERCkMJs0T+05y1T+GXD7CufskQPwabu90WxSMcvt0ZcbgzxE3dPq/yEkWB8s3RProtqbb1+M+QMxTfKRvof+W8iQTRvJKMQRgj+pAUSJT/ZulhrHCJP5cy0e7za+UG8IUXAeK8qrdSDpiSvIDDOaRgmAGlTenyTKhRbvYM8wm1HDRt2P9nb7hrfFDAO671hTjwJVOte5Rksv++GmOkWIZYDLob0sulGfLfMtuf90mFML7C+heltCzEXpOHDzhs5qWLePcK8nDh+sXlSIYOq9ucsfjGSWar73W6LPIEpYdod59wuW3eDQmrANt2TZWOEgGAiOoeKL6FparbPBd2tYWOv1sdOVab+Sa4P9aqNOF/ZolPOuinUOIPpHvMK+gWw0uQ4qk/pRaqkWwu4BfMuNB5xw/urh6pgo8BoHXnvM/nmpDcpiZdutS7yaJ9C+Prn1xeNtWNwlCvGPL/Sd7YIIWp7l92Evgmim9pWXhUx0OE3QQFJyDkvnUhsA6vImkzy6PDtphmq4k6BKMA9bAYcyig7wbtvEJX0NSJz+wk937E5i21ckK1tfd8zBiVWSwDkQh/K61O1iM1aSyGirExg/yJBRJ4PfZAL9BChR7h+QqJY1/M3kRJQ8F1pZ/m1fjt/tCcfs5WK5kUkvVnBcR27Q1TP7e3pe7z7HiJw8EYQZYPjSI=","layer_level":1},{"id":"03e02c48-125b-47be-9f3e-74d8f2706bc6","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"贡献指南","description":"contributing","prompt":"创建一份详细的贡献指南，欢迎社区成员为项目做出贡献。明确说明贡献的类型，包括报告bug、提出功能请求、编写文档和提交代码。提供设置本地开发环境的详细步骤，包括如何克隆仓库、安装依赖（使用uv）以及运行测试套件。解释代码库的结构和编码规范，例如遵循PEP 8和使用类型提示。指导贡献者如何创建新的集成或功能，强调与现有API和设计模式的一致性。详细说明提交拉取请求（Pull Request）的流程，包括代码审查标准和测试要求。鼓励贡献者参与讨论，并为他们的贡献提供认可。","order":8,"progress_status":"completed","dependent_files":"CONTRIBUTING.md,libs/core/langchain_core/pyproject.toml,libs/langchain/langchain_classic/pyproject.toml","gmt_create":"2025-10-26T11:32:22.23801+08:00","gmt_modified":"2025-10-26T11:39:22.182065+08:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3NYtmPU3Pp7BwtpuTrRxBWuD8HspdM7jFg61GaPsjZVX8UcMLpeYv0pfRVS+Fgf8sWeN+Dc9ih0gXEwot59GrvLixq9aDIN72280VmkVo1CntWpbSgeRa7fA74AvjFMYQJWQd2qF+EhIHdBmDbQxeanAxC4zwga2UvZvqJM1hyylzAXWIiEaJ0NzbRl2YRzmtf/al2e/yTzbJ2mV2g+XmmdHuo556Qv2K4x7/ldOEwit4q9hxER7h0RtKfbfEB9BpLmAWCyRy6D00pQ0oIyF5THJV/FvenKu5gYQJEmp8NmDHcTiV2s4poKGd4lx6yMrjdAXtzq6WIhcB8QXEDyq1jVmJy0ro+fSIMTsfHXvxOECg+QEWXKSUVBMuNQPUGGNZI50zYGd7WqCljhT2jEBi4d3uncZBJLUAC9nLM4x4/xqhp9awbgZDPYDZ6Cbx1/XVp28sQW2fzB6lBoZ+OsXo1j5PAIz0pAO9e9V1RZ+Towy4HyqiZJRokfVLlGdbfYf6z2geY7nzJkVJqU2HPmiEi2IJU5EMuQgpA4cc5t6KUwJEIRzAkv2ulpK0gXOP85q4j7F5X2Gq8fn77H+4OUaIBRxN+yM2MxnFBgF4AIeZ5k5fns9AvaLHAihEh+/mtRgBeHvO8fvmlOyHfbkCSB9Q3TtKzVMNsQh5jsZgHkw2oQTzf5D0VYC+260l0FZLezV5i6kZaf0Wu3Yl2gyIRuybbzWrIAyhg0dPFY8H8G+9I643GEXomo4UqO4Tx3hw6L5GRZIiC3yL/qflj6SQqT8duDyDlpn/82jji2FUT7PYfVDNoOArI/ac8xuvYdd59o6KFWoeJiCPBCgdIoG8tAOocZyn1sDnwwcJ9tiSUsBBkrWjSjkaTrFU62cWD0FCcnIs7DygcZ20iTJKj7/I1jrjxGnbkeHqolTGab9Pme4aFejvDFtNh0h5pWj8FaWI1lQ0GUZZxb/LQIxN7UZdalQJjwC42Fo1yY3w117n1JmacaTRvR7jyFL6gzmZbbcYiA+CbEgd6XsLLh1yBk6xjJGpD0VljezVIzsKe6smqfGhYSirbI4lkbtHHzNQ3nAVyRTwG4OMZTX0Ok0aycS+k9nuwRw6uhRb/LLsbzKvBiP7KoDo/gjsXF6hiaNzouMUbOTPcRp/J7BAgtVGH4hTNB8sLgb2Ly9qNO+LsrQnkgs8liXepQuV+L0tnQd1Qmc9lMwRhEdJmdLLF7m0YLTVXg9UNHLe61FcY3JrivrpYdj8FHX7bDChikYwV0y0O03JeKXLiA=="},{"id":"1248f9e5-5ec0-4bf5-b002-ef59fc4259b1","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Prompts","description":"prompts","prompt":"开发关于LangChain Prompts的详细内容。深入阐述Prompts如何作为与LLM交互的指令和上下文，指导其生成期望的输出。介绍Prompt的核心组件，如系统提示、用户输入、示例（Few-shot Learning）和输出格式说明。详细说明如何使用Prompt Templates来动态生成一致的Prompt，包括变量插值和条件逻辑。提供实际代码示例，展示如何构建有效的Prompt，以提高LLM的准确性和可靠性。文档应涵盖Prompt Engineering的最佳实践，如清晰的指令、具体的示例和明确的格式要求。同时，讨论Prompt的版本控制、A/B测试和安全性（如防止Prompt注入）等高级话题。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":8,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/prompts/__init__.py,libs/langchain/langchain_classic/prompts/base.py,libs/langchain/langchain_classic/prompts/chat.py,libs/langchain/langchain_classic/prompts/few_shot.py,libs/langchain/langchain_classic/prompts/prompt.py","gmt_create":"2025-10-26T11:33:10.901456+08:00","gmt_modified":"2025-10-26T11:48:48.842585+08:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxKlPb6uNOffg7AEvivxNq23O8sUWYbMGUJsWkQXT93XvzZoOnyj3tEnbSZdEl3BjAuOtMi7gyg8TbmcjJy0FqRAFMaSe1XhL6s5Dx1rytDU6BQT3s/Lr2uLu2TvVqoGEiKohW8+fPo+faZtq96aqbUtcuWlKwXFApVDSAPbiXzFRJB6HKX0CU8uxQT580ADC33JmvVHbz0MyT+QUgKbtrk3Ak1/XnxcrGTa7rDngSYXXrs99Gt0AlFgZKAvtJ0WcyI/L4hiEGjzsP6X8jdBP7ZsrT8RbhS4JKFK8WPVV1mwREz5FYFbA933U1hJpkZYHDd0Lhje/1mq9Gz3LXBdDArRE3r3mhDMkXgwJETiUdvSKJCqQ6ONA7+/TArW8AFmoqDtV/91tInjoKOkJiAG4A8tZTIcqL8BftC6hWIDVMpP7UkSXBXYcg1zLivtvv6U9eqhFu88EVWmSR6g10gvY1s7FAFbQuDaWRPwdQ2+q/Q6e6Qqjzfy1Azz5A4ZKuxBWkNYr/JEC5PHYwsk+OyQ9splt32AJoluw85WtbgmL/Aa5GhALTKoZNqQDh1CVUrWvGa8tq6k7jFiubRiwGd0cp0UPy+H3Sz0WPluJLA0Y1IebEtJ8DSUJuwrwbhSWjIXPwasetsI36SI1uLc8CModOmgffpUsC8VwOi4sDtZFuY8pAOTQOzKOFjnXXZOYLPFNLvJJR20/9S7g8uFYrOpglM2RXPHxktjL3rmsNQm7EEqFRFP3qlEC8ilzjEeqrFZR3ft/rLq0W5tkG/SGRYjjJUDcshAL6OXWqJ6vYq/Cyks2DB7zfYTGX7J8WrqfwFh9T+2ykEQR1dl2iGYTWVyrXzU5sTh5SvOLzCtGWVSNsi8V5lP45VBYDDKJlkTlQlWoEn91/aWbcYCkBzNdhdZFsclk6MjREMwqBIMhcocs+yFTVlEfg6TQYHWQi3pMbxvG7QPdJYBC+staCB65AkLsrYEE1y+X6ET1mxsdMBq96zPsaXHqGJE3U+Hzjmh4mrIy7DNAE/hn5/EUySSoEoyphsWu1SPX2OmJUl+VZ7JlRLv9FMVyeh72wZ4uXlenz9wXbODriwqlRX6xxym7HVMS5cynYpy76TJDsZ+5uqUGE/P9dXBDSeNXvO/5N4kqm6Nd8CWrNIipyFdz0XAiZKbGkjR6Zfk7rZu62xYeMulZ1gNuVQ22LeLvpc2tn8P5uflvBTN9LAvp1eiEbPT2eNezct4830c6pIU+8CLmIw7O3vVFOA23PYRmiZUhrt9S8u+BrOqabOdtRwNGAqyftigO1+wHATmatx7PfL5DTOI4GQ0AsKb9xgctLdFmm0DJpAnXodiYonbhNaGkLfAHXlmrqLk5dva91GD+GFnn8r5/DAAUh0g+3tBuvMTgFfToUlORgaI8MgEzXmtIaEHOv07oeT0Nye4Higie/3QkO60cI0w+GCBeILwXn0TZmvJ1Qut8r7XIRQ3lSI4CdXM5QbHdn+ucWOSWYUopkq1IezhWDs6us5CyRStu5W+3zPgkb0XwtA==","layer_level":1},{"id":"37c063a1-2c65-4467-baa1-3de97aab5352","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Retriever","description":"retriever","prompt":"开发关于LangChain Retriever的详细内容。全面介绍Retriever如何从大规模文档集合中检索与查询最相关的信息。解释其在RAG（Retrieval-Augmented Generation）架构中的核心作用，即为LLM提供外部知识。详细介绍不同类型的Retriever，如向量检索器（基于相似度搜索）、BM25检索器（基于关键词匹配）和混合检索器（结合多种方法）。说明如何配置和优化Retriever，包括嵌入模型选择、相似度度量和重排序策略。提供实际代码示例，展示如何构建和使用Retriever来增强LLM的响应。文档应涵盖性能优化、准确率评估以及如何处理大规模数据集。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":9,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/retriever/__init__.py,libs/langchain/langchain_classic/retriever/base.py,libs/langchain/langchain_classic/retriever/multi_query.py,libs/langchain/langchain_classic/retriever/contextual_compression.py,libs/langchain/langchain_classic/retriever/ensemble.py","gmt_create":"2025-10-26T11:33:10.901922+08:00","gmt_modified":"2025-10-26T11:49:37.889156+08:00","raw_data":"WikiEncrypted:3166zDJNeEBGH/o+3+SHSi3A1/Ogw/slv7kmO2wbuHPlpOVDUa8HwSLlCRNPMGKuuU/P4uboKGTQaEVwKpIxJWXOEdvuezSdQzQyEoeGnfwI9UGkQob8kP1VWYSGD6xC6TiqSx79sIskua3VF8kvn/NLHMBBaWf9+StvVxInbf++KHEkVA5yiuj/Vvv8VMFY0J3Di+SpDTzGITsTcsP7Jr+XmPnH0EMeFR8H0jNP5a0fq79/twAJ/2w2hJcJzKEGmPZdXUGtNkkpQy/7m71KeB6LT1Ahv48XhonzGTHg4SyuI2Rljw2mmqav6kVczGWzkKFaFjSnzl9fmv0Usiomvo7ekEByLatEt7HQp6CBWWxf2t5KflaM3uZw1nFGabJSUGqMW2snSpvN1yallj2R1R4nWpxt3q7YeEN+yUPRT10SHxMxsx4PKf3DXFiikc/vExgttpkODndepn/q0XHEhgtYdB4mvJekbMs2P3ick4g27VuKJKXrAlndSp3i0bA+B9KoRrahhuKR45yvgsXtY42k6bq4F8RlwjWqp/dF6zjDpQ9JLoBbH1Mr86O6yP2aEtVan60Jbk1Dzc8F0+8TPZ2nkHM6OhtcZQYde6HN0KjFzQQVKkx38vFf1ZppqBrsR5oJBoTMH0JbcmsWSJ2/REt6Ei3Fbqw3kAjGdu1jmeUAdBBr57Ya7KLU2JbqPNolHh5PW1pyhun3RwqQiu/ECG6AHYsGoyl+PXXdeeE3rc64cZgx8iUZd4LkcP5tE8+i1oEgLMZa/7/ULsVRzhnorZl+rQPQcHTxY9jjF9gmnZmhS4Qx1xm1+mZECo9mZKzHzyQfEl2ahaDRVaACzAmqpQquIRFyNqbGr1PbSKWzEm51/Ons7bi+iENdy5EF31Z9MLcHskc9lLSGRspEWoE6KCvV6wqlqghcB2gESZd3PKs5rXT1tO55xl9oI8vhNx6snkqlh7Uobcgv8y9oCCLMhn4H8WMGlpJwucrvadh52TiKn6DWrZOEr3kWl1JJg1wCWic/5VIeWZYh9OmcP6AEDI2um8WhmgFdict0QX6fXD+GXLJ13m/6jPbBYjO45BGZ+qgMeIEPBFV44Nt+SyTp7sJFZtgivVihOkxnzFR7oTEEH7CrapJv4C9ttFBXoog6Bi7juBHrlyD3S273Z2YPn4Mx9Urz2/xoB9Nt2qssZQcyxv6XE7Dx72epe/jN6qrZWoivqOap4zfNmEfrMixeQKBBoa/kTl10Cz5UTBb2xpWrRHh+bgI/QAY167Qibqr9Ks0ethriQ2ZxL1PGOTwWW1y0SWWqkexbVSxAEokl7zY5VoFfhir3yzEWs4kL7vZJx1vh5b8Erxm07BV3iMbqd6p8Vur7Wi47NEthmknE7LABqYtdDTbM611rtS7tFxcrHVDQuFeaUEJ8PaWgfo7uo3oCxsyYKyxyv6mgBWX8L9KecCa+w2TqRRZObJlLpHxkREX8hskfhW897HqXw8aD7E/Q0LMypRDAOtAYovjW6Jxto52rPod6ms1XRID1KYoML63r4LNxH9mWgF0Bmx9bWt24ETb7Kb/B9HbSToJnZpwPpdhKu0Luh/5kmGaMUCQ4","layer_level":1},{"id":"42f7ace6-de00-4f90-8caa-97fc51015613","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Tools","description":"tools","prompt":"开发关于LangChain Tools的详细内容。深入解释Tools如何作为Agents执行外部操作的接口，如调用API、执行代码或访问文件系统。介绍Tool的核心设计，包括名称、描述和执行函数，以及如何被Agents发现和调用。详细介绍内置Tools的使用方法，如Python REPL、Requests工具和文件管理工具，并说明它们的权限和安全考量。提供实际代码示例，展示如何定义自定义Tool以及如何将其集成到Agent工作流中。文档应涵盖Tool的错误处理、输入验证和性能监控。同时，讨论如何构建安全、可靠的Tool以避免潜在风险。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":10,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/tools/__init__.py,libs/langchain/langchain_classic/tools/base.py,libs/langchain/langchain_classic/tools/python.py,libs/langchain/langchain_classic/tools/requests.py,libs/langchain/langchain_classic/tools/file_management.py","gmt_create":"2025-10-26T11:33:10.902405+08:00","gmt_modified":"2025-10-26T11:49:24.010422+08:00","raw_data":"WikiEncrypted:fidComx5VP63LZaldxrA8XQkuNiU2rrZynV43J5Be2QMpgexirzNyQ0pvmcTRbo7g/os8CuYjVKgZ2phwOJOv31QgzvnilLGeBRf6tIQAZuwFitZFkJRGA14YNqd+/bDKq0HEFJbQY6vbMIs7YK8axoiRFk0TT1BG5zI0X6PVkaDRCbYXti652BHqXA37DwLIJplmHXC5iwmWwbyE0EZYpbkcPPRRdo/j5oEcHHjOcq9OWM1rTjCZmpOfbfL8Qz0S7JRTgNJlpDKRMc6XJ0D2fmVLIxVnhjwAcKXQmfDSztAJ65PkJY3fOU1t6uWt0sV29ejt1QlcWBpYDTJpZnr1WjIhIHQ/+AYLSbyEI1X6jCM6NZXEARw++JK4dsB6Ww+J+ktF0/24jsTJc/kRE43cRD9JQ9ApDgZQdmX60ppFp4JqOzEB5kblsEcJTwglZ/MtVBrkmelNxY2QfXRexFrbUP4OISuToKBfix6pRkUSibpOmF0is60JTxzZF0id8Flp+QyxMBK66TBmeOt2T+zyTLFkyiglI2a4SrVm03ftwCdSL8xKE63AZX7+ecL+jOLC63rEm5z+/eAAiwTrUFY5GImsmutKlOteaS5lUJTLJd/qES91di+q+9nWFwxtdbeCvtMnUqZJp6g1FKcyIjPFQbxKKkUHyIov26/1BsOKeqlQd5axV7AdUZmBm4WSsIWuzFQqHbPW43sVYagB4QOMYSGJhqhE463zug13UL2SxGb+zfG8sJpZM5S7AHqK7FO3P0lDSuh1oNKHZoW5/GLE06PUpnejrJCS6BT8esKDelE/1Tr/mc4kLf1aPeOY3b6CansEdQ3ibh9ECbk1t42s4q5K2A0yv67mPW15rspkfd4qsxoCazERmGyqjFLxxbYLPh1+xo52QSyCOly+vG38EN7/nmOrO/WcK6C1lS/cASfBVWHyOoU1QjhFeENQqtRSquEBBXvES9yO0BmVu5e0EPfhHUXWCdz66/J04+o7L+eTJSpphQi4i2F5hlQTTVREvMt+WNpsaGJqy/YgNWb8CKe82mOJJzIIzCGNa7HMnL61tIhQz/urU3hj2fAzmD6EWnnc5zbsZ9WPvmZQaZaTl0oycT07Q6mFplzprnB5X15LWQhITF9d/eZEcKvCRcWBIbFDT5YvZ3IOR34QoW5+0WmTbRt6QL597TCgBt8dPHy4QFf7IlJC/gYgLCozO1Yb8jeDtmlh09yMOeG1uQMFIX20a2ovOjVZVAf7yOmovDG20hmfq9OoT46K/aTcf2zx7X72v706T18aAxYKbJ/+dQztJEsMJRCCJnAa9RcTc0bPJrQPOY48anyXwdJX86h8u6+JhBLxLB6Ebj5YKc23jWGcxKTuaKCfVWkKdKLQclmjyGLPpt4wABfBHm7niMGhvfoGne2S1+bjsUhfjoqUhdGwZaHqCVMYaFxH5DSouLYjLmZ3FoqDh/ugyIGCMZbL3GXoAghdCpahGfZNCLufQ==","layer_level":1},{"id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","repo_id":"620e555c-f612-4331-982d-e599d99bc243","name":"Vectorstores","description":"vectorstores","prompt":"开发关于LangChain Vectorstores的详细内容。全面阐述Vectorstores如何存储和检索由Embeddings生成的向量，支持高效的相似度搜索。介绍其核心功能，包括向量的添加、删除、搜索和元数据过滤。详细介绍与各种向量数据库的集成，如Chroma、Pinecone和Weaviate，包括连接配置、索引管理和性能调优。提供实际代码示例，展示如何将文档嵌入并存储到Vectorstore，以及如何执行语义搜索。文档应涵盖数据持久化、集群部署、成本效益分析和可扩展性设计。同时，讨论数据安全、访问控制和备份恢复等生产环境关键问题。","parent_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","order":11,"progress_status":"completed","dependent_files":"libs/langchain/langchain_classic/vectorstores/__init__.py,libs/langchain/langchain_classic/vectorstores/base.py,libs/langchain/langchain_classic/vectorstores/chroma.py,libs/langchain/langchain_classic/vectorstores/pinecone.py,libs/langchain/langchain_classic/vectorstores/weaviate.py","gmt_create":"2025-10-26T11:33:10.902854+08:00","gmt_modified":"2025-10-26T11:50:48.78982+08:00","raw_data":"WikiEncrypted:D9AwxzXN4lDQjY1HwEIjyPrIuLtrowLPu+Z2QogGrHjFvba8oaNuySGB9W8ovjfT5/08UWqO5mh5IIgyeYg/g5a7nq4xK95p9Ny5lzHc8nxN6EusxPXjSBJsJW++PQHiSUqX3fttUFPH3gohKLfEpXclx0q00w9Dnsw/2evi9iQxuOoixyg7iKQCTybAozk3LNJjhIcHbjCalT7gtcy3wOaO5I3S03NRG/vNLfQ1o4eYirw0tkrYLKaYLoEFib3OcqWGBk9lIEGFfPhT1aGBn2tQ7fUNdupSNRGFLSquaO707y5HYDBEjlNgl+Mjyjr9R+28PgXwcrMs6+vmSaxqHYI5KYNVao5MftEb1zKYIWZb/VuMR61TfrrtNrYU2i3xSmRoZ/DvJHdg365p0xX344ppaPJ68/vlSVtd7G2fJAx6cPEPFCt9kmBiKeeF3CQPoL7Kokt1QO4KPAEo+v4ddqHbkBpCaKWz1UQ4v5nNpX0j76ZfdGiEI39MuavFz0mb4IVgQdDAOdBNHWPqxcpDuggcetPxxYTmWAHsaCC+yDy7EvSk8/NrbiR4t9bWl8cYyGC5k8xs3O0ZxUXXlMHIpij3YjKxh0TVe2NHZxY1aRmu9XsmuDLVSHuUUViHRHU02ax3ksVuFQnwXg6G/X1T0obTDcXwuBTdjy12iywsqiPWxhvsltKlv7eOXlpJk0zZ2etzelMcep9tjAT09l5MQnsl/0FyOeNtzgJ5xoExob0dq/qiMJSSFl+BikQetoa2V3Dmlpont6zWwtdZAVmBjTe/xW/d2qYe/RDsrDoxOxDTGfM7pQxQq4h+1a09vumcMPrS8H7xN21VJmyIss3OqCkYME7LfBtAOQUDpu1iU/Kpq2KEq7QYSZ792xov6nkWUetK9vlO0Swg5SHgdj2ySXytswBwj+D3CjQE7oisilY3ll4DpmUoeIF5TKRtha6EKfvH0GHr9GP6r+LdIuxHZFLWUJTxcc0+ta+vmH01sYocuhe8EwQNJsATz+6pkA6KXgGJpl2P4242PCNhmyEk4MO50zEtXUbbPP8qHr0It8d/XSueXzqz9b8b84r0Ki7d2FZSgKlFFDuoa98o9wAR731AsBB5jesT1suKvBMPrKWGtiH121t2MzIpWxN7SbrAo898QZ9Pu6rdwWQcJCUuxx5P3EAgo56gACvs7nedBs3NU/FyryPHBrhK1tTUXerXDPh6Ku9WeCyMLV+QqmKB6N1Q/uq3bogT8u3DpgIcp8j+xzFQXFJyHrhs+zN4bcCltz4o0dqSwZ5THhY6Po35rmFJVLACAwXfTKvinwmkf/K6VokpIe7Gyr/3WQYiS1Ai0u0ehhOgpLfRmiZwWxCVgXe4M5bRYAtZXmnbeE3xhWnqqxaeCueih5ssE2QE2kE73Y6hOoHBvum8eGx0NkxHBUSL375X1mYcRnLAxp9/xJTnAl2N6D3WTFgeoI96fpYFxzgm+6T6AwJkz5sdGnMbITRPhUjWTMzcvBzy8fDKYc1VisHg4QrvAZdl1oYDB1gv9gQ1iC1hmj/3vSOl3KyscN1SJ6eKkKrvSKip27cYB1k=","layer_level":1}],"wiki_items":[{"catalog_id":"e477836f-1151-41d8-a55b-bfc3b7c24117","title":"核心概念","description":"core-concepts","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"33b5cf90-e616-4bc6-b3d6-1f1845b8c462","gmt_create":"2025-10-26T11:36:02.693202+08:00","gmt_modified":"2025-10-26T11:36:02.697565+08:00"},{"catalog_id":"fd492499-301d-4b03-abc3-a06e9a760886","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"0f681183-8518-403f-9c17-210b5f6a6d5f","gmt_create":"2025-10-26T11:36:14.645152+08:00","gmt_modified":"2025-10-26T11:36:14.647337+08:00"},{"catalog_id":"b7e6d24f-79cc-4498-940e-f01ff86e1ba9","title":"经典功能","description":"classic-features","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"62a43fef-a84b-4fa0-9c49-0c67e6767bb1","gmt_create":"2025-10-26T11:36:30.070737+08:00","gmt_modified":"2025-10-26T11:36:30.075258+08:00"},{"catalog_id":"60d80710-74fe-466e-a6da-02f3dfedb1cd","title":"第三方集成","description":"third-party-integrations","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"31ca2f90-4f8c-44f6-aa2f-3f6ed051a77f","gmt_create":"2025-10-26T11:37:19.589583+08:00","gmt_modified":"2025-10-26T11:37:19.59454+08:00"},{"catalog_id":"a0a3d4c2-a838-4254-9a06-1cbf7277dbab","title":"文本处理","description":"text-processing","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"feda3474-321d-421b-a9c8-ac6169599a28","gmt_create":"2025-10-26T11:37:40.664334+08:00","gmt_modified":"2025-10-26T11:37:40.668849+08:00"},{"catalog_id":"537ccb06-2a98-4a1d-8dac-7fe9b5a4844c","title":"快速开始","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"deb266a4-fb93-41fc-8966-e0c7c5b55e8a","gmt_create":"2025-10-26T11:38:31.808847+08:00","gmt_modified":"2025-10-26T11:38:31.812978+08:00"},{"catalog_id":"827f8e73-e58a-4be3-a51a-31df46ab64d7","title":"API参考","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"59714df0-f126-455c-911d-f42134cf8c20","gmt_create":"2025-10-26T11:38:33.714853+08:00","gmt_modified":"2025-10-26T11:38:33.719381+08:00"},{"catalog_id":"03e02c48-125b-47be-9f3e-74d8f2706bc6","title":"贡献指南","description":"contributing","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b6be5911-334f-49b7-99f5-b351b706af9f","gmt_create":"2025-10-26T11:39:22.178591+08:00","gmt_modified":"2025-10-26T11:39:22.182417+08:00"},{"catalog_id":"c9901b38-942f-4e03-9d56-4222fc1632e7","title":"最佳实践","description":"best-practices","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"024db602-02a2-40a9-b5d4-2a2555f1b87d","gmt_create":"2025-10-26T11:39:36.553678+08:00","gmt_modified":"2025-10-26T11:39:36.558777+08:00"},{"catalog_id":"f1c3b021-103d-45a3-baae-c9046a75d17d","title":"可运行组件 (Runnables)","description":"runnables","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"3a999017-e5fe-47ba-9062-c23558bdd5b1","gmt_create":"2025-10-26T11:40:26.645059+08:00","gmt_modified":"2025-10-26T11:40:26.649498+08:00"},{"catalog_id":"2a104a3b-2341-4b67-a77f-9af60146fc92","title":"Agents","description":"agents","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"9faa7013-dcfb-49f3-9817-7f3bd2aec201","gmt_create":"2025-10-26T11:40:34.546372+08:00","gmt_modified":"2025-10-26T11:40:34.549824+08:00"},{"catalog_id":"84038110-4491-4b60-9ab5-3ba41c1fff3c","title":"Anthropic 集成","description":"anthropic-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"5f8da7ac-a793-4e9b-8842-81caa6dccb97","gmt_create":"2025-10-26T11:41:19.562664+08:00","gmt_modified":"2025-10-26T11:41:19.567275+08:00"},{"catalog_id":"23fd15c3-dfb4-4cb6-b6f0-4a23fce22124","title":"Chroma 集成","description":"chroma-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"4126f214-7006-40bf-a380-ae431e2da2fa","gmt_create":"2025-10-26T11:42:01.438479+08:00","gmt_modified":"2025-10-26T11:42:01.443476+08:00"},{"catalog_id":"739017d2-068e-42c0-a018-28dc42bb17a2","title":"Chains","description":"chains","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"71728f24-c214-4a4d-a88f-2d8e560d7685","gmt_create":"2025-10-26T11:42:04.628996+08:00","gmt_modified":"2025-10-26T11:42:04.633431+08:00"},{"catalog_id":"6264ecc6-6e6f-44fb-a3a3-1343ffa728c4","title":"回调与追踪 (Callbacks \u0026 Tracers)","description":"callbacks-tracers","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"e1dbed83-c531-4b38-915b-05b93c967ecf","gmt_create":"2025-10-26T11:42:19.724091+08:00","gmt_modified":"2025-10-26T11:42:19.728816+08:00"},{"catalog_id":"7042428a-e443-4f41-bfaf-1704cb09851a","title":"OpenAI 集成","description":"openai-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"90913787-9289-4c29-adf8-3d3603ae37cf","gmt_create":"2025-10-26T11:43:16.315938+08:00","gmt_modified":"2025-10-26T11:43:16.317447+08:00"},{"catalog_id":"cb531d92-ebb5-440f-b083-fd900269d60f","title":"Chat Models","description":"chat-models","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"921d7681-ea5f-4d7a-a02d-41a74cbce7f6","gmt_create":"2025-10-26T11:43:35.130399+08:00","gmt_modified":"2025-10-26T11:43:35.134682+08:00"},{"catalog_id":"5fa23b29-1c74-4708-8756-ff9ea12bbabb","title":"提示工程 (Prompts)","description":"prompts","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"18dd825f-cbf1-4044-bbb6-8952b7ad60a2","gmt_create":"2025-10-26T11:43:55.489377+08:00","gmt_modified":"2025-10-26T11:43:55.494051+08:00"},{"catalog_id":"b5984db2-37e4-4e9f-9eb8-b929847a4ffd","title":"Document Loaders","description":"document-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"c75c633f-5a55-45f2-a42d-368523ad9a92","gmt_create":"2025-10-26T11:44:45.253641+08:00","gmt_modified":"2025-10-26T11:44:45.257878+08:00"},{"catalog_id":"38f39743-3a60-43e5-b9ff-f5aaca2a3a38","title":"模型集成 (Models)","description":"models","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ecbf7190-50f8-4c7c-be00-763ac6f2f55b","gmt_create":"2025-10-26T11:44:57.590991+08:00","gmt_modified":"2025-10-26T11:44:57.595661+08:00"},{"catalog_id":"f3bc13ed-c2be-49ce-abe6-2017089c3df9","title":"Ollama 集成","description":"ollama-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"5e2251de-5ab0-4d72-9f9c-4b6392d698e1","gmt_create":"2025-10-26T11:45:05.376389+08:00","gmt_modified":"2025-10-26T11:45:05.380902+08:00"},{"catalog_id":"a70dfb9d-0144-4270-8d72-8dee18f10257","title":"Embeddings","description":"embeddings","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"7f82aaa5-7fec-46b5-bd38-cdd5cf8a8300","gmt_create":"2025-10-26T11:46:00.502398+08:00","gmt_modified":"2025-10-26T11:46:00.506623+08:00"},{"catalog_id":"332ff39f-07f4-432f-888e-c957082c5601","title":"Fireworks 集成","description":"fireworks-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"717e66ce-8368-40f6-a36c-7ec8d230094b","gmt_create":"2025-10-26T11:46:13.004352+08:00","gmt_modified":"2025-10-26T11:46:13.008593+08:00"},{"catalog_id":"74fa34da-8c49-4cbb-92c7-0651175b6e44","title":"MistralAI 集成","description":"mistralai-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ef0b8ee1-8db0-4615-a91b-b4cbda6e74a8","gmt_create":"2025-10-26T11:46:15.596382+08:00","gmt_modified":"2025-10-26T11:46:15.600774+08:00"},{"catalog_id":"950a5856-cb2b-4c27-8314-1f5789d0f152","title":"Memory","description":"memory","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ebe077a7-35ac-4b70-a886-632185fc32aa","gmt_create":"2025-10-26T11:47:34.054025+08:00","gmt_modified":"2025-10-26T11:47:34.058223+08:00"},{"catalog_id":"36c35786-2770-47e6-9a89-1e55a35ae360","title":"LLMs","description":"llms","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"1ab7913b-b94b-4ce8-bb43-0932aeca5797","gmt_create":"2025-10-26T11:48:05.097643+08:00","gmt_modified":"2025-10-26T11:48:05.102407+08:00"},{"catalog_id":"99cb2cf5-f6fe-42ba-acb4-ca8b1ca7a5e0","title":"Output Parsers","description":"output-parsers","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"9c693e47-bb5a-4fe4-8231-b76bc62867dd","gmt_create":"2025-10-26T11:48:13.290105+08:00","gmt_modified":"2025-10-26T11:48:13.294368+08:00"},{"catalog_id":"1248f9e5-5ec0-4bf5-b002-ef59fc4259b1","title":"Prompts","description":"prompts","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"0bfdeff7-b632-46fd-98d2-e633cabb2256","gmt_create":"2025-10-26T11:48:48.838334+08:00","gmt_modified":"2025-10-26T11:48:48.842917+08:00"},{"catalog_id":"42f7ace6-de00-4f90-8caa-97fc51015613","title":"Tools","description":"tools","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"39554529-64d0-4486-9f0a-45cb1818a101","gmt_create":"2025-10-26T11:49:24.006485+08:00","gmt_modified":"2025-10-26T11:49:24.010675+08:00"},{"catalog_id":"37c063a1-2c65-4467-baa1-3de97aab5352","title":"Retriever","description":"retriever","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"46f3c28b-63bf-4239-b973-920e8c154fde","gmt_create":"2025-10-26T11:49:37.884768+08:00","gmt_modified":"2025-10-26T11:49:37.889385+08:00"},{"catalog_id":"1d302f14-ffc8-4f56-b554-4e9d30cd0da9","title":"Vectorstores","description":"vectorstores","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"c63ffe67-2e8b-4750-a007-112ab3641020","gmt_create":"2025-10-26T11:50:48.785511+08:00","gmt_modified":"2025-10-26T11:50:48.790007+08:00"},{"catalog_id":"e9f26301-bd68-460e-9305-61300f48f5fd","title":"LLMChain","description":"llm_chain","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"95a249d2-6d7c-4836-a3a8-c755f9f5fe10","gmt_create":"2025-10-26T11:51:00.111301+08:00","gmt_modified":"2025-10-26T11:51:00.113402+08:00"},{"catalog_id":"605b534a-c19c-4f50-a7bd-dd79a672b6ca","title":"聊天模型 (ChatOpenAI)","description":"openai-chat-models","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"c371d3dc-678b-4335-9e72-ed45cf7a12a3","gmt_create":"2025-10-26T11:51:08.679646+08:00","gmt_modified":"2025-10-26T11:51:08.684098+08:00"},{"catalog_id":"baf186da-7347-4a0c-a819-e4c5f5225530","title":"Agent类型","description":"agent_types","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"d66a5a45-7205-4a85-96eb-bfe109ec4442","gmt_create":"2025-10-26T11:52:19.108336+08:00","gmt_modified":"2025-10-26T11:52:19.113078+08:00"},{"catalog_id":"c557abbb-3556-484d-8ae4-9560f7de948a","title":"OpenAI Chat Model","description":"openai-chat-model","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"622a7261-fe5f-452b-9349-cb9638dea2e9","gmt_create":"2025-10-26T11:52:21.62173+08:00","gmt_modified":"2025-10-26T11:52:21.625991+08:00"},{"catalog_id":"ee740caa-296b-4e25-8447-876ee7caa6d9","title":"OpenAI Embeddings","description":"openai-embeddings","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ab0513e3-7349-4e7e-8f1e-718181dacf8c","gmt_create":"2025-10-26T11:52:26.915484+08:00","gmt_modified":"2025-10-26T11:52:26.919757+08:00"},{"catalog_id":"73f489e4-845e-416c-9690-d0ae30e3ec80","title":"PDF文档加载器","description":"pdf-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"22a2cf6f-bd7c-4585-99f1-0254e7d3025d","gmt_create":"2025-10-26T11:53:40.472627+08:00","gmt_modified":"2025-10-26T11:53:40.476965+08:00"},{"catalog_id":"0c8f2658-a312-4ec6-8008-9bfbbaec75a4","title":"Buffer Memory","description":"memory-buffer","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"72963fd2-0bbf-4779-8c3a-ceb9bdf106c6","gmt_create":"2025-10-26T11:53:42.615599+08:00","gmt_modified":"2025-10-26T11:53:42.619953+08:00"},{"catalog_id":"3ce9ffe6-7ff3-437f-a8a6-8146c5904c47","title":"基础LLM类","description":"llms-base","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"40dc51ee-3453-43a9-8b76-e05de31359a9","gmt_create":"2025-10-26T11:53:45.128214+08:00","gmt_modified":"2025-10-26T11:53:45.132491+08:00"},{"catalog_id":"33ffdce5-d35a-4ae0-ba2a-3a92b99e9dfd","title":"内置工具","description":"tools-builtin","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"3facf10c-b7a9-47c8-8401-07f0bf91bfa0","gmt_create":"2025-10-26T11:54:45.566326+08:00","gmt_modified":"2025-10-26T11:54:45.570028+08:00"},{"catalog_id":"a603d133-5caa-4658-b266-86174253b124","title":"JSON Output Parser","description":"json-output-parser","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"7aea218f-c903-4fcc-8c27-195c8ca6caed","gmt_create":"2025-10-26T11:55:05.167775+08:00","gmt_modified":"2025-10-26T11:55:05.172313+08:00"},{"catalog_id":"27fbee26-58d0-485f-a0d5-790bb9fd065c","title":"Prompt Templates","description":"prompt-templates","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"2f06481d-d342-4e1e-9bd3-e0cab51f29b3","gmt_create":"2025-10-26T11:55:07.404656+08:00","gmt_modified":"2025-10-26T11:55:07.40914+08:00"},{"catalog_id":"752f4c84-c0ae-4f5d-b794-1f2819a06976","title":"向量检索器","description":"vector-retriever","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f6184d5e-7ffa-4bc8-97f8-4367f6cad4f2","gmt_create":"2025-10-26T11:56:14.161911+08:00","gmt_modified":"2025-10-26T11:56:14.166193+08:00"},{"catalog_id":"436ccad4-b078-4941-9984-98b4906f9b4a","title":"嵌入模型 (OpenAIEmbeddings)","description":"openai-embeddings","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"430abf0c-882d-4482-b886-cd90c82ef83f","gmt_create":"2025-10-26T11:56:33.044037+08:00","gmt_modified":"2025-10-26T11:56:33.048097+08:00"},{"catalog_id":"81d3c644-5797-407e-b455-43b1b5d57ca3","title":"Chroma集成","description":"vectorstores-chroma","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b7adfefe-d5a8-4754-9465-61bda0fe6eb5","gmt_create":"2025-10-26T11:56:48.863749+08:00","gmt_modified":"2025-10-26T11:56:48.868599+08:00"},{"catalog_id":"7c51acdf-a2e2-48f3-98fc-3be02f0c274b","title":"SequentialChain","description":"sequential_chain","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"c8b2c279-3e8f-43c7-ae76-e97b7fbb53b8","gmt_create":"2025-10-26T11:57:31.815024+08:00","gmt_modified":"2025-10-26T11:57:31.819731+08:00"},{"catalog_id":"b6b3faf4-13bc-41c2-91e8-e81fcc7b4c3f","title":"Anthropic Chat Model","description":"anthropic-chat-model","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"2aef8b2c-b8de-48e6-9e2b-03f63fc81822","gmt_create":"2025-10-26T11:58:04.151954+08:00","gmt_modified":"2025-10-26T11:58:04.156537+08:00"},{"catalog_id":"689db83d-e450-4c8f-b2c8-3070d7d0c463","title":"工具集成","description":"tools_integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f7166328-63d5-4be1-948d-8d7bf4488132","gmt_create":"2025-10-26T11:58:39.848325+08:00","gmt_modified":"2025-10-26T11:58:39.853008+08:00"},{"catalog_id":"a0a36ace-9bc8-4388-868f-288679ef6f17","title":"Hugging Face Embeddings","description":"huggingface-embeddings","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"e9ff1bff-fcd2-4d6a-aa98-d1a62191e2ba","gmt_create":"2025-10-26T11:59:11.415323+08:00","gmt_modified":"2025-10-26T11:59:11.420146+08:00"},{"catalog_id":"3389096d-e328-40ae-a72e-eabf43b5616a","title":"OpenAI LLM","description":"llms-openai","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"9a762229-dd65-47df-9ab9-3590cb909a4c","gmt_create":"2025-10-26T11:59:50.945191+08:00","gmt_modified":"2025-10-26T11:59:50.949267+08:00"},{"catalog_id":"79b39613-3fd3-477c-8f6d-1e3216d2ee9a","title":"网页内容加载器","description":"web-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"e77f7a2c-3cc9-4955-80b2-97f731c7ca17","gmt_create":"2025-10-26T11:59:55.339451+08:00","gmt_modified":"2025-10-26T11:59:55.343851+08:00"},{"catalog_id":"10b9c650-2b0c-493a-acf3-e0320ed8da14","title":"Summary Memory","description":"memory-summary","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b71a700d-4abb-47e5-a4b8-30e9083654c1","gmt_create":"2025-10-26T12:00:32.066893+08:00","gmt_modified":"2025-10-26T12:00:32.071441+08:00"},{"catalog_id":"1c85630b-0b53-404e-b9a6-f0f7c83cde8d","title":"Pydantic Output Parser","description":"pydantic-output-parser","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f4769452-5132-45c3-9689-cb27b9dad874","gmt_create":"2025-10-26T12:01:34.527778+08:00","gmt_modified":"2025-10-26T12:01:34.532302+08:00"},{"catalog_id":"0337b533-6e7b-4ace-b33d-1788569e14c4","title":"Chat Prompts","description":"chat-prompts","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"d0d1412e-621b-4d66-88b9-95b5dd3bf1b2","gmt_create":"2025-10-26T12:01:35.118381+08:00","gmt_modified":"2025-10-26T12:01:35.122951+08:00"},{"catalog_id":"01feb3ce-1552-4c3b-95ec-e309d50aa1a1","title":"Pinecone集成","description":"vectorstores-pinecone","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"cc8dc5cb-78e1-4952-8400-dbd77abcd7d1","gmt_create":"2025-10-26T12:02:37.666012+08:00","gmt_modified":"2025-10-26T12:02:37.670318+08:00"},{"catalog_id":"0c62cfa3-c020-4b5e-bdd5-2ed39b3992ea","title":"关键词检索器","description":"keyword-retriever","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"029f7065-d13a-4d69-8f62-613dc352d342","gmt_create":"2025-10-26T12:02:47.841758+08:00","gmt_modified":"2025-10-26T12:02:47.845904+08:00"},{"catalog_id":"df7852dc-6bea-486e-a9ff-ef1c9b085b6a","title":"自定义工具","description":"tools-custom","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"56f388a4-5021-40f9-9ac1-3a355bfe71fb","gmt_create":"2025-10-26T12:02:50.454056+08:00","gmt_modified":"2025-10-26T12:02:50.459458+08:00"},{"catalog_id":"92e9ec85-4e70-43f9-b3f6-a8a8a3b331ea","title":"RetrievalQAChain","description":"retrieval_qa_chain","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"dd8b762b-c6d6-4758-a9fe-85fe4fbc55f1","gmt_create":"2025-10-26T12:04:00.360841+08:00","gmt_modified":"2025-10-26T12:04:00.363815+08:00"},{"catalog_id":"90e2cd3d-f7e1-42d8-86c9-8e4dc95feda8","title":"VertexAI Chat Model","description":"vertexai-chat-model","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"67ae2bae-25c4-4b0e-a370-5eaf3c3d6792","gmt_create":"2025-10-26T12:04:13.599374+08:00","gmt_modified":"2025-10-26T12:04:13.60364+08:00"},{"catalog_id":"80b25616-41fb-4f9b-890d-e28a715dd75e","title":"基础LLM模型 (OpenAI)","description":"openai-llms","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"523573ca-533f-41a1-8aa0-351d104419f7","gmt_create":"2025-10-26T12:04:23.487103+08:00","gmt_modified":"2025-10-26T12:04:23.488737+08:00"},{"catalog_id":"73f81e67-0b0f-40a0-b371-1332935aa4f7","title":"SageMaker Embeddings","description":"sagemaker-embeddings","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ad2659bc-7aed-4192-88b0-f1a25646aa5a","gmt_create":"2025-10-26T12:05:24.494523+08:00","gmt_modified":"2025-10-26T12:05:24.498853+08:00"},{"catalog_id":"dc92fb7d-dd37-4463-bd39-ead97ef431f5","title":"执行流程与状态管理","description":"agent_execution","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"dd39b7fd-1483-4ed9-8ccf-815893eb618e","gmt_create":"2025-10-26T12:06:11.488847+08:00","gmt_modified":"2025-10-26T12:06:11.493071+08:00"},{"catalog_id":"37510523-6d87-4f4f-b6b7-df01f6601638","title":"Anthropic LLM","description":"llms-anthropic","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"927cefa0-c741-41c6-85d2-6f7169da361b","gmt_create":"2025-10-26T12:06:13.966278+08:00","gmt_modified":"2025-10-26T12:06:13.970468+08:00"},{"catalog_id":"0a06588d-8c0c-4bc5-a1e0-59602dc9be2f","title":"结构化数据加载器","description":"structured-data-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"1a1b2aa0-b2d6-4252-8dbc-def051b239cc","gmt_create":"2025-10-26T12:06:30.918841+08:00","gmt_modified":"2025-10-26T12:06:30.923206+08:00"},{"catalog_id":"645afb80-283c-4ada-9a5c-39f0b2c5b69f","title":"VectorStore Memory","description":"memory-vectorstore","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"55aba1b4-40e9-4771-bb24-448b0488549f","gmt_create":"2025-10-26T12:07:41.050084+08:00","gmt_modified":"2025-10-26T12:07:41.054073+08:00"},{"catalog_id":"222cf363-814c-4521-b28c-63754e8a56dd","title":"Few-shot Learning","description":"few-shot-learning","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"fdb3db2f-0d08-4959-b90b-b90a49a2a696","gmt_create":"2025-10-26T12:07:57.546897+08:00","gmt_modified":"2025-10-26T12:07:57.550771+08:00"},{"catalog_id":"2ac7249e-e61d-4e6e-8626-415b85794cc0","title":"Regex Output Parser","description":"regex-output-parser","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"a3346134-33a0-4b9f-84d2-d77a613d4916","gmt_create":"2025-10-26T12:07:59.859931+08:00","gmt_modified":"2025-10-26T12:07:59.864344+08:00"},{"catalog_id":"292a4241-68a9-43dd-b2c5-f63b36f444dd","title":"工具集成","description":"tools-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"51ff0ed6-5102-46dd-8c5c-35462371d864","gmt_create":"2025-10-26T12:08:46.137851+08:00","gmt_modified":"2025-10-26T12:08:46.141822+08:00"},{"catalog_id":"e84e7681-17b3-4cf1-9297-88c51ce3aef9","title":"混合检索器","description":"hybrid-retriever","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"23978830-7b1b-467f-a0c4-2f65572993db","gmt_create":"2025-10-26T12:08:50.618347+08:00","gmt_modified":"2025-10-26T12:08:50.622556+08:00"},{"catalog_id":"f900441f-4477-49f9-8e6c-c5f6cc9910f6","title":"Weaviate集成","description":"vectorstores-weaviate","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b6f58da4-6ff8-4b6f-8804-a5502353e1ec","gmt_create":"2025-10-26T12:09:09.526544+08:00","gmt_modified":"2025-10-26T12:09:09.531327+08:00"},{"catalog_id":"925057a9-3ae8-482f-863d-9fcfca4412c1","title":"其他Chains","description":"其他_chains","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"5905a27f-8e36-48d6-a029-5af3fd113929","gmt_create":"2025-10-26T12:10:24.907052+08:00","gmt_modified":"2025-10-26T12:10:24.911723+08:00"},{"catalog_id":"e069483d-3ca5-4770-9c8f-148c6015f8fd","title":"提示工程","description":"prompt_engineering","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"3003d31a-5488-42ae-b8a2-4fcf3e31bf2a","gmt_create":"2025-10-26T12:10:30.922364+08:00","gmt_modified":"2025-10-26T12:10:30.92411+08:00"},{"catalog_id":"17648e9f-a8f6-4cbc-a387-14dba29778a6","title":"基础聊天模型接口","description":"base-chat-model","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"5cc9f993-4e39-44fe-b3e9-543a0af4dabf","gmt_create":"2025-10-26T12:10:40.940472+08:00","gmt_modified":"2025-10-26T12:10:40.944989+08:00"},{"catalog_id":"afc5780c-e8f5-49d5-9154-07b19874b0d2","title":"Embeddings 基础接口","description":"embeddings-base","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b8b90666-8a1c-4ec2-a950-9891f01721ed","gmt_create":"2025-10-26T12:11:36.246563+08:00","gmt_modified":"2025-10-26T12:11:36.250897+08:00"},{"catalog_id":"1df300eb-f97c-4dc5-9ed7-39f5a63121c6","title":"数据库加载器","description":"database-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"a4284d6f-ed4a-4a9f-8243-50f6ef7f8e53","gmt_create":"2025-10-26T12:11:54.761469+08:00","gmt_modified":"2025-10-26T12:11:54.766022+08:00"},{"catalog_id":"70eb1963-dafa-4dbc-a6d0-019fc007f4be","title":"Hugging Face Hub LLM","description":"llms-huggingface","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"b89a2107-689e-489a-834f-7a2ed7dace1c","gmt_create":"2025-10-26T12:12:26.451167+08:00","gmt_modified":"2025-10-26T12:12:26.453588+08:00"},{"catalog_id":"8a91bead-2193-4ee7-a9b3-b50b08cffc90","title":"Base Output Parser","description":"base-output-parser","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"0b782726-9b8c-436a-9b5f-c372531d8bdd","gmt_create":"2025-10-26T12:12:40.607027+08:00","gmt_modified":"2025-10-26T12:12:40.610332+08:00"},{"catalog_id":"f49da6ad-9a41-4fc6-9122-a1a6c5f35a24","title":"上下文压缩检索器","description":"contextual-compression","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"6ef91792-69ac-4d8e-8147-76311a5d7c7f","gmt_create":"2025-10-26T12:13:28.268665+08:00","gmt_modified":"2025-10-26T12:13:28.273552+08:00"},{"catalog_id":"df1c6888-1986-489c-b529-b7dd3c6ccc00","title":"基础接口与自定义","description":"vectorstores-base","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"a9a84bd3-f90f-47af-b4cc-2c07a7c40f82","gmt_create":"2025-10-26T12:13:58.806151+08:00","gmt_modified":"2025-10-26T12:13:58.810546+08:00"},{"catalog_id":"d8276ae2-32bb-4ccc-8bc6-fe5f48b46aa5","title":"记忆管理","description":"memory_management","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"6985f800-2388-46ad-a9da-d94d61c7f5fd","gmt_create":"2025-10-26T12:14:07.182822+08:00","gmt_modified":"2025-10-26T12:14:07.1869+08:00"},{"catalog_id":"6e29107d-0002-434a-bc7e-2179c1784f6d","title":"云存储加载器","description":"cloud-storage-loaders","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"31307f8d-33f5-4b94-be25-33d230a070d8","gmt_create":"2025-10-26T12:14:31.110379+08:00","gmt_modified":"2025-10-26T12:14:31.115063+08:00"},{"catalog_id":"7fca28cf-db6d-408b-ba2a-a3988c334ea1","title":"多查询检索器","description":"multi-query-retriever","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"13794646-653a-4b68-be74-4852550edf84","gmt_create":"2025-10-26T12:15:03.656042+08:00","gmt_modified":"2025-10-26T12:15:03.659567+08:00"},{"catalog_id":"34d53867-a80d-4900-b634-d69ce4fa819d","title":"Python REPL工具","description":"tools-builtin-python","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"8307a9fc-2ec6-47fb-bbf2-3f34afd3ac42","gmt_create":"2025-10-26T12:15:14.810286+08:00","gmt_modified":"2025-10-26T12:15:14.812779+08:00"},{"catalog_id":"f3ab6d24-0538-4205-9c65-2f6dcde3f5b4","title":"核心聊天模型 (ChatOpenAI)","description":"openai-chat-models-core","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"19cdec94-a7a8-48fa-9348-54199957f8ec","gmt_create":"2025-10-26T12:15:58.001786+08:00","gmt_modified":"2025-10-26T12:15:58.006338+08:00"},{"catalog_id":"8d9054a6-0886-4d95-98c8-19c4d56f797e","title":"MRKL Agent","description":"mrkl_agent","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"7f2a5009-b819-4976-9114-eb759e1da9ab","gmt_create":"2025-10-26T12:16:18.277022+08:00","gmt_modified":"2025-10-26T12:16:18.281307+08:00"},{"catalog_id":"8cfa06f4-332a-4437-b9bb-2b0e81c1de2d","title":"工具抽象","description":"tool_abstraction","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f7a5ad97-49e5-4077-b963-e3f91fd0b3fb","gmt_create":"2025-10-26T12:16:34.527273+08:00","gmt_modified":"2025-10-26T12:16:34.531661+08:00"},{"catalog_id":"5e7b8afc-cd09-45a3-883c-01cacdef5ec8","title":"融合策略","description":"fusion-strategies","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"8d886dc2-a6be-4aeb-9e2a-f37a5c910bce","gmt_create":"2025-10-26T12:17:03.575559+08:00","gmt_modified":"2025-10-26T12:17:03.579893+08:00"},{"catalog_id":"5ecfbf5c-3ac3-45ce-93c2-000c8e0731cd","title":"向量数据库集成","description":"vector-retriever-integration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"3b6366e1-dcb0-4469-aa1d-aaeeced32af6","gmt_create":"2025-10-26T12:17:40.0927+08:00","gmt_modified":"2025-10-26T12:17:40.096871+08:00"},{"catalog_id":"9f243123-6b8c-45e2-8e82-60c50426e188","title":"Requests工具","description":"tools-builtin-requests","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"14f3779c-9923-4daa-93bf-9facb9742b6c","gmt_create":"2025-10-26T12:18:06.404884+08:00","gmt_modified":"2025-10-26T12:18:06.408339+08:00"},{"catalog_id":"6c5c4d81-1a58-4082-9028-35df7ada80b1","title":"ReAct Agent","description":"react_agent","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"2f42dfa6-40d5-46ee-985e-2c5112601e36","gmt_create":"2025-10-26T12:18:33.987072+08:00","gmt_modified":"2025-10-26T12:18:33.991608+08:00"},{"catalog_id":"4c4e66c7-9260-4e85-88d5-14d397b808a1","title":"Azure OpenAI 聊天模型","description":"openai-chat-models-azure","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"ed6acb3b-b520-4140-8a84-a3d59c592114","gmt_create":"2025-10-26T12:18:58.585991+08:00","gmt_modified":"2025-10-26T12:18:58.59053+08:00"},{"catalog_id":"7cb5f1ae-ed3c-4106-96f6-2ce72314c650","title":"自定义工具开发","description":"custom_tool_development","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"5518c446-d99a-4788-a591-74e6644e939a","gmt_create":"2025-10-26T12:19:30.586955+08:00","gmt_modified":"2025-10-26T12:19:30.58981+08:00"},{"catalog_id":"38e1e47c-c3f7-4552-b549-54857fef6ebb","title":"Pinecone 混合搜索","description":"pinecone-hybrid","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f08b4e49-e369-40c1-aa6a-2570112573f8","gmt_create":"2025-10-26T12:19:34.951345+08:00","gmt_modified":"2025-10-26T12:19:34.955347+08:00"},{"catalog_id":"d84815c4-ae05-49af-900c-3b219ca7618e","title":"嵌入模型配置","description":"embedding-models-configuration","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"f21f36f8-58e6-413b-97dd-2c3d760aaa1b","gmt_create":"2025-10-26T12:20:18.484784+08:00","gmt_modified":"2025-10-26T12:20:18.489123+08:00"},{"catalog_id":"da4cc35d-4d21-4271-8092-aa5d12bafbe9","title":"Structured Chat Agent","description":"structured_chat_agent","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"0eb5c5a0-1cfd-4c4f-a692-574a1fe037d6","gmt_create":"2025-10-26T12:21:08.986623+08:00","gmt_modified":"2025-10-26T12:21:08.99106+08:00"},{"catalog_id":"23b06d30-22e1-4094-ab49-08747bc5444c","title":"文件管理工具","description":"tools-builtin-file","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"843f1ecd-1e38-4a40-b69d-19670fc99a25","gmt_create":"2025-10-26T12:21:31.102471+08:00","gmt_modified":"2025-10-26T12:21:31.107549+08:00"},{"catalog_id":"2df32ad3-d4ed-4516-b147-e3d3aece8f71","title":"预构建工具","description":"prebuilt_tools","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"35cfaf0e-5d11-4246-8b28-ce32aea780e1","gmt_create":"2025-10-26T12:21:33.829171+08:00","gmt_modified":"2025-10-26T12:21:33.832973+08:00"},{"catalog_id":"972efa65-4bf3-4014-8977-174e1e348606","title":"Weaviate 混合搜索","description":"weaviate-hybrid","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"07bcc8ff-683d-410e-9417-ace5bd761c4b","gmt_create":"2025-10-26T12:22:07.7612+08:00","gmt_modified":"2025-10-26T12:22:07.764495+08:00"},{"catalog_id":"4d188051-9946-4c4a-b1b1-49b064a4e9f4","title":"OpenAI Functions Agent","description":"openai_functions_agent","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"3a7d60ec-b417-4ed1-a4fa-76c1676adf23","gmt_create":"2025-10-26T12:22:40.986136+08:00","gmt_modified":"2025-10-26T12:22:40.990346+08:00"},{"catalog_id":"24b9e872-4460-49ae-b5f1-3cde00f077ea","title":"检索优化策略","description":"retrieval-optimization","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"98a7a607-b8fd-48c2-a888-0c30182ef430","gmt_create":"2025-10-26T12:23:01.244423+08:00","gmt_modified":"2025-10-26T12:23:01.248373+08:00"},{"catalog_id":"892d4202-e6cd-4923-893e-fea64fa14e57","title":"工具执行机制","description":"tool_execution_mechanism","extend":"{}","progress_status":"completed","repo_id":"620e555c-f612-4331-982d-e599d99bc243","id":"acf850d1-3be4-4a5c-b599-2370a70f9045","gmt_create":"2025-10-26T12:24:07.478966+08:00","gmt_modified":"2025-10-26T12:24:07.48303+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# LangChain 项目综合分析\n\n## 1. 项目介绍\n\n### 项目目的\nLangChain 是一个用于构建 LLM（大语言模型）驱动应用程序的框架。它通过提供标准化接口，帮助开发者将 LLM 与各种数据源、外部系统和第三方服务集成，简化 AI 应用的开发过程。\n\n### 核心目标\n- **实时数据增强**：轻松连接 LLM 到多样化的数据源和内外部系统\n- **模型互操作性**：在不同模型之间快速切换，适应技术演进\n- **组件链式组合**：通过可互操作的组件和第三方集成简化 AI 应用开发\n- **未来兼容性**：随着底层技术的发展，保持决策的前瞻性\n\n### 目标受众\n- AI 应用开发者\n- 机器学习工程师\n- 数据科学家\n- 需要集成 LLM 功能的产品团队\n\n## 2. 技术架构\n\n### 项目结构分析\nLangChain 采用模块化的 monorepo 架构，主要包含以下核心组件：\n\n```mermaid\ngraph TD\n    A[LangChain] --\u003e B[Core]\n    A --\u003e C[CLI]\n    A --\u003e D[LangChain Classic]\n    A --\u003e E[LangChain v1]\n    A --\u003e F[Partners]\n    A --\u003e G[Text Splitters]\n    A --\u003e H[Standard Tests]\n    \n    B --\u003e B1[langchain_core]\n    D --\u003e D1[langchain_classic]\n    F --\u003e F1[Anthropic]\n    F --\u003e F2[Chroma]\n    F --\u003e F3[OpenAI]\n    F --\u003e F4[Ollama]\n    F --\u003e F5[MistralAI]\n    F --\u003e F6[Fireworks]\n```\n\n### 设计模式\n项目采用了多种设计模式和架构原则：\n\n1. **抽象基类模式**：通过 `BaseChatModel`、`BaseEmbeddings` 等抽象基类定义标准接口\n2. **装饰器模式**：使用 `@tool` 装饰器创建工具函数\n3. **工厂模式**：通过 `Runnable` 系列类创建可组合的执行单元\n4. **观察者模式**：通过 `tracers` 和 `callbacks` 实现执行跟踪\n\n### 系统关系\n```mermaid\ngraph TD\n    Client[客户端应用] --\u003e LangChain[LangChain 框架]\n    LangChain --\u003e Core[langchain_core]\n    LangChain --\u003e Partners[合作伙伴集成]\n    Core --\u003e Runnables[Runnables]\n    Core --\u003e Tracers[Tracers]\n    Core --\u003e Callbacks[Callbacks]\n    Core --\u003e Prompts[Prompts]\n    Core --\u003e Models[Models]\n    Partners --\u003e Anthropic[Anthropic]\n    Partners --\u003e OpenAI[OpenAI]\n    Partners --\u003e Ollama[Ollama]\n    Partners --\u003e MistralAI[MistralAI]\n```\n\n### 数据流\n```mermaid\nflowchart TD\n    A[输入] --\u003e B[Runnables]\n    B --\u003e C[LLM 模型]\n    C --\u003e D[回调系统]\n    D --\u003e E[追踪器]\n    E --\u003e F[LangSmith]\n    C --\u003e G[输出解析器]\n    G --\u003e H[结构化输出]\n    H --\u003e I[最终结果]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- `libs/core/langchain_core/runnables/base.py` - Runnable 基类实现\n- `libs/core/langchain_core/tracers/langchain.py` - LangChain 追踪器实现\n- `libs/langchain/langchain_classic/__init__.py` - 主要入口点\n\n### 核心模块\n- `langchain_core` - 核心抽象和基础组件\n- `langchain_classic` - 经典功能实现\n- `partners` - 第三方服务集成\n- `text-splitters` - 文本分割工具\n\n### 配置方法\n项目使用 `pyproject.toml` 进行依赖管理和配置：\n\n- `libs/core/pyproject.toml` - 核心库配置\n- `libs/langchain/pyproject.toml` - 主要库配置\n- `libs/partners/*/pyproject.toml` - 合作伙伴集成配置\n\n### 外部依赖\n```mermaid\ngraph TD\n    A[langchain-core] --\u003e B[langsmith]\n    A --\u003e C[tenacity]\n    A --\u003e D[PyYAML]\n    A --\u003e E[pydantic]\n    F[langchain-classic] --\u003e G[langchain-core]\n    F --\u003e H[SQLAlchemy]\n    F --\u003e I[requests]\n    F --\u003e J[langsmith]\n```\n\n### 集成点\n- **模型提供商**：OpenAI、Anthropic、MistralAI、Ollama 等\n- **向量数据库**：Chroma、Qdrant 等\n- **监控和调试**：LangSmith\n- **工作流编排**：LangGraph\n\n### 组件关系\n```mermaid\ngraph LR\n    A[langchain_core] --\u003e B[Runnables]\n    A --\u003e C[Tracers]\n    A --\u003e D[Callbacks]\n    A --\u003e E[Prompts]\n    A --\u003e F[Models]\n    B --\u003e G[RunnableSequence]\n    B --\u003e H[RunnableParallel]\n    C --\u003e I[LangChainTracer]\n    D --\u003e J[ConsoleCallbackHandler]\n    E --\u003e K[ChatPromptTemplate]\n    F --\u003e L[BaseChatModel]\n```\n\n## 4. 关键特性\n\n### 功能概述\nLangChain 提供了以下核心功能：\n\n1. **可运行组件**（Runnables）：支持同步、异步、批量和流式处理\n2. **追踪和回调**：执行过程的监控和调试\n3. **提示工程**：灵活的提示模板系统\n4. **模型集成**：多种 LLM 提供商的统一接口\n5. **工具集成**：外部工具的调用能力\n\n### 实现亮点\n- **Runnable 抽象**：统一的可执行组件接口\n- **LangChainTracer**：详细的执行追踪\n- **模块化设计**：清晰的职责分离\n- **向后兼容**：通过 `__getattr__` 实现平滑迁移\n\n### 功能架构\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 初始化\n    初始化 --\u003e 配置: 设置参数\n    配置 --\u003e 构建链: 组合组件\n    构建链 --\u003e 执行: invoke/ainvoke\n    执行 --\u003e 流式处理: stream/astream\n    执行 --\u003e 批量处理: batch/abatch\n    执行 --\u003e 事件流: astream_events\n    流式处理 --\u003e 完成\n    批量处理 --\u003e 完成\n    事件流 --\u003e 完成\n    完成 --\u003e [*]\n```\n\nSources:\n- [README.md](/Users/berton/Github/langchain/README.md)\n- [AGENTS.md](/Users/berton/Github/langchain/AGENTS.md)\n- [MIGRATE.md](/Users/berton/Github/langchain/MIGRATE.md)\n- [pyproject.toml](/Users/berton/Github/langchain/libs/core/pyproject.toml)\n- [pyproject.toml](/Users/berton/Github/langchain/libs/langchain/pyproject.toml)\n- [langchain.py](/Users/berton/Github/langchain/libs/core/langchain_core/tracers/langchain.py)\n- [base.py](/Users/berton/Github/langchain/libs/core/langchain_core/runnables/base.py)\n- [chat_models.py](/Users/berton/Github/langchain/libs/core/langchain_core/language_models/chat_models.py)\n- [__init__.py](/Users/berton/Github/langchain/libs/langchain/langchain_classic/__init__.py)\n\u003c/blog\u003e","gmt_create":"2025-10-26T11:30:33.654196+08:00","gmt_modified":"2025-10-26T11:30:33.654196+08:00","id":"7fef9cb3-c3c1-48c9-b27f-107b4ca9e51e","repo_id":"620e555c-f612-4331-982d-e599d99bc243"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-26T11:29:40.479785+08:00","gmt_modified":"2025-10-26T11:29:40.479785+08:00","id":"a0c8bc2e-2945-43be-8269-746416cfea01","repo_id":"620e555c-f612-4331-982d-e599d99bc243"},"wiki_repo":{"id":"620e555c-f612-4331-982d-e599d99bc243","name":"langchain","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── libs\\n│   ├── cli\\n│   │   ├── langchain_cli\\n│   │   │   ├── integration_template\\n│   │   │   │   ├── docs\\n│   │   │   │   ├── integration_template\\n│   │   │   │   ├── scripts\\n│   │   │   │   ├── tests\\n│   │   │   │   ├── Makefile\\n│   │   │   │   ├── README.md\\n│   │   │   │   └── pyproject.toml\\n│   │   │   ├── namespaces\\n│   │   │   │   ├── migrate\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── app.py\\n│   │   │   │   ├── integration.py\\n│   │   │   │   └── template.py\\n│   │   │   ├── package_template\\n│   │   │   │   ├── package_template\\n│   │   │   │   ├── tests\\n│   │   │   │   ├── README.md\\n│   │   │   │   └── pyproject.toml\\n│   │   │   ├── project_template\\n│   │   │   │   ├── app\\n│   │   │   │   ├── Dockerfile\\n│   │   │   │   ├── README.md\\n│   │   │   │   └── pyproject.toml\\n│   │   │   ├── utils\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── events.py\\n│   │   │   │   ├── find_replace.py\\n│   │   │   │   ├── git.py\\n│   │   │   │   ├── github.py\\n│   │   │   │   ├── packages.py\\n│   │   │   │   └── pyproject.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── _version.py\\n│   │   │   ├── cli.py\\n│   │   │   ├── constants.py\\n│   │   │   └── dev_scripts.py\\n│   │   ├── scripts\\n│   │   │   └── generate_migrations.py\\n│   │   ├── tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── test_compile.py\\n│   │   │   └── unit_tests\\n│   │   │       ├── migrate\\n│   │   │       ├── test_events.py\\n│   │   │       └── test_utils.py\\n│   │   ├── DOCS.md\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── poetry.toml\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   ├── core\\n│   │   ├── langchain_core\\n│   │   │   ├── _api\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── beta_decorator.py\\n│   │   │   │   ├── deprecation.py\\n│   │   │   │   ├── internal.py\\n│   │   │   │   └── path.py\\n│   │   │   ├── callbacks\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── file.py\\n│   │   │   │   ├── manager.py\\n│   │   │   │   ├── stdout.py\\n│   │   │   │   ├── streaming_stdout.py\\n│   │   │   │   └── usage.py\\n│   │   │   ├── document_loaders\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── blob_loaders.py\\n│   │   │   │   └── langsmith.py\\n│   │   │   ├── documents\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── compressor.py\\n│   │   │   │   └── transformers.py\\n│   │   │   ├── embeddings\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── embeddings.py\\n│   │   │   │   └── fake.py\\n│   │   │   ├── example_selectors\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── length_based.py\\n│   │   │   │   └── semantic_similarity.py\\n│   │   │   ├── indexing\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── api.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   └── in_memory.py\\n│   │   │   ├── language_models\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── _utils.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── chat_models.py\\n│   │   │   │   ├── fake.py\\n│   │   │   │   ├── fake_chat_models.py\\n│   │   │   │   └── llms.py\\n│   │   │   ├── load\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── dump.py\\n│   │   │   │   ├── load.py\\n│   │   │   │   ├── mapping.py\\n│   │   │   │   └── serializable.py\\n│   │   │   ├── messages\\n│   │   │   │   ├── block_translators\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── ai.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── chat.py\\n│   │   │   │   ├── content.py\\n│   │   │   │   ├── function.py\\n│   │   │   │   ├── human.py\\n│   │   │   │   ├── modifier.py\\n│   │   │   │   ├── system.py\\n│   │   │   │   ├── tool.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── output_parsers\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── format_instructions.py\\n│   │   │   │   ├── json.py\\n│   │   │   │   ├── list.py\\n│   │   │   │   ├── openai_functions.py\\n│   │   │   │   ├── openai_tools.py\\n│   │   │   │   ├── pydantic.py\\n│   │   │   │   ├── string.py\\n│   │   │   │   ├── transform.py\\n│   │   │   │   └── xml.py\\n│   │   │   ├── outputs\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── chat_generation.py\\n│   │   │   │   ├── chat_result.py\\n│   │   │   │   ├── generation.py\\n│   │   │   │   ├── llm_result.py\\n│   │   │   │   └── run_info.py\\n│   │   │   ├── prompts\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── chat.py\\n│   │   │   │   ├── dict.py\\n│   │   │   │   ├── few_shot.py\\n│   │   │   │   ├── few_shot_with_templates.py\\n│   │   │   │   ├── image.py\\n│   │   │   │   ├── loading.py\\n│   │   │   │   ├── message.py\\n│   │   │   │   ├── prompt.py\\n│   │   │   │   ├── string.py\\n│   │   │   │   └── structured.py\\n│   │   │   ├── runnables\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── branch.py\\n│   │   │   │   ├── config.py\\n│   │   │   │   ├── configurable.py\\n│   │   │   │   ├── fallbacks.py\\n│   │   │   │   ├── graph.py\\n│   │   │   │   ├── graph_ascii.py\\n│   │   │   │   ├── graph_mermaid.py\\n│   │   │   │   ├── graph_png.py\\n│   │   │   │   ├── history.py\\n│   │   │   │   ├── passthrough.py\\n│   │   │   │   ├── retry.py\\n│   │   │   │   ├── router.py\\n│   │   │   │   ├── schema.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── tools\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── convert.py\\n│   │   │   │   ├── render.py\\n│   │   │   │   ├── retriever.py\\n│   │   │   │   ├── simple.py\\n│   │   │   │   └── structured.py\\n│   │   │   ├── tracers\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── _streaming.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── context.py\\n│   │   │   │   ├── core.py\\n│   │   │   │   ├── evaluation.py\\n│   │   │   │   ├── event_stream.py\\n│   │   │   │   ├── langchain.py\\n│   │   │   │   ├── log_stream.py\\n│   │   │   │   ├── memory_stream.py\\n│   │   │   │   ├── root_listeners.py\\n│   │   │   │   ├── run_collector.py\\n│   │   │   │   ├── schemas.py\\n│   │   │   │   └── stdout.py\\n│   │   │   ├── utils\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── _merge.py\\n│   │   │   │   ├── aiter.py\\n│   │   │   │   ├── env.py\\n│   │   │   │   ├── formatting.py\\n│   │   │   │   ├── function_calling.py\\n│   │   │   │   ├── html.py\\n│   │   │   │   ├── image.py\\n│   │   │   │   ├── input.py\\n│   │   │   │   ├── interactive_env.py\\n│   │   │   │   ├── iter.py\\n│   │   │   │   ├── json.py\\n│   │   │   │   ├── json_schema.py\\n│   │   │   │   ├── mustache.py\\n│   │   │   │   ├── pydantic.py\\n│   │   │   │   ├── strings.py\\n│   │   │   │   ├── usage.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── vectorstores\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── in_memory.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── __init__.py\\n│   │   │   ├── _import_utils.py\\n│   │   │   ├── agents.py\\n│   │   │   ├── caches.py\\n│   │   │   ├── chat_history.py\\n│   │   │   ├── chat_loaders.py\\n│   │   │   ├── chat_sessions.py\\n│   │   │   ├── env.py\\n│   │   │   ├── exceptions.py\\n│   │   │   ├── globals.py\\n│   │   │   ├── prompt_values.py\\n│   │   │   ├── rate_limiters.py\\n│   │   │   ├── retrievers.py\\n│   │   │   ├── stores.py\\n│   │   │   ├── structured_query.py\\n│   │   │   ├── sys_info.py\\n│   │   │   └── version.py\\n│   │   ├── scripts\\n│   │   │   ├── check_imports.py\\n│   │   │   └── lint_imports.sh\\n│   │   ├── tests\\n│   │   │   ├── benchmarks\\n│   │   │   │   ├── test_async_callbacks.py\\n│   │   │   │   └── test_imports.py\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── test_compile.py\\n│   │   │   └── unit_tests\\n│   │   │       ├── _api\\n│   │   │       ├── caches\\n│   │   │       ├── callbacks\\n│   │   │       ├── chat_history\\n│   │   │       ├── data\\n│   │   │       ├── document_loaders\\n│   │   │       ├── documents\\n│   │   │       ├── embeddings\\n│   │   │       ├── example_selectors\\n│   │   │       ├── examples\\n│   │   │       ├── fake\\n│   │   │       ├── indexing\\n│   │   │       ├── language_models\\n│   │   │       ├── load\\n│   │   │       ├── messages\\n│   │   │       ├── output_parsers\\n│   │   │       ├── outputs\\n│   │   │       ├── prompts\\n│   │   │       ├── rate_limiters\\n│   │   │       ├── runnables\\n│   │   │       ├── stores\\n│   │   │       ├── tracers\\n│   │   │       ├── utils\\n│   │   │       ├── vectorstores\\n│   │   │       ├── conftest.py\\n│   │   │       ├── prompt_file.txt\\n│   │   │       ├── pydantic_utils.py\\n│   │   │       ├── stubs.py\\n│   │   │       ├── test_globals.py\\n│   │   │       ├── test_imports.py\\n│   │   │       ├── test_messages.py\\n│   │   │       ├── test_outputs.py\\n│   │   │       ├── test_prompt_values.py\\n│   │   │       ├── test_pydantic_imports.py\\n│   │   │       ├── test_pydantic_serde.py\\n│   │   │       ├── test_setup.py\\n│   │   │       ├── test_sys_info.py\\n│   │   │       └── test_tools.py\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── extended_testing_deps.txt\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   ├── langchain\\n│   │   ├── langchain_classic\\n│   │   │   ├── _api\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── deprecation.py\\n│   │   │   │   ├── interactive_env.py\\n│   │   │   │   ├── module_import.py\\n│   │   │   │   └── path.py\\n│   │   │   ├── adapters\\n│   │   │   │   └── openai.py\\n│   │   │   ├── agents\\n│   │   │   │   ├── agent_toolkits\\n│   │   │   │   ├── chat\\n│   │   │   │   ├── conversational\\n│   │   │   │   ├── conversational_chat\\n│   │   │   │   ├── format_scratchpad\\n│   │   │   │   ├── json_chat\\n│   │   │   │   ├── mrkl\\n│   │   │   │   ├── openai_assistant\\n│   │   │   │   ├── openai_functions_agent\\n│   │   │   │   ├── openai_functions_multi_agent\\n│   │   │   │   ├── openai_tools\\n│   │   │   │   ├── output_parsers\\n│   │   │   │   ├── react\\n│   │   │   │   ├── self_ask_with_search\\n│   │   │   │   ├── structured_chat\\n│   │   │   │   ├── tool_calling_agent\\n│   │   │   │   ├── xml\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── agent.py\\n│   │   │   │   ├── agent_iterator.py\\n│   │   │   │   ├── agent_types.py\\n│   │   │   │   ├── initialize.py\\n│   │   │   │   ├── load_tools.py\\n│   │   │   │   ├── loading.py\\n│   │   │   │   ├── schema.py\\n│   │   │   │   ├── tools.py\\n│   │   │   │   ├── types.py\\n│   │   │   │   └── utils.py\\n│   │   │   ├── callbacks\\n│   │   │   │   ├── streamlit\\n│   │   │   │   ├── tracers\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── aim_callback.py\\n│   │   │   │   ├── argilla_callback.py\\n│   │   │   │   ├── arize_callback.py\\n│   │   │   │   ├── arthur_callback.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── clearml_callback.py\\n│   │   │   │   ├── comet_ml_callback.py\\n│   │   │   │   ├── confident_callback.py\\n│   │   │   │   ├── context_callback.py\\n│   │   │   │   ├── file.py\\n│   │   │   │   ├── flyte_callback.py\\n│   │   │   │   ├── human.py\\n│   │   │   │   ├── infino_callback.py\\n│   │   │   │   ├── labelstudio_callback.py\\n│   │   │   │   ├── llmonitor_callback.py\\n│   │   │   │   ├── manager.py\\n│   │   │   │   ├── mlflow_callback.py\\n│   │   │   │   ├── openai_info.py\\n│   │   │   │   ├── promptlayer_callback.py\\n│   │   │   │   ├── sagemaker_callback.py\\n│   │   │   │   ├── stdout.py\\n│   │   │   │   ├── streaming_aiter.py\\n│   │   │   │   ├── streaming_aiter_final_only.py\\n│   │   │   │   ├── streaming_stdout.py\\n│   │   │   │   ├── streaming_stdout_final_only.py\\n│   │   │   │   ├── trubrics_callback.py\\n│   │   │   │   ├── utils.py\\n│   │   │   │   ├── wandb_callback.py\\n│   │   │   │   └── whylabs_callback.py\\n│   │   │   ├── chains\\n│   │   │   │   ├── api\\n│   │   │   │   ├── chat_vector_db\\n│   │   │   │   ├── combine_documents\\n│   │   │   │   ├── constitutional_ai\\n│   │   │   │   ├── conversation\\n│   │   │   │   ├── conversational_retrieval\\n│   │   │   │   ├── elasticsearch_database\\n│   │   │   │   ├── ernie_functions\\n│   │   │   │   ├── flare\\n│   │   │   │   ├── graph_qa\\n│   │   │   │   ├── hyde\\n│   │   │   │   ├── llm_bash\\n│   │   │   │   ├── llm_checker\\n│   │   │   │   ├── llm_math\\n│   │   │   │   ├── llm_summarization_checker\\n│   │   │   │   ├── llm_symbolic_math\\n│   │   │   │   ├── natbot\\n│   │   │   │   ├── openai_functions\\n│   │   │   │   ├── openai_tools\\n│   │   │   │   ├── qa_generation\\n│   │   │   │   ├── qa_with_sources\\n│   │   │   │   ├── query_constructor\\n│   │   │   │   ├── question_answering\\n│   │   │   │   ├── retrieval_qa\\n│   │   │   │   ├── router\\n│   │   │   │   ├── sql_database\\n│   │   │   │   ├── structured_output\\n│   │   │   │   ├── summarize\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── example_generator.py\\n│   │   │   │   ├── history_aware_retriever.py\\n│   │   │   │   ├── llm.py\\n│   │   │   │   ├── llm_requests.py\\n│   │   │   │   ├── loading.py\\n│   │   │   │   ├── mapreduce.py\\n│   │   │   │   ├── moderation.py\\n│   │   │   │   ├── prompt_selector.py\\n│   │   │   │   ├── retrieval.py\\n│   │   │   │   ├── sequential.py\\n│   │   │   │   └── transform.py\\n│   │   │   ├── chat_loaders\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── facebook_messenger.py\\n│   │   │   │   ├── gmail.py\\n│   │   │   │   ├── imessage.py\\n│   │   │   │   ├── langsmith.py\\n│   │   │   │   ├── slack.py\\n│   │   │   │   ├── telegram.py\\n│   │   │   │   ├── utils.py\\n│   │   │   │   └── whatsapp.py\\n│   │   │   ├── chat_models\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── anthropic.py\\n│   │   │   │   ├── anyscale.py\\n│   │   │   │   ├── azure_openai.py\\n│   │   │   │   ├── azureml_endpoint.py\\n│   │   │   │   ├── baichuan.py\\n│   │   │   │   ├── baidu_qianfan_endpoint.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── bedrock.py\\n│   │   │   │   ├── cohere.py\\n│   │   │   │   ├── databricks.py\\n│   │   │   │   ├── ernie.py\\n│   │   │   │   ├── everlyai.py\\n│   │   │   │   ├── fake.py\\n│   │   │   │   ├── fireworks.py\\n│   │   │   │   ├── gigachat.py\\n│   │   │   │   ├── google_palm.py\\n│   │   │   │   ├── human.py\\n│   │   │   │   ├── hunyuan.py\\n│   │   │   │   ├── javelin_ai_gateway.py\\n│   │   │   │   ├── jinachat.py\\n│   │   │   │   ├── konko.py\\n│   │   │   │   ├── litellm.py\\n│   │   │   │   ├── meta.py\\n│   │   │   │   ├── minimax.py\\n│   │   │   │   ├── mlflow.py\\n│   │   │   │   ├── mlflow_ai_gateway.py\\n│   │   │   │   ├── ollama.py\\n│   │   │   │   ├── openai.py\\n│   │   │   │   ├── pai_eas_endpoint.py\\n│   │   │   │   ├── promptlayer_openai.py\\n│   │   │   │   ├── tongyi.py\\n│   │   │   │   ├── vertexai.py\\n│   │   │   │   ├── volcengine_maas.py\\n│   │   │   │   └── yandex.py\\n│   │   │   ├── docstore\\n│   │   │   │   ├── __init__.py\\n│   │   │   │   ├── arbitrary_fn.py\\n│   │   │   │   ├── base.py\\n│   │   │   │   ├── document.py\\n│   │   │   │   ├── in_memory.py\\n│   │   │   │   └── wikipedia.py\\n│   │   │   ├── document_loaders\\n│   │   │   │   └── ... 119 files, 0 dirs not shown\\n│   │   │   ├── document_transformers\\n│   │   │   │   └── ... 11 files, 1 dirs not shown\\n│   │   │   ├── embeddings\\n│   │   │   │   └── ... 51 files, 0 dirs not shown\\n│   │   │   ├── evaluation\\n│   │   │   │   └── ... 3 files, 10 dirs not shown\\n│   │   │   ├── graphs\\n│   │   │   │   └── ... 13 files, 0 dirs not shown\\n│   │   │   ├── indexes\\n│   │   │   │   └── ... 5 files, 1 dirs not shown\\n│   │   │   ├── llms\\n│   │   │   │   └── ... 83 files, 0 dirs not shown\\n│   │   │   ├── load\\n│   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   ├── memory\\n│   │   │   │   └── ... 18 files, 1 dirs not shown\\n│   │   │   ├── output_parsers\\n│   │   │   │   └── ... 23 files, 0 dirs not shown\\n│   │   │   ├── prompts\\n│   │   │   │   └── ... 7 files, 1 dirs not shown\\n│   │   │   ├── retrievers\\n│   │   │   │   └── ... 44 files, 2 dirs not shown\\n│   │   │   ├── runnables\\n│   │   │   │   └── ... 3 files, 0 dirs not shown\\n│   │   │   ├── schema\\n│   │   │   │   └── ... 18 files, 2 dirs not shown\\n│   │   │   ├── smith\\n│   │   │   │   └── ... 1 files, 1 dirs not shown\\n│   │   │   ├── storage\\n│   │   │   │   └── ... 8 files, 0 dirs not shown\\n│   │   │   ├── tools\\n│   │   │   │   └── ... 8 files, 64 dirs not shown\\n│   │   │   ├── utilities\\n│   │   │   │   └── ... 58 files, 0 dirs not shown\\n│   │   │   ├── utils\\n│   │   │   │   └── ... 15 files, 0 dirs not shown\\n│   │   │   ├── vectorstores\\n│   │   │   │   └── ... 68 files, 2 dirs not shown\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base_language.py\\n│   │   │   ├── base_memory.py\\n│   │   │   ├── cache.py\\n│   │   │   ├── env.py\\n│   │   │   ├── example_generator.py\\n│   │   │   ├── formatting.py\\n│   │   │   ├── globals.py\\n│   │   │   ├── hub.py\\n│   │   │   ├── input.py\\n│   │   │   ├── model_laboratory.py\\n│   │   │   ├── python.py\\n│   │   │   ├── requests.py\\n│   │   │   ├── serpapi.py\\n│   │   │   ├── sql_database.py\\n│   │   │   └── text_splitter.py\\n│   │   ├── scripts\\n│   │   │   ├── check_imports.py\\n│   │   │   └── lint_imports.sh\\n│   │   ├── tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── ... 5 files, 8 dirs not shown\\n│   │   │   ├── mock_servers/robot\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   ├── unit_tests\\n│   │   │   │   └── ... 10 files, 28 dirs not shown\\n│   │   │   ├── README.md\\n│   │   │   ├── __init__.py\\n│   │   │   └── data.py\\n│   │   ├── .flake8\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── dev.Dockerfile\\n│   │   ├── extended_testing_deps.txt\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   ├── langchain_v1\\n│   │   ├── langchain\\n│   │   │   ├── agents\\n│   │   │   │   └── ... 3 files, 1 dirs not shown\\n│   │   │   ├── chat_models\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── embeddings\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── messages\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   ├── rate_limiters\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   ├── tools\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   └── __init__.py\\n│   │   ├── scripts\\n│   │   │   └── check_imports.py\\n│   │   ├── tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── ... 3 files, 4 dirs not shown\\n│   │   │   ├── unit_tests\\n│   │   │   │   └── ... 5 files, 4 dirs not shown\\n│   │   │   └── __init__.py\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── extended_testing_deps.txt\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   ├── partners\\n│   │   ├── anthropic\\n│   │   │   ├── langchain_anthropic\\n│   │   │   │   └── ... 7 files, 1 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── chroma\\n│   │   │   ├── langchain_chroma\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── deepseek\\n│   │   │   ├── langchain_deepseek\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── exa\\n│   │   │   ├── langchain_exa\\n│   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── fireworks\\n│   │   │   ├── langchain_fireworks\\n│   │   │   │   └── ... 6 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── groq\\n│   │   │   ├── langchain_groq\\n│   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 3 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── huggingface\\n│   │   │   ├── langchain_huggingface\\n│   │   │   │   └── ... 1 files, 4 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── mistralai\\n│   │   │   ├── langchain_mistralai\\n│   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── nomic\\n│   │   │   ├── langchain_nomic\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── ollama\\n│   │   │   ├── langchain_ollama\\n│   │   │   │   └── ... 6 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── openai\\n│   │   │   ├── langchain_openai\\n│   │   │   │   └── ... 1 files, 6 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 1 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── perplexity\\n│   │   │   ├── langchain_perplexity\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── prompty\\n│   │   │   ├── langchain_prompty\\n│   │   │   │   └── ... 6 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── qdrant\\n│   │   │   ├── langchain_qdrant\\n│   │   │   │   └── ... 6 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   ├── xai\\n│   │   │   ├── langchain_xai\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── scripts\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── tests\\n│   │   │   │   └── ... 0 files, 2 dirs not shown\\n│   │   │   ├── Makefile\\n│   │   │   ├── README.md\\n│   │   │   ├── pyproject.toml\\n│   │   │   └── uv.lock\\n│   │   └── README.md\\n│   ├── standard-tests\\n│   │   ├── langchain_tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── ... 9 files, 0 dirs not shown\\n│   │   │   ├── unit_tests\\n│   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   ├── utils\\n│   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base.py\\n│   │   │   └── conftest.py\\n│   │   ├── scripts\\n│   │   │   ├── check_imports.py\\n│   │   │   └── lint_imports.sh\\n│   │   ├── tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   └── unit_tests\\n│   │   │       └── ... 9 files, 0 dirs not shown\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   ├── text-splitters\\n│   │   ├── langchain_text_splitters\\n│   │   │   ├── xsl\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   ├── __init__.py\\n│   │   │   ├── base.py\\n│   │   │   ├── character.py\\n│   │   │   ├── html.py\\n│   │   │   ├── json.py\\n│   │   │   ├── jsx.py\\n│   │   │   ├── konlpy.py\\n│   │   │   ├── latex.py\\n│   │   │   ├── markdown.py\\n│   │   │   ├── nltk.py\\n│   │   │   ├── python.py\\n│   │   │   ├── sentence_transformers.py\\n│   │   │   └── spacy.py\\n│   │   ├── scripts\\n│   │   │   ├── check_imports.py\\n│   │   │   └── lint_imports.sh\\n│   │   ├── tests\\n│   │   │   ├── integration_tests\\n│   │   │   │   └── ... 3 files, 0 dirs not shown\\n│   │   │   ├── test_data\\n│   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   └── unit_tests\\n│   │   │       └── ... 3 files, 0 dirs not shown\\n│   │   ├── Makefile\\n│   │   ├── README.md\\n│   │   ├── extended_testing_deps.txt\\n│   │   ├── pyproject.toml\\n│   │   └── uv.lock\\n│   └── README.md\\n├── AGENTS.md\\n├── CLAUDE.md\\n├── MIGRATE.md\\n├── README.md\\n├── SECURITY.md\\n├── pyproject.toml\\n└── uv.lock\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"f3d7152074f3f19c2387dae685d1646d2d1cb286","last_commit_update":"2025-10-24T16:06:24-04:00","gmt_create":"2025-10-26T10:57:54.190384+08:00","gmt_modified":"2025-10-26T12:24:07.593925+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"master\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}